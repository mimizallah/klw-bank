(this["webpackJsonpklw-bank"]=this["webpackJsonpklw-bank"]||[]).push([[163],{103:function(e,t,n){"use strict";var a,i,r,o,l,s,u;n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return i})),n.d(t,"d",(function(){return a})),n.d(t,"e",(function(){return u})),n.d(t,"f",(function(){return o})),n.d(t,"g",(function(){return l})),function(e){e[e.FILL=0]="FILL",e[e.LINE=1]="LINE",e[e.MARKER=2]="MARKER",e[e.TEXT=3]="TEXT",e[e.LABEL=4]="LABEL"}(a||(a={})),function(e){e[e.NONE=0]="NONE",e[e.MAP=1]="MAP",e[e.LABEL=2]="LABEL",e[e.LABEL_ALPHA=4]="LABEL_ALPHA",e[e.HITTEST=8]="HITTEST",e[e.HIGHLIGHT=16]="HIGHLIGHT",e[e.CLIP=32]="CLIP",e[e.DEBUG=64]="DEBUG",e[e.NUM_DRAW_PHASES=9]="NUM_DRAW_PHASES"}(i||(i={})),function(e){e[e.SIZE=0]="SIZE",e[e.COLOR=1]="COLOR",e[e.OPACITY=2]="OPACITY",e[e.ROTATION=3]="ROTATION"}(r||(r={})),function(e){e[e.NONE=0]="NONE",e[e.OPACITY=1]="OPACITY",e[e.COLOR=2]="COLOR",e[e.ROTATION=4]="ROTATION",e[e.SIZE_MINMAX_VALUE=8]="SIZE_MINMAX_VALUE",e[e.SIZE_SCALE_STOPS=16]="SIZE_SCALE_STOPS",e[e.SIZE_FIELD_STOPS=32]="SIZE_FIELD_STOPS",e[e.SIZE_UNIT_VALUE=64]="SIZE_UNIT_VALUE"}(o||(o={})),function(e){e[e.MINMAX_TARGETS_OUTLINE=128]="MINMAX_TARGETS_OUTLINE",e[e.SCALE_TARGETS_OUTLINE=256]="SCALE_TARGETS_OUTLINE",e[e.FIELD_TARGETS_OUTLINE=512]="FIELD_TARGETS_OUTLINE",e[e.UNIT_TARGETS_OUTLINE=1024]="UNIT_TARGETS_OUTLINE"}(l||(l={})),function(e){e[e.SPRITE=0]="SPRITE",e[e.GLYPH=1]="GLYPH"}(s||(s={})),function(e){e[e.DEFAULT=0]="DEFAULT",e[e.SIMPLE=1]="SIMPLE",e[e.DOT_DENSITY=2]="DOT_DENSITY",e[e.OUTLINE_FILL=3]="OUTLINE_FILL",e[e.OUTLINE_FILL_SIMPLE=4]="OUTLINE_FILL_SIMPLE",e[e.HEATMAP=5]="HEATMAP",e[e.PIE_CHART=6]="PIE_CHART"}(u||(u={}))},115:function(e,t,n){"use strict";n.d(t,"a",(function(){return E})),n.d(t,"b",(function(){return L})),n.d(t,"c",(function(){return C})),n.d(t,"d",(function(){return I})),n.d(t,"e",(function(){return b})),n.d(t,"f",(function(){return A})),n.d(t,"g",(function(){return h})),n.d(t,"h",(function(){return g})),n.d(t,"i",(function(){return p})),n.d(t,"j",(function(){return y})),n.d(t,"k",(function(){return m}));var a=n(107),i=n(106),r=n(90),o=n(91),l=n(89),s=n(88),u=n(34),c=n(1),f=n(101),d=n(155),v=n(103);var _=Object.keys(v.e).filter((function(e){return"number"==typeof v.e[e]})).reduce((function(e,t){return Object(c.a)(Object(c.a)({},e),{},Object(u.a)({},t,v.e[t]))}),{});function m(e){return e===v.e.OUTLINE_FILL||e===v.e.OUTLINE_FILL_SIMPLE}function p(e){return function(e){return e===v.e.SIMPLE||e===v.e.OUTLINE_FILL_SIMPLE}(e.symbologyType)}function g(e){return m(e.symbologyType)}function h(e,t){switch(e){case v.d.FILL:return E.from(t);case v.d.LINE:return C.from(t);case v.d.MARKER:return I.from(t);case v.d.TEXT:return A.from(t);case v.d.LABEL:return L.from(t);default:throw new Error("Unable to createMaterialKey for unknown geometryType ".concat(e))}}function y(e){switch(b.load(e).geometryType){case v.d.MARKER:return new I(e);case v.d.FILL:return new E(e);case v.d.LINE:return new C(e);case v.d.TEXT:return new A(e);case v.d.LABEL:return new L(e)}}var b=function(){function e(t){Object(l.a)(this,e),this._data=0,this._data=t}return Object(s.a)(e,[{key:"data",get:function(){return this._data},set:function(e){this._data=null!==e&&void 0!==e?e:0}},{key:"geometryType",get:function(){return this.bits(8,11)},set:function(e){this.setBits(e,8,11)}},{key:"mapAligned",get:function(){return!!this.bit(20)},set:function(e){this.setBit(20,e)}},{key:"sdf",get:function(){return!!this.bit(11)},set:function(e){this.setBit(11,null!==e&&void 0!==e&&e)}},{key:"pattern",get:function(){return!!this.bit(12)},set:function(e){this.setBit(12,e)}},{key:"textureBinding",get:function(){return this.bits(0,8)},set:function(e){this.setBits(e,0,8)}},{key:"symbologyType",get:function(){return this.bits(21,26)},set:function(e){this.setBits(e,21,26)}},{key:"geometryTypeString",get:function(){switch(this.geometryType){case v.d.FILL:return"fill";case v.d.MARKER:return"marker";case v.d.LINE:return"line";case v.d.TEXT:return"text";case v.d.LABEL:return"label";default:throw new f.a("Unable to handle unknown geometryType: ".concat(this.geometryType))}}},{key:"setBit",value:function(e,t){var n=1<<e;t?this._data|=n:this._data&=~n}},{key:"bit",value:function(e){return(this._data&1<<e)>>e}},{key:"setBits",value:function(e,t,n){for(var a=t,i=0;a<n;a++,i++)this.setBit(a,0!=(e&1<<i))}},{key:"bits",value:function(e,t){for(var n=0,a=e,i=0;a<t;a++,i++)n|=this.bit(a)<<i;return n}},{key:"hasVV",value:function(){return!1}},{key:"setVV",value:function(e,t){}},{key:"getVariation",value:function(){return{mapAligned:this.mapAligned,pattern:this.pattern,sdf:this.sdf,symbologyType:{value:v.e[this.symbologyType],options:_,namespace:"SYMBOLOGY_TYPE"}}}},{key:"getVariationHash",value:function(){return this._data&~(7&this.textureBinding)}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}}]),e}();b.shared=new b(0);var x=function(e){return function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"vvSizeMinMaxValue",get:function(){return 0!==this.bit(16)},set:function(e){this.setBit(16,e)}},{key:"vvSizeScaleStops",get:function(){return 0!==this.bit(17)},set:function(e){this.setBit(17,e)}},{key:"vvSizeFieldStops",get:function(){return 0!==this.bit(18)},set:function(e){this.setBit(18,e)}},{key:"vvSizeUnitValue",get:function(){return 0!==this.bit(19)},set:function(e){this.setBit(19,e)}},{key:"hasSizeVV",value:function(){return this.vvSizeMinMaxValue||this.vvSizeScaleStops||this.vvSizeFieldStops||this.vvSizeUnitValue}},{key:"hasVV",value:function(){return Object(a.a)(Object(i.a)(n.prototype),"hasVV",this).call(this)||this.hasSizeVV()}},{key:"setVV",value:function(e,t){Object(a.a)(Object(i.a)(n.prototype),"setVV",this).call(this,e,t);var r=function(e,t,n){var a=v.f.SIZE_FIELD_STOPS|v.f.SIZE_MINMAX_VALUE|v.f.SIZE_SCALE_STOPS|v.f.SIZE_UNIT_VALUE,i=(t&(v.g.FIELD_TARGETS_OUTLINE|v.g.MINMAX_TARGETS_OUTLINE|v.g.SCALE_TARGETS_OUTLINE|v.g.UNIT_TARGETS_OUTLINE))>>>4;return e===v.d.LINE&&n.isOutline||e===v.d.FILL&&m(n.symbologyType)?a&i:a&~i}(this.geometryType,e,t)&e;this.vvSizeMinMaxValue=!!(r&v.f.SIZE_MINMAX_VALUE),this.vvSizeFieldStops=!!(r&v.f.SIZE_FIELD_STOPS),this.vvSizeUnitValue=!!(r&v.f.SIZE_UNIT_VALUE),this.vvSizeScaleStops=!!(r&v.f.SIZE_SCALE_STOPS)}}]),n}(e)},O=function(e){return function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"vvRotation",get:function(){return 0!==this.bit(15)},set:function(e){this.setBit(15,e)}},{key:"hasVV",value:function(){return Object(a.a)(Object(i.a)(n.prototype),"hasVV",this).call(this)||this.vvRotation}},{key:"setVV",value:function(e,t){Object(a.a)(Object(i.a)(n.prototype),"setVV",this).call(this,e,t),this.vvRotation=!t.isOutline&&!!(e&v.f.ROTATION)}}]),n}(e)},S=function(e){return function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"vvColor",get:function(){return 0!==this.bit(13)},set:function(e){this.setBit(13,e)}},{key:"hasVV",value:function(){return Object(a.a)(Object(i.a)(n.prototype),"hasVV",this).call(this)||this.vvColor}},{key:"setVV",value:function(e,t){Object(a.a)(Object(i.a)(n.prototype),"setVV",this).call(this,e,t),this.vvColor=!t.isOutline&&!!(e&v.f.COLOR)}}]),n}(e)},T=function(e){return function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"vvOpacity",get:function(){return 0!==this.bit(14)},set:function(e){this.setBit(14,e)}},{key:"hasVV",value:function(){return Object(a.a)(Object(i.a)(n.prototype),"hasVV",this).call(this)||this.vvOpacity}},{key:"setVV",value:function(e,t){Object(a.a)(Object(i.a)(n.prototype),"setVV",this).call(this,e,t),this.vvOpacity=!t.isOutline&&!!(e&v.f.OPACITY)}}]),n}(e)},E=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"getVariation",value:function(){return Object(c.a)(Object(c.a)({},Object(a.a)(Object(i.a)(n.prototype),"getVariation",this).call(this)),{},{vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e){var t=e.symbologyType,n=e.vvFlags,a=this.load(0);return a.geometryType=v.d.FILL,a.symbologyType=t,t!==v.e.DOT_DENSITY&&a.setVV(n,e),a.data}}]),n}(S(T(x(b))));E.shared=new E(0);var I=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"getVariation",value:function(){return Object(c.a)(Object(c.a)({},Object(a.a)(Object(i.a)(n.prototype),"getVariation",this).call(this)),{},{vvColor:this.vvColor,vvRotation:this.vvRotation,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e){var t=e.symbologyType,n=e.vvFlags,a=this.load(0);return a.geometryType=v.d.MARKER,a.symbologyType=t,t!==v.e.HEATMAP&&a.setVV(n,e),a.data}}]),n}(S(T(O(x(b)))));I.shared=new I(0);var C=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"getVariation",value:function(){return Object(c.a)(Object(c.a)({},Object(a.a)(Object(i.a)(n.prototype),"getVariation",this).call(this)),{},{vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e){var t=this.load(0);return t.geometryType=v.d.LINE,t.symbologyType=e.symbologyType,t.setVV(e.vvFlags,e),t.data}}]),n}(S(T(x(b))));C.shared=new C(0);var A=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"getVariation",value:function(){return Object(c.a)(Object(c.a)({},Object(a.a)(Object(i.a)(n.prototype),"getVariation",this).call(this)),{},{vvColor:this.vvColor,vvOpacity:this.vvOpacity,vvRotation:this.vvRotation,vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e){var t=this.load(0);return t.geometryType=v.d.TEXT,t.symbologyType=e.symbologyType,t.setVV(e.vvFlags,e),t.data}}]),n}(S(T(O(x(b)))));A.shared=new A(0);var L=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(l.a)(this,n),t.apply(this,arguments)}return Object(s.a)(n,[{key:"getVariation",value:function(){return Object(c.a)(Object(c.a)({},Object(a.a)(Object(i.a)(n.prototype),"getVariation",this).call(this)),{},{vvSizeFieldStops:this.vvSizeFieldStops,vvSizeMinMaxValue:this.vvSizeMinMaxValue,vvSizeScaleStops:this.vvSizeScaleStops,vvSizeUnitValue:this.vvSizeUnitValue})}}],[{key:"load",value:function(e){var t=this.shared;return t.data=e,t}},{key:"from",value:function(e){var t=this.load(0);return t.geometryType=v.d.LABEL,t.symbologyType=e.symbologyType,t.setVV(e.vvFlags,e),t.mapAligned=Object(d.i)(e.placement),t.data}}]),n}(x(b));L.shared=new L(0)},117:function(e,t,n){"use strict";n.d(t,"a",(function(){return Y})),n.d(t,"b",(function(){return z})),n.d(t,"c",(function(){return F})),n.d(t,"d",(function(){return ve})),n.d(t,"e",(function(){return H})),n.d(t,"f",(function(){return W})),n.d(t,"g",(function(){return $})),n.d(t,"h",(function(){return ee})),n.d(t,"i",(function(){return U})),n.d(t,"j",(function(){return B})),n.d(t,"k",(function(){return de})),n.d(t,"l",(function(){return Z})),n.d(t,"m",(function(){return q})),n.d(t,"n",(function(){return L})),n.d(t,"o",(function(){return ae})),n.d(t,"p",(function(){return G})),n.d(t,"q",(function(){return se})),n.d(t,"r",(function(){return j})),n.d(t,"s",(function(){return re})),n.d(t,"t",(function(){return ne})),n.d(t,"u",(function(){return me})),n.d(t,"v",(function(){return k})),n.d(t,"w",(function(){return le})),n.d(t,"x",(function(){return ce})),n.d(t,"y",(function(){return te})),n.d(t,"z",(function(){return ue})),n.d(t,"A",(function(){return fe})),n.d(t,"B",(function(){return V}));var a=n(34),i=n(92),r=n(101),o=n(102),l=n(114),s=n(103),u=n(100),c=n(160),f=o.a.getLogger("esri.views.2d.engine.webgl.Utils"),d="geometry",v=[{name:d,strideInBytes:12}],_=[{name:d,strideInBytes:36}],m=[{name:d,strideInBytes:24}],p=[{name:d,strideInBytes:12}],g=[{name:d,strideInBytes:40}],h=[{name:d,strideInBytes:36}],y=[{name:d,strideInBytes:36}];function b(e){var t,n={},a=Object(i.a)(e);try{for(a.s();!(t=a.n()).done;){var r=t.value;n[r.name]=r.strideInBytes}}catch(o){a.e(o)}finally{a.f()}return n}var x=b([{name:d,strideInBytes:36}]),O=b(v),S=b(_),T=b(m),E=b(p),I=b(g),C=b(h),A=b(y);function L(e,t){switch(e){case s.d.MARKER:return t===s.e.HEATMAP?O:x;case s.d.FILL:switch(t){case s.e.DOT_DENSITY:return E;case s.e.SIMPLE:case s.e.OUTLINE_FILL_SIMPLE:return T;default:return S}case s.d.LINE:return I;case s.d.TEXT:return C;case s.d.LABEL:return A}}var P=[d],R=[d],D=[d],M=[d],w=[d];function N(e){switch(e){case s.d.MARKER:return P;case s.d.FILL:return R;case s.d.LINE:return D;case s.d.TEXT:return M;case s.d.LABEL:return w}}function V(e){switch(e%4){case 0:case 2:return 4;case 1:case 3:return 1}}function z(e,t){switch(t%4){case 0:case 2:return new Uint32Array(Math.floor(e*t/4));case 1:case 3:return new Uint8Array(e*t)}}function F(e,t){switch(t%4){case 0:case 2:return new Uint32Array(e);case 1:case 3:return new Uint8Array(e)}}function j(e){return null!=e}function k(e){return"number"==typeof e}function U(e){switch(e){case"butt":return l.e.BUTT;case"round":return l.e.ROUND;case"square":return l.e.SQUARE;default:return f.error(new r.a("mapview-invalid-type","Cap type ".concat(e," is not a valid option. Defaulting to round"))),l.e.ROUND}}function B(e){switch(e){case"miter":return l.p.MITER;case"bevel":return l.p.BEVEL;case"round":return l.p.ROUND;default:return f.error(new r.a("mapview-invalid-type","Join type ".concat(e," is not a valid option. Defaulting to round"))),l.p.ROUND}}function G(e){switch(e){case"opacity":return s.b.OPACITY;case"color":return s.b.COLOR;case"rotation":return s.b.ROTATION;case"size":return s.b.SIZE;default:return f.error("Cannot interpret unknown vv: ".concat(e)),null}}function H(e,t,n,a,i,r,o){for(var l in r){var s=r[l].stride,u=V(s),c=r[l].data,f=n[l].data;if(null!=c&&null!=f)for(var d=s*i.vertexCount/u,v=s*e/u,_=s*i.vertexFrom/u,m=0;m<d;++m)f[m+v]=c[m+_]}if(null!=o&&null!=a)for(var p=i.indexCount,g=0;g<p;++g)a[g+t]=o[g+i.indexFrom]-i.vertexFrom+e}var Y=Object(a.a)({},d,u.B.STATIC_DRAW);function W(e,t){for(var n=[],a=0;a<5;++a){var r,o=N(a),l={},s=Object(i.a)(o);try{for(s.s();!(r=s.n()).done;){var u=r.value;l[u]={data:t(a,u)}}}catch(c){s.e(c)}finally{s.f()}n.push({data:e(a),buffers:l})}return n}function q(e){switch(e){case u.p.UNSIGNED_BYTE:return 1;case u.p.UNSIGNED_SHORT_4_4_4_4:return 2;case u.p.FLOAT:return 4;default:return void f.error(new r.a("webgl-utils","Unable to handle type ".concat(e)))}}function Z(e){switch(e){case u.p.UNSIGNED_BYTE:return Uint8Array;case u.p.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case u.p.FLOAT:return Float32Array;default:return void f.error(new r.a("webgl-utils","Unable to handle type ".concat(e)))}}function K(e){var t={},n=function(){var n,i=e[a],r=0;t[a]=i.map((function(e){var t=new c.a(e.name,e.count,e.type,r,0,e.normalized||!1);return r+=e.count*function(e){switch(e){case u.k.BYTE:case u.k.UNSIGNED_BYTE:return 1;case u.k.SHORT:case u.k.UNSIGNED_SHORT:return 2;case u.k.FLOAT:case u.k.INT:case u.k.UNSIGNED_INT:return 4}}(e.type),t})),null===(n=t[a])||void 0===n||n.forEach((function(e){return e.stride=r}))};for(var a in e)n();return t}var X=function(e){var t=new Map;for(var n in e){var a,r=Object(i.a)(e[n]);try{for(r.s();!(a=r.n()).done;){var o=a.value;t.set(o.name,o.location)}}catch(l){r.e(l)}finally{r.f()}}return t},Q=function(e){var t={};for(var n in e){var a=e[n];t[n]=null!==a&&void 0!==a&&a.length?a[0].stride:0}return t},J=new Map,$=function(e,t){if(!J.has(e)){var n=K(t),a={strides:Q(n),bufferLayouts:n,attributes:X(t)};J.set(e,a)}return J.get(e)};function ee(e){e(s.d.FILL),e(s.d.LINE),e(s.d.MARKER),e(s.d.TEXT),e(s.d.LABEL)}var te=function(e){return"path"in e&&_e(e.path)},ne=function(e){return"url"in e&&e.url||"imageData"in e&&e.imageData},ae=function(e){return"imageData"in e&&e.imageData&&"contentType"in e&&e.contentType?"data:".concat(e.contentType,";base64,").concat(e.imageData):"url"in e?e.url:null},ie=function(e){return null!=e&&e.startsWith("data:image/gif")},re=function(e){return"url"in e&&e.url&&(e.url.includes(".gif")||ie(e.url))||"contentType"in e&&"image/gif"===e.contentType||"imageData"in e&&ie(e.imageData)},oe=function(e){return null!=e&&e.startsWith("data:image/png")},le=function(e){return"url"in e&&e.url&&(e.url.includes(".png")||oe(e.url))||"contentType"in e&&"image/png"===e.contentType||"imageData"in e&&oe(e.imageData)},se=function(e){return e.type&&e.type.toLowerCase().includes("3d")};function ue(e){switch(e.type){case"line":var t=e;return"CIMSolidStroke"===t.cim.type&&!t.dashTemplate;case"fill":return"CIMSolidFill"===e.cim.type;case"esriSFS":return"esriSFSSolid"===e.style||"esriSFSNull"===e.style;case"esriSLS":return"esriSLSSolid"===e.style||"esriSLSNull"===e.style;default:return!1}}var ce=function(e){return e.includes("data:image/svg+xml")};function fe(e){switch("cim"in e?e.cim.type:e.type){case"esriSMS":case"esriPMS":case"CIMPointSymbol":return!1;case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":return me(e);default:return!0}}function de(e){var t="maxVVSize"in e&&e.maxVVSize,n="width"in e&&e.width||"size"in e&&e.size||0;return t||n}function ve(e){for(var t=[],n=0;n<e.length;n++)t.push(e.charCodeAt(n));return t}var _e=function(e){return!!e&&(e=e.trim(),!!(/^[mzlhvcsqta]\s*[-+.0-9][^mlhvzcsqta]+/i.test(e)&&/[\dz]$/i.test(e)&&e.length>4))},me=function(e){var t;return"fill"===e.type&&"CIMMarkerPlacementInsidePolygon"===(null===e||void 0===e||null===(t=e.cim)||void 0===t||null===(t=t.markerPlacement)||void 0===t?void 0:t.type)}},118:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return i}));var a=new Float32Array(1);new Uint32Array(a.buffer);function i(e){return[255&e,(65280&e)>>>8,(16711680&e)>>>16,(4278190080&e)>>>24]}function r(e,t){return 65535&e|t<<16}function o(e,t,n,a){return 255&e|(255&t)<<8|(255&n)<<16|a<<24}},123:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var a=n(92),i=n(89),r=n(88),o=function(){function e(){Object(i.a)(this,e),this.name=this.constructor.name||"UnnamedBrush",this.brushEffect=null}return Object(r.a)(e,[{key:"prepareState",value:function(e,t){}},{key:"draw",value:function(e,t,n){}},{key:"drawMany",value:function(e,t,n){var i,r=Object(a.a)(t);try{for(r.s();!(i=r.n()).done;){var o=i.value;o.visible&&this.draw(e,o,n)}}catch(l){r.e(l)}finally{r.f()}}}]),e}()},133:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return l})),n.d(t,"d",(function(){return s}));var a=n(99),i=n(118);function r(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=e[t+3];return e[t]*=a,e[t+1]*=a,e[t+2]*=a,n||(e[t+3]*=255),e}function o(e){if(!e)return 0;var t=e.r,n=e.g,a=e.b,r=e.a;return Object(i.b)(t*r,n*r,a*r,255*r)}function l(e){if(!e)return 0;var t=Object(a.a)(e,4),n=t[0],r=t[1],o=t[2],l=t[3];return Object(i.b)(n*(l/255),r*(l/255),o*(l/255),l)}function s(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;if(null==t)return e[n]=0,e[n+1]=0,e[n+2]=0,void(e[n+3]=0);var a=t.r,i=t.g,r=t.b,o=t.a;e[n]=a*o/255,e[n+1]=i*o/255,e[n+2]=r*o/255,e[n+3]=o}},1351:function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(94),s=n(126),u=n(189),c=n(97),f=(n(96),n(98),n(93),n(95)),d={visible:"visibleSublayers"},v=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(e){var i;return Object(a.a)(this,n),(i=t.call(this,e)).scale=0,i}return Object(i.a)(n,[{key:"layer",set:function(e){var t=this;this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.sublayers.on("change",(function(){return t.notifyChange("visibleSublayers")})),e.on("wms-sublayer-update",(function(e){return t.notifyChange(d[e.propertyName])}))],"layer"))}},{key:"layers",get:function(){return this.visibleSublayers.filter((function(e){return e.name})).map((function(e){return e.name})).join()}},{key:"version",get:function(){this.commitProperty("layers");var e=this.layer;return e&&e.commitProperty("imageTransparency"),(this._get("version")||0)+1}},{key:"visibleSublayers",get:function(){var e=this.layer,t=this.scale,n=null===e||void 0===e?void 0:e.sublayers,a=[];return null!==n&&void 0!==n&&n.forEach((function e(n){var i=n.minScale,r=n.maxScale,o=n.sublayers;n.visible&&(0===t||(0===i||t<=i)&&(0===r||t>=r))&&(o?o.forEach(e):a.push(n))})),a}},{key:"toJSON",value:function(){var e=this.layer,t=this.layers;return{format:e.imageFormat,request:"GetMap",service:"WMS",styles:"",transparent:e.imageTransparency?"TRUE":"FALSE",version:e.version,layers:t}}}]),n}(Object(u.b)(s.a));Object(l.a)([Object(c.b)()],v.prototype,"layer",null),Object(l.a)([Object(c.b)({readOnly:!0})],v.prototype,"layers",null),Object(l.a)([Object(c.b)({type:Number})],v.prototype,"scale",void 0),Object(l.a)([Object(c.b)({readOnly:!0})],v.prototype,"version",null),Object(l.a)([Object(c.b)({readOnly:!0})],v.prototype,"visibleSublayers",null),v=Object(l.a)([Object(f.a)("esri.layers.support.ExportWMSImageParameters")],v)},144:function(e,t,n){"use strict";n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return f}));var a=n(101),i=n(103),r=n(115),o=n(158),l=n(268),s=n(269),u=n(270);function c(e,t){if(e.type!==t)throw new a.a("material-view-model:unexpected-renderer-schema",'expected to find renderer schema of type "'.concat(t,'" but found type "').concat(e.type,'"'))}function f(e){switch(null===e||void 0===e?void 0:e.type){case"dot-density":return l.a;case"heatmap":return s.a;case"pie-chart":return u.a;default:return o.a}}function d(e){var t=r.e.load(e),n=t.geometryType,a=t.symbologyType;switch(n){case i.d.FILL:if(a===i.e.DOT_DENSITY)return l.a;break;case i.d.MARKER:switch(a){case i.e.HEATMAP:return s.a;case i.e.PIE_CHART:return u.a}}return o.a}},154:function(e,t,n){"use strict";n.d(t,"a",(function(){return _}));var a=n(92),i=n(112),r=n(1),o=n(89),l=n(88),s=n(90),u=n(91),c=n(104),f=n(123),d=n(115),v=n(100),_=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(o.a)(this,n),(e=t.apply(this,arguments))._computeDesc=new Map,e}return Object(l.a)(n,[{key:"prepareState",value:function(e,t){var n=e.context;t&&t.includes("hittest")?n.setBlendFunctionSeparate(v.b.ONE,v.b.ONE,v.b.ONE,v.b.ONE):n.setBlendFunctionSeparate(v.b.ONE,v.b.ONE_MINUS_SRC_ALPHA,v.b.ONE,v.b.ONE_MINUS_SRC_ALPHA),n.setBlendingEnabled(!0),n.setColorMask(!0,!0,!0,!0),n.setStencilWriteMask(0),n.setStencilTestEnabled(!0)}},{key:"draw",value:function(e,t,n){var a=this,i=this.getGeometryType();t.commit(e);var r=t.getGeometry(i);null!=r&&(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),e.context.setStencilFunction(v.h.EQUAL,t.stencilRef,255),r.forEachCommand((function(i){var r=d.e.load(i.materialKey).symbologyType;a.supportsSymbology(r)&&a.drawGeometry(e,t,i,n)})))}},{key:"_setSharedUniforms",value:function(e,t,n){var a=t.displayLevel,i=t.pixelRatio,r=t.state,o=t.passOptions;null!=o&&"hittest"===o.type&&(e.setUniform2fv("u_hittestPos",o.position),e.setUniform1f("u_hittestDist",o.distance)),e.setUniform1f("u_pixelRatio",i),e.setUniformMatrix3fv("u_tileMat3",n.transforms.tileMat3),e.setUniformMatrix3fv("u_viewMat3",r.viewMat3),e.setUniformMatrix3fv("u_dvsMat3",n.transforms.dvs),e.setUniformMatrix3fv("u_displayViewMat3",r.displayViewMat3),e.setUniform1f("u_currentZoom",Math.round(a*c.F)),e.setUniform1i("u_attributeTextureSize",t.attributeView.size),e.setUniform1i("u_attributeData0",c.N),e.setUniform1i("u_attributeData1",c.O),e.setUniform1i("u_attributeData2",c.P),e.setUniform1i("u_attributeData3",c.Q),e.setUniform1i("u_attributeData4",c.R),e.setUniform1i("u_attributeData5",c.S)}},{key:"_setSizeVVUniforms",value:function(e,t,n,a){if(e.vvSizeMinMaxValue&&t.setUniform4fv("u_vvSizeMinMaxValue",n.vvSizeMinMaxValue),e.vvSizeScaleStops&&t.setUniform1f("u_vvSizeScaleStopsValue",n.vvSizeScaleStopsValue),e.vvSizeFieldStops){var i=n.getSizeVVFieldStops(a.key.level);null!=i&&(t.setUniform1fv("u_vvSizeFieldStopsValues",i.values),t.setUniform1fv("u_vvSizeFieldStopsSizes",i.sizes))}e.vvSizeUnitValue&&t.setUniform1f("u_vvSizeUnitValueWorldToPixelsRatio",n.vvSizeUnitValueToPixelsRatio)}},{key:"_setColorAndOpacityVVUniforms",value:function(e,t,n){e.vvColor&&(t.setUniform1fv("u_vvColorValues",n.vvColorValues),t.setUniform4fv("u_vvColors",n.vvColors)),e.vvOpacity&&(t.setUniform1fv("u_vvOpacityValues",n.vvOpacityValues),t.setUniform1fv("u_vvOpacities",n.vvOpacities))}},{key:"_setRotationVVUniforms",value:function(e,t,n){e.vvRotation&&t.setUniform1f("u_vvRotationType","geographic"===n.vvMaterialParameters.vvRotationType?0:1)}},{key:"_getTriangleDesc",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:["a_pos"],o=t.bufferLayouts.geometry,l=n.map((function(e){return o.findIndex((function(t){return t.name===e}))})),s="".concat(e,"-").concat(l.join("-")),u=this._computeDesc.get(s);if(!u){var c,f=t.strides,d=t.strides.geometry,v=new Map(t.attributes),_=o.map((function(e){return Object(r.a)({},e)})),m=Math.max.apply(Math,Object(i.a)(t.attributes.values())),p={geometry:_},g=0,h=Object(a.a)(l);try{for(h.s();!(c=h.n()).done;){var y=c.value,b=o[y];p.geometry.push({count:b.count,name:b.name+"1",divisor:b.divisor,normalized:b.normalized,offset:d+b.offset,stride:d,type:b.type}),p.geometry.push({count:b.count,name:b.name+"2",divisor:b.divisor,normalized:b.normalized,offset:2*d+b.offset,stride:d,type:b.type}),v.set(b.name+"1",m+ ++g),v.set(b.name+"2",m+ ++g)}}catch(x){h.e(x)}finally{h.f()}u={bufferLayouts:p,attributes:v,strides:f},this._computeDesc.set(s,u)}return u}}]),n}(f.a)},155:function(e,t,n){"use strict";var a,i;function r(e){switch(e){case"left":return a.Left;case"right":return a.Right;case"center":return a.Center}}function o(e){switch(e){case"top":return i.Top;case"middle":return i.Center;case"baseline":return i.Baseline;case"bottom":return i.Bottom}}function l(e){switch(e){case"above-left":case"esriServerPointLabelPlacementAboveLeft":return[a.Right,i.Bottom];case"above-center":case"above-along":case"esriServerPointLabelPlacementAboveCenter":case"esriServerLinePlacementAboveAlong":return[a.Center,i.Bottom];case"above-right":case"esriServerPointLabelPlacementAboveRight":return[a.Left,i.Bottom];case"center-left":case"esriServerPointLabelPlacementCenterLeft":return[a.Right,i.Center];case"center-center":case"center-along":case"esriServerPointLabelPlacementCenterCenter":case"esriServerLinePlacementCenterAlong":case"always-horizontal":case"esriServerPolygonPlacementAlwaysHorizontal":return[a.Center,i.Center];case"center-right":case"esriServerPointLabelPlacementCenterRight":return[a.Left,i.Center];case"below-left":case"esriServerPointLabelPlacementBelowLeft":return[a.Right,i.Top];case"below-center":case"below-along":case"esriServerPointLabelPlacementBelowCenter":case"esriServerLinePlacementBelowAlong":return[a.Center,i.Top];case"below-right":case"esriServerPointLabelPlacementBelowRight":return[a.Left,i.Top];default:return console.debug("Found invalid placement type ".concat(e)),[a.Center,i.Center]}}function s(e){switch(e){case a.Right:return-1;case a.Center:return 0;case a.Left:return 1;default:return console.debug("Found invalid horizontal alignment ".concat(e)),0}}function u(e){switch(e){case i.Top:return 1;case i.Center:return 0;case i.Bottom:case i.Baseline:return-1;default:return console.debug("Found invalid vertical alignment ".concat(e)),0}}function c(e){switch(e){case"left":return a.Left;case"right":return a.Right;case"center":return a.Center}}function f(e){switch(e){case"above-along":case"below-along":case"center-along":case"esriServerLinePlacementAboveAlong":case"esriServerLinePlacementBelowAlong":case"esriServerLinePlacementCenterAlong":return!0;default:return!1}}n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return l})),n.d(t,"d",(function(){return c})),n.d(t,"e",(function(){return r})),n.d(t,"f",(function(){return s})),n.d(t,"g",(function(){return o})),n.d(t,"h",(function(){return u})),n.d(t,"i",(function(){return f})),function(e){e[e.Left=-1]="Left",e[e.Center=0]="Center",e[e.Right=1]="Right"}(a||(a={})),function(e){e[e.Top=1]="Top",e[e.Center=0]="Center",e[e.Bottom=-1]="Bottom",e[e.Baseline=2]="Baseline"}(i||(i={}))},158:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(89),i=n(88),r=function(){function e(){Object(a.a)(this,e)}return Object(i.a)(e,null,[{key:"getStorageSpec",value:function(e){return null}},{key:"createOrUpdateRendererSchema",value:function(e,t){return null!=e&&"default"===e.type?e:{type:"default"}}},{key:"getVariation",value:function(e){return{}}},{key:"getVariationHash",value:function(e){return 0}}]),e}();r.type="default",r.programSpec=null},159:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return p})),n.d(t,"c",(function(){return a})),n.d(t,"d",(function(){return s})),n.d(t,"e",(function(){return r})),n.d(t,"f",(function(){return l})),n.d(t,"g",(function(){return u})),n.d(t,"h",(function(){return f})),n.d(t,"i",(function(){return c})),n.d(t,"j",(function(){return i}));var a,i,r,o,l,s,u,c,f,d,v=n(88),_=n(89),m=n(114);(d=a||(a={}))[d.BACKGROUND=0]="BACKGROUND",d[d.FILL=1]="FILL",d[d.LINE=2]="LINE",d[d.SYMBOL=3]="SYMBOL",d[d.CIRCLE=4]="CIRCLE",function(e){e[e.VISIBLE=0]="VISIBLE",e[e.NONE=1]="NONE"}(i||(i={})),function(e){e[e.POINT=0]="POINT",e[e.LINE=1]="LINE",e[e.LINE_CENTER=2]="LINE_CENTER"}(r||(r={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT",e[e.AUTO=2]="AUTO"}(o||(o={})),function(e){e[e.AUTO=0]="AUTO",e[e.LEFT=1]="LEFT",e[e.CENTER=2]="CENTER",e[e.RIGHT=3]="RIGHT"}(l||(l={})),function(e){e[e.CENTER=0]="CENTER",e[e.LEFT=1]="LEFT",e[e.RIGHT=2]="RIGHT",e[e.TOP=3]="TOP",e[e.BOTTOM=4]="BOTTOM",e[e.TOP_LEFT=5]="TOP_LEFT",e[e.TOP_RIGHT=6]="TOP_RIGHT",e[e.BOTTOM_LEFT=7]="BOTTOM_LEFT",e[e.BOTTOM_RIGHT=8]="BOTTOM_RIGHT"}(s||(s={})),function(e){e[e.NONE=0]="NONE",e[e.UPPERCASE=1]="UPPERCASE",e[e.LOWERCASE=2]="LOWERCASE"}(u||(u={})),function(e){e[e.MAP=0]="MAP",e[e.VIEWPORT=1]="VIEWPORT"}(c||(c={})),function(e){e[e.HORIZONTAL=0]="HORIZONTAL",e[e.VERTICAL=1]="VERTICAL"}(f||(f={}));var p=Object(v.a)((function e(){Object(_.a)(this,e)}));p.backgroundLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},p.fillLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},p.lineLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE},"line-cap":{type:"enum",values:["butt","round","square"],default:m.e.BUTT},"line-join":{type:"enum",values:["bevel","round","miter"],default:m.p.MITER},"line-miter-limit":{type:"number",default:2},"line-round-limit":{type:"number",default:1.05}},p.symbolLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE},"symbol-avoid-edges":{type:"boolean",default:!1},"symbol-placement":{type:"enum",values:["point","line","line-center"],default:r.POINT},"symbol-sort-key":{type:"number",default:-1},"symbol-spacing":{type:"number",minimum:1,default:250},"icon-allow-overlap":{type:"boolean",default:!1},"icon-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:s.CENTER},"icon-ignore-placement":{type:"boolean",default:!1},"icon-image":{type:"string"},"icon-keep-upright":{type:"boolean",default:!1},"icon-offset":{type:"array",value:"number",length:2,default:[0,0]},"icon-optional":{type:"boolean",default:!1},"icon-padding":{type:"number",minimum:0,default:2},"icon-rotate":{type:"number",default:0},"icon-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:o.AUTO},"icon-size":{type:"number",minimum:0,default:1},"text-allow-overlap":{type:"boolean",default:!1},"text-anchor":{type:"enum",values:["center","left","right","top","bottom","top-left","top-right","bottom-left","bottom-right"],default:s.CENTER},"text-field":{type:"string"},"text-font":{type:"array",value:"string",default:["Open Sans Regular","Arial Unicode MS Regular"]},"text-ignore-placement":{type:"boolean",default:!1},"text-justify":{type:"enum",values:["auto","left","center","right"],default:l.CENTER},"text-keep-upright":{type:"boolean",default:!0},"text-letter-spacing":{type:"number",default:0},"text-line-height":{type:"number",default:1.2},"text-max-angle":{type:"number",minimum:0,default:45},"text-max-width":{type:"number",minimum:0,default:10},"text-offset":{type:"array",value:"number",length:2,default:[0,0]},"text-optional":{type:"boolean",default:!1},"text-padding":{type:"number",minimum:0,default:2},"text-rotate":{type:"number",default:0},"text-rotation-alignment":{type:"enum",values:["map","viewport","auto"],default:o.AUTO},"text-size":{type:"number",minimum:0,default:16},"text-transform":{type:"enum",values:["none","uppercase","lowercase"],default:u.NONE},"text-writing-mode":{type:"array",value:"enum",values:["horizontal","vertical"],default:[f.HORIZONTAL]}},p.circleLayoutDefinition={visibility:{type:"enum",values:["visible","none"],default:i.VISIBLE}},p.backgroundPaintDefinition={"background-color":{type:"color",default:[0,0,0,1]},"background-opacity":{type:"number",minimum:0,maximum:1,default:1},"background-pattern":{type:"string"}},p.fillPaintDefinition={"fill-antialias":{type:"boolean",default:!0},"fill-color":{type:"color",default:[0,0,0,1]},"fill-opacity":{type:"number",minimum:0,maximum:1,default:1},"fill-outline-color":{type:"color",default:[0,0,0,0]},"fill-pattern":{type:"string"},"fill-translate":{type:"array",value:"number",length:2,default:[0,0]},"fill-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP}},p.linePaintDefinition={"line-blur":{type:"number",minimum:0,default:0},"line-color":{type:"color",default:[0,0,0,1]},"line-dasharray":{type:"array",value:"number",default:[]},"line-gap-width":{type:"number",minimum:0,default:0},"line-offset":{type:"number",default:0},"line-opacity":{type:"number",minimum:0,maximum:1,default:1},"line-pattern":{type:"string"},"line-translate":{type:"array",value:"number",length:2,default:[0,0]},"line-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP},"line-width":{type:"number",minimum:0,default:1}},p.symbolPaintDefinition={"icon-color":{type:"color",default:[0,0,0,1]},"icon-halo-blur":{type:"number",minimum:0,default:0},"icon-halo-color":{type:"color",default:[0,0,0,0]},"icon-halo-width":{type:"number",minimum:0,default:0},"icon-opacity":{type:"number",minimum:0,maximum:1,default:1},"icon-translate":{type:"array",value:"number",length:2,default:[0,0]},"icon-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP},"text-color":{type:"color",default:[0,0,0,1]},"text-halo-blur":{type:"number",minimum:0,default:0},"text-halo-color":{type:"color",default:[0,0,0,0]},"text-halo-width":{type:"number",minimum:0,default:0},"text-opacity":{type:"number",minimum:0,maximum:1,default:1},"text-translate":{type:"array",value:"number",length:2,default:[0,0]},"text-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP}},p.rasterPaintDefinition={"raster-opacity":{type:"number",minimum:0,maximum:1,default:1},"raster-hue-rotate":{type:"number",default:0},"raster-brightness-min":{type:"number",minimum:0,maximum:1,default:0},"raster-brightness-max":{type:"number",minimum:0,maximum:1,default:1},"raster-saturation":{type:"number",minimum:-1,maximum:1,default:0},"raster-contrast":{type:"number",minimum:-1,maximum:1,default:0},"raster-fade-duration":{type:"number",minimum:0,default:300}},p.circlePaintDefinition={"circle-blur":{type:"number",minimum:0,default:0},"circle-color":{type:"color",default:[0,0,0,1]},"circle-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-radius":{type:"number",minimum:0,default:5},"circle-stroke-color":{type:"color",default:[0,0,0,1]},"circle-stroke-opacity":{type:"number",minimum:0,maximum:1,default:1},"circle-stroke-width":{type:"number",minimum:0,default:0},"circle-translate":{type:"array",value:"number",length:2,default:[0,0]},"circle-translate-anchor":{type:"enum",values:["map","viewport"],default:c.MAP}}},160:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(88),i=n(89),r=Object(a.a)((function e(t,n,a,r,o){var l=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;Object(i.a)(this,e),this.name=t,this.count=n,this.type=a,this.offset=r,this.stride=o,this.normalized=l,this.divisor=s}))},166:function(e,t,n){"use strict";function a(){return new Float32Array(4)}function i(e,t,n,a){var i=new Float32Array(4);return i[0]=e,i[1]=t,i[2]=n,i[3]=a,i}function r(){return a()}function o(){return i(1,1,1,1)}function l(){return i(1,0,0,0)}function s(){return i(0,1,0,0)}function u(){return i(0,0,1,0)}function c(){return i(0,0,0,1)}n.d(t,"a",(function(){return i}));var f=r(),d=o(),v=l(),_=s(),m=u(),p=c();Object.freeze(Object.defineProperty({__proto__:null,ONES:d,UNIT_W:p,UNIT_X:v,UNIT_Y:_,UNIT_Z:m,ZEROS:f,clone:function(e){var t=new Float32Array(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},create:a,createView:function(e,t){return new Float32Array(e,t,4)},fromValues:i,ones:o,unitW:c,unitX:l,unitY:s,unitZ:u,zeros:r},Symbol.toStringTag,{value:"Module"}))},175:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(246);function i(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return new a.a(e,n+t.shaders.vertexShader,n+t.shaders.fragmentShader,t.attributes)}},183:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(188),i={shaders:{vertexShader:Object(a.a)("background/background.vert"),fragmentShader:Object(a.a)("background/background.frag")},attributes:new Map([["a_pos",0]])}},184:function(e,t,n){"use strict";n.d(t,"a",(function(){return _}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(103),s=n(117),u=n(154),c=n(115),f=n(144),d=n(100),v={shader:"materials/icon",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:d.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:d.k.SHORT},{location:2,name:"a_texCoords",count:2,type:d.k.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:d.k.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:d.k.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:d.k.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:d.k.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]},_=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return l.d.MARKER}},{key:"supportsSymbology",value:function(e){return e!==l.e.HEATMAP&&e!==l.e.PIE_CHART}},{key:"drawGeometry",value:function(e,t,n,a){var i,r=e.context,o=e.painter,l=e.rendererInfo,u=e.state,_=e.passOptions,m=e.requestRender,p=e.allowDelayedRender,g=c.d.load(n.materialKey),h=Object(f.b)(g.data),y=null!=_&&"hittest"===_.type,b=null!==(i=h.programSpec)&&void 0!==i?i:v,x=b.shader,O=b.vertexLayout,S=b.hittestAttributes,T=d.q.TRIANGLES,E=Object(s.g)(g.data,O);y&&(E=this._getTriangleDesc(n.materialKey,E,S),T=d.q.POINTS);var I=E,C=I.attributes,A=I.bufferLayouts,L=o.materialManager.getMaterialProgram(e,g,x,C,a);if(!p||null==m||L.compiled){r.useProgram(L),g.textureBinding&&o.textureManager.bindTextures(r,L,g,!0),this._setSharedUniforms(L,e,t);var P=g.vvRotation?u.displayViewMat3:u.displayMat3;L.setUniformMatrix3fv("u_displayMat3",P),this._setSizeVVUniforms(g,L,l,t),this._setColorAndOpacityVVUniforms(g,L,l),this._setRotationVVUniforms(g,L,l);var R=n.target.getVAO(r,A,C,y),D=n.indexCount,M=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;y&&(D/=3,M/=3),r.bindVAO(R),this._drawMarkers(e,t,L,T,D,M,y),r.bindVAO(null)}else m()}},{key:"_drawMarkers",value:function(e,t,n,a,i,r,o){e.context.drawElements(a,i,d.k.UNSIGNED_INT,r)}}]),n}(u.a)},188:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a={background:{"background.frag":"uniform lowp vec4 u_color;\nvoid main() {\ngl_FragColor = u_color;\n}","background.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_coord_range;\nuniform mediump float u_depth;\nvoid main() {\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\n}"},bitBlit:{"bitBlit.frag":"uniform lowp sampler2D u_tex;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nlowp vec4 color = texture2D(u_tex, v_uv);\ngl_FragColor = color *  u_opacity;\n}","bitBlit.vert":"attribute vec2 a_pos;\nattribute vec2 a_tex;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_pos, 0.0, 1.0);\nv_uv = a_tex;\n}"},blend:{"blend.frag":"precision mediump float;\nuniform sampler2D u_layerTexture;\nuniform lowp float u_opacity;\nuniform lowp float u_inFadeOpacity;\n#ifndef NORMAL\nuniform sampler2D u_backbufferTexture;\n#endif\nvarying mediump vec2 v_uv;\nfloat rgb2v(in vec3 c) {\nreturn max(c.x, max(c.y, c.z));\n}\nvec3 rgb2hsv(in vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(in vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec3 tint(in vec3 Cb, in vec3 Cs) {\nfloat vIn = rgb2v(Cb);\nvec3 hsvTint = rgb2hsv(Cs);\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\nreturn hsv2rgb(hsvOut);\n}\nfloat overlay(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\n}\nfloat colorDodge(in float Cb, in float Cs) {\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\n}\nfloat colorBurn(in float Cb, in float Cs) {\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\n}\nfloat hardLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\n}\nfloat reflectBlend(in float Cb, in float Cs) {\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\n}\nfloat softLight(in float Cb, in float Cs) {\nif (Cs <= 0.5) {\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\n}\nif (Cb <= 0.25) {\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\n}\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\n}\nfloat vividLight(in float Cb, in float Cs) {\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\n}\nfloat minv3(in vec3 c) {\nreturn min(min(c.r, c.g), c.b);\n}\nfloat maxv3(in vec3 c) {\nreturn max(max(c.r, c.g), c.b);\n}\nfloat lumv3(in vec3 c) {\nreturn dot(c, vec3(0.3, 0.59, 0.11));\n}\nfloat satv3(vec3 c) {\nreturn maxv3(c) - minv3(c);\n}\nvec3 clipColor(vec3 color) {\nfloat lum = lumv3(color);\nfloat mincol = minv3(color);\nfloat maxcol = maxv3(color);\nif (mincol < 0.0) {\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\n}\nif (maxcol > 1.0) {\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\n}\nreturn color;\n}\nvec3 setLum(vec3 cbase, vec3 clum) {\nfloat lbase = lumv3(cbase);\nfloat llum = lumv3(clum);\nfloat ldiff = llum - lbase;\nvec3 color = cbase + vec3(ldiff);\nreturn clipColor(color);\n}\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\n{\nfloat minbase = minv3(cbase);\nfloat sbase = satv3(cbase);\nfloat ssat = satv3(csat);\nvec3 color;\nif (sbase > 0.0) {\ncolor = (cbase - minbase) * ssat / sbase;\n} else {\ncolor = vec3(0.0);\n}\nreturn setLum(color, clum);\n}\nvoid main() {\nvec4 src = texture2D(u_layerTexture, v_uv);\n#ifdef NORMAL\ngl_FragColor = src *  u_opacity;\n#else\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\nfloat as = u_opacity * src.a;\nfloat ab = dst.a;\n#ifdef DESTINATION_OVER\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\n#endif\n#ifdef SOURCE_IN\nvec4 color = vec4(as * Cs * ab, as * ab);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef DESTINATION_IN\nvec4 color = vec4(ab * Cb * as, ab * as);\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\ngl_FragColor = color + fadeColor;\n#endif\n#ifdef SOURCE_OUT\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\n#endif\n#ifdef DESTINATION_OUT\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\n#endif\n#ifdef SOURCE_ATOP\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\n#endif\n#ifdef DESTINATION_ATOP\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\n#endif\n#ifdef XOR\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\nas * (1.0 - ab) + ab * (1.0 - as));\n#endif\n#ifdef MULTIPLY\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\nas + ab * (1.0 - as));\n#endif\n#ifdef SCREEN\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef OVERLAY\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DARKEN\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LIGHTER\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\n#endif\n#ifdef LIGHTEN\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_DODGE\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR_BURN\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HARD_LIGHT\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SOFT_LIGHT\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef DIFFERENCE\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef EXCLUSION\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef INVERT\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\n#endif\n#ifdef VIVID_LIGHT\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef HUE\nvec3 f = setLumSat(Cs,Cb,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef SATURATION\nvec3 f = setLumSat(Cb,Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef COLOR\nvec3 f = setLum(Cs,Cb);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef LUMINOSITY\nvec3 f = setLum(Cb,Cs);\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef PLUS\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\n#endif\n#ifdef MINUS\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\n#endif\n#ifdef AVERAGE\nvec3 f = (Cb + Cs) / 2.0;\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#ifdef REFLECT\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\nreflectBlend(Cb.g, Cs.g),\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\nas + ab * (1.0 - as));\n#endif\n#endif\n}","blend.vert":"attribute vec2 a_position;\nvarying mediump vec2 v_uv;\nvoid main(void) {\ngl_Position = vec4(a_position , 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"},debug:{overlay:{"overlay.frag":"precision mediump float;\nvarying vec4 v_color;\nvoid main(void) {\ngl_FragColor = v_color;\n}","overlay.vert":"attribute vec3 a_PositionAndFlags;\nuniform mat3 u_dvsMat3;\nuniform vec4 u_colors[4];\nuniform float u_opacities[4];\nvarying vec4 v_color;\nvoid main(void) {\nvec2 position = a_PositionAndFlags.xy;\nfloat flags = a_PositionAndFlags.z;\nint colorIndex = int(mod(flags, 4.0));\nvec4 color;\nfor (int i = 0; i < 4; i++) {\ncolor = u_colors[i];\nif (i == colorIndex) {\nbreak;\n}\n}\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\nfloat opacity;\nfor (int i = 0; i < 4; i++) {\nopacity = u_opacities[i];\nif (i == opacityIndex) {\nbreak;\n}\n}\nv_color = color * opacity;\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\n}"}},dot:{dot:{"dot.frag":"precision mediump float;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nuniform highp float u_tileZoomFactor;\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\ngl_FragColor = v_color * alpha;\n}","dot.vert":"precision highp float;\nattribute vec2 a_pos;\nuniform sampler2D u_texture;\nuniform highp mat3 u_dvsMat3;\nuniform highp float u_tileZoomFactor;\nuniform highp float u_dotSize;\nuniform highp float u_pixelRatio;\nvarying vec2 v_pos;\nvarying vec4 v_color;\nvarying float v_dotRatio;\nvarying float v_invEdgeRatio;\nconst float EPSILON = 0.000001;\nvoid main()\n{\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\n0., -1., 0.,\n0., 1., 1.  );\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\nv_color = texture2D(u_texture, texCoords.xy);\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\nfloat z = 0.;\nz += 2.0 * step(v_color.a, EPSILON);\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\nv_dotRatio = u_dotSize / gl_PointSize;\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\n}"}},filtering:{"bicubic.glsl":"vec4 computeWeights(float v) {\nfloat b = 1.0 / 6.0;\nfloat v2 = v * v;\nfloat v3 = v2 * v;\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\nfloat w3 = b * v3;\nreturn vec4(w0, w1, w2, w3);\n}\nvec4 bicubicOffsetsAndWeights(float v) {\nvec4 w = computeWeights(v);\nfloat g0 = w.x + w.y;\nfloat g1 = w.z + w.w;\nfloat h0 = 1.0 - (w.y / g0) + v;\nfloat h1 = 1.0 + (w.w / g1) - v;\nreturn vec4(h0, h1, g0, g1);\n}\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\nvec2 texel = coords * texSize - 0.5;\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\nvec2 coords10 = coords + hgX.x * eX;\nvec2 coords00 = coords - hgX.y * eX;\nvec2 coords11 = coords10 + hgY.x * eY;\nvec2 coords01 = coords00 + hgY.x * eY;\ncoords10 = coords10 - hgY.y * eY;\ncoords00 = coords00 - hgY.y * eY;\nvec4 color00 = texture2D(sampler, coords00);\nvec4 color10 = texture2D(sampler, coords10);\nvec4 color01 = texture2D(sampler, coords01);\nvec4 color11 = texture2D(sampler, coords11);\ncolor00 = mix(color00, color01, hgY.z);\ncolor10 = mix(color10, color11, hgY.z);\ncolor00 = mix(color00, color10, hgX.z);\nreturn color00;\n}","bilinear.glsl":"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\nvec2 texelStart = floor(coords * texSize);\nvec2 coord0 = texelStart / texSize;\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\nvec4 color0 = texture2D(sampler, coord0);\nvec4 color1 = texture2D(sampler, coord1);\nvec4 color2 = texture2D(sampler, coord2);\nvec4 color3 = texture2D(sampler, coord3);\nvec2 blend = fract(coords * texSize);\nvec4 color01 = mix(color0, color1, blend.x);\nvec4 color23 = mix(color2, color3, blend.x);\nvec4 color = mix(color01, color23, blend.y);\n#ifdef NNEDGE\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\n#endif\nreturn color;\n}","epx.glsl":"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\nvec2 invSize = 1.0 / texSize;\nvec2 texel = coords * texSize;\nvec2 texel_i = floor(texel);\nvec2 texel_frac = fract(texel);\nvec4 colorP = texture2D(sampler, texel_i * invSize);\nvec4 colorP1 = vec4(colorP);\nvec4 colorP2 = vec4(colorP);\nvec4 colorP3 = vec4(colorP);\nvec4 colorP4 = vec4(colorP);\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\ncolorP1 = colorA;\n}\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\ncolorP2 = colorB;\n}\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\ncolorP3 = colorC;\n}\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\ncolorP4 = colorD;\n}\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\nreturn mix(colorP12, colorP34, texel_frac.y);\n}"},fx:{integrate:{"integrate.frag":"precision mediump float;\nuniform lowp sampler2D u_sourceTexture;\nuniform lowp sampler2D u_maskTexture;\nuniform mediump float u_zoomLevel;\nuniform highp float u_timeDelta;\nuniform highp float u_animationTime;\nvarying highp vec2 v_texcoord;\n#include <materials/utils.glsl>\nvoid main()\n{\n#ifdef DELTA\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\nfloat flags = data0.r * 255.0;\nfloat groupMinZoom = data0.g * 255.0;\nfloat isVisible = getFilterBit(flags, 0);\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\nvec4 nextState = vec4(texel + direction * dt);\ngl_FragColor =  vec4(nextState);\n#elif defined(UPDATE)\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\ngl_FragColor = texel;\n#endif\n}","integrate.vert":"precision mediump float;\nattribute vec2 a_pos;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n}"}},heatmap:{heatmapResolve:{"heatmapResolve.frag":"precision highp float;\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 4.0\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform sampler2D u_texture;\nuniform sampler2D u_gradient;\nuniform vec2 u_densityMinAndInvRange;\nuniform float u_densityNormalization;\nvarying vec2 v_uv;\nvoid main() {\nvec4 data = texture2D(u_texture, v_uv);\nfloat density = data.r * COMPRESSION_FACTOR;\ndensity *= u_densityNormalization;\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\ngl_FragColor = vec4(color.rgb * color.a, color.a);\n}","heatmapResolve.vert":"precision highp float;\nattribute vec2 a_pos;\nvarying vec2 v_uv;\nvoid main() {\nv_uv = a_pos;\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\n}"}},highlight:{"blur.frag":"varying mediump vec2 v_texcoord;\nuniform mediump vec4 u_direction;\nuniform mediump mat4 u_channelSelector;\nuniform mediump float u_sigma;\nuniform sampler2D u_texture;\nmediump float gauss1(mediump vec2 dir) {\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\n}\nmediump vec4 selectChannel(mediump vec4 sample) {\nreturn u_channelSelector * sample;\n}\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\nmediump float w = gauss1(i * u_direction.xy);\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\nweight += w;\n}\nvoid main(void) {\nmediump float tot = 0.0;\nmediump float weight = 0.0;\naccumGauss1(-5.0, tot, weight);\naccumGauss1(-4.0, tot, weight);\naccumGauss1(-3.0, tot, weight);\naccumGauss1(-2.0, tot, weight);\naccumGauss1(-1.0, tot, weight);\naccumGauss1(0.0, tot, weight);\naccumGauss1(1.0, tot, weight);\naccumGauss1(2.0, tot, weight);\naccumGauss1(3.0, tot, weight);\naccumGauss1(4.0, tot, weight);\naccumGauss1(5.0, tot, weight);\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\n}","highlight.frag":"varying mediump vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform mediump float u_sigma;\nuniform sampler2D u_shade;\nuniform mediump vec2 u_minMaxDistance;\nmediump float estimateDistance() {\nmediump float y = texture2D(u_texture, v_texcoord)[3];\nconst mediump float y0 = 0.5;\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\nmediump float d = (y - y0) / m0;\nreturn d;\n}\nmediump vec4 shade(mediump float d) {\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\n}\nvoid main(void) {\nmediump float d = estimateDistance();\ngl_FragColor = shade(d);\n}","textured.vert":"attribute mediump vec2 a_position;\nattribute mediump vec2 a_texcoord;\nvarying mediump vec2 v_texcoord;\nvoid main(void) {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},magnifier:{"magnifier.frag":"uniform lowp vec4 u_background;\nuniform mediump sampler2D u_readbackTexture;\nuniform mediump sampler2D u_maskTexture;\nuniform mediump sampler2D u_overlayTexture;\nuniform bool u_maskEnabled;\nuniform bool u_overlayEnabled;\nvarying mediump vec2 v_texCoord;\nconst lowp float barrelFactor = 1.1;\nlowp vec2 barrel(lowp vec2 uv) {\nlowp vec2 uvn = uv * 2.0 - 1.0;\nif (uvn.x == 0.0 && uvn.y == 0.0) {\nreturn vec2(0.5, 0.5);\n}\nlowp float theta = atan(uvn.y, uvn.x);\nlowp float r = pow(length(uvn), barrelFactor);\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\n}\nvoid main(void)\n{\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\ncolor = (color + (1.0 - color.a) * u_background);\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\ncolor *= mask;\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\n}","magnifier.vert":"precision mediump float;\nattribute mediump vec2 a_pos;\nuniform mediump vec4 u_drawPos;\nvarying mediump vec2 v_texCoord;\nvoid main(void)\n{\nv_texCoord = a_pos;\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\n}"},materials:{"attributeData.glsl":"uniform highp sampler2D u_attributeData0;\nuniform highp sampler2D u_attributeData1;\nuniform highp sampler2D u_attributeData2;\nuniform highp sampler2D u_attributeData3;\nuniform highp sampler2D u_attributeData4;\nuniform highp sampler2D u_attributeData5;\nuniform highp int u_attributeTextureSize;\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\nhighp vec3  texel = unpackDisplayIdTexel(id);\nhighp float size = float(u_attributeTextureSize);\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\nhighp float col = mod(u32, size);\nhighp float row = (u32 - col) / size;\nhighp float u = col / size;\nhighp float v = row / size;\nreturn vec2(u, v);\n}\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\n}\nhighp vec4 getAttributeData0(in highp vec3 id) {\nvec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData0, coords);\n}\nhighp vec4 getAttributeData1(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData1, coords);\n}\nhighp vec4 getAttributeData2(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData2, coords);\n}\nhighp vec4 getAttributeData3(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData3, coords);\n}\nhighp vec4 getAttributeData4(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData4, coords);\n}\nhighp vec4 getAttributeData5(in highp vec3 id) {\nhighp vec2 coords = getAttributeDataCoords(id);\nreturn texture2D(u_attributeData5, coords);\n}\nfloat u88VVToFloat(in vec2 v) {\nbool isMagic = v.x == 255.0 && v.y == 255.0;\nif (isMagic) {\nreturn NAN_MAGIC_NUMBER;\n}\nreturn (v.x + v.y * float(0x100)) - 32768.0;\n}","barycentric.glsl":"float inTriangle(vec3 bary) {\nvec3 absBary = abs(bary);\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\n}\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\nmat3 xyToBarycentricMat3 = mat3(\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\n);\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\n}","constants.glsl":"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\nconst float POSITION_PRECISION = 1.0 / 8.0;\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\nconst float SOFT_EDGE_RATIO = 1.0;\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\nconst float THIN_LINE_HALF_WIDTH = 1.0;\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\nconst float OFFSET_PRECISION = 1.0 / 8.0;\nconst float OUTLINE_SCALE = 1.0 / 5.0;\nconst float SDF_FONT_SIZE = 24.0;\nconst float MAX_SDF_DISTANCE = 8.0;\nconst float PLACEMENT_PADDING = 8.0;\nconst float EPSILON = 0.00001;\nconst float EPSILON_HITTEST = 0.05;\nconst int MAX_FILTER_COUNT = 2;\nconst int ATTR_VV_SIZE = 0;\nconst int ATTR_VV_COLOR = 1;\nconst int ATTR_VV_OPACITY = 2;\nconst int ATTR_VV_ROTATION = 3;\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\nconst int BITSET_LINE_SCALE_DASH = 2;",fill:{"common.glsl":"#include <materials/symbologyTypeUtils.glsl>\n#ifdef PATTERN\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform lowp vec4 u_isActive[ 2 ];\nuniform highp float u_dotValue;\nuniform highp float u_tileDotsOverArea;\nuniform highp float u_dotTextureDotCount;\nuniform mediump float u_tileZoomFactor;\n#endif\nvarying highp vec3 v_id;\nvarying lowp vec4 v_color;\nvarying lowp float v_opacity;\nvarying mediump vec4 v_aux1;\n#ifdef PATTERN\nvarying mediump vec2 v_tileTextureCoord;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvarying lowp float v_isOutline;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvarying highp vec2 v_dotTextureCoords;\nvarying highp vec4 v_dotThresholds[ 2 ];\n#endif","fill.frag":"precision highp float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/fill/common.glsl>\n#ifdef PATTERN\nuniform lowp sampler2D u_texture;\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nuniform mediump mat4 u_dotColors[ 2 ];\nuniform sampler2D u_dotTextures[ 2 ];\nuniform vec4 u_dotBackgroundColor;\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\nlowp vec4 drawLine() {\nfloat v_lineWidth = v_aux1.x;\nvec2  v_normal    = v_aux1.yz;\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineWidth,\nv_opacity,\nv_id\n);\nreturn shadeLine(inputs);\n}\n#endif\nlowp vec4 drawFill() {\nlowp vec4 out_color = vec4(0.);\n#ifdef HITTEST\nout_color = v_color;\n#elif defined(PATTERN)\nmediump vec4 v_tlbr = v_aux1;\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\nlowp vec4 color = texture2D(u_texture, samplePos);\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\nout_color = v_opacity * v_color * color;\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\n#ifdef DD_DOT_BLENDING\nvec4 isPositive0 = step(0.0, difference0);\nvec4 isPositive1 = step(0.0, difference1);\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\nfloat lessThanEqZero = step(weightSum, 0.0);\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\nfloat divisor = (weightSum + lessThanEqZero);\nvec4 weights0 = difference0 * isPositive0 / divisor;\nvec4 weights1 = difference1 * isPositive1 / divisor;\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\n#else\nfloat diffMax = max(max4(difference0), max4(difference1));\nfloat lessThanZero = step(diffMax, 0.0);\nfloat greaterOrEqZero = 1.0 - lessThanZero;\nvec4 isMax0 = step(diffMax, difference0);\nvec4 isMax1 = step(diffMax, difference1);\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\n#endif\nout_color = preEffectColor;\n#else\nout_color = v_opacity * v_color;\n#endif\n#ifdef HIGHLIGHT\nout_color.a = 1.0;\n#endif\nreturn out_color;\n}\nvoid main() {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (v_isOutline > 0.5) {\ngl_FragColor = drawLine();\n} else {\ngl_FragColor = drawFill();\n}\n#else\ngl_FragColor = drawFill();\n#endif\n}","fill.vert":"#include <materials/symbologyTypeUtils.glsl>\n#define PACKED_LINE\nprecision highp float;\nattribute float a_bitset;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nattribute float a_inverseArea;\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#else\nattribute vec4 a_color;\nattribute vec4 a_aux2;\nattribute vec4 a_aux3;\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\nattribute vec4 a_aux1;\nattribute vec2 a_zoomRange;\n#else\nvec2 a_zoomRange = vec2(0.0, 10000.0);\n#endif\n#endif\nuniform vec2 u_tileOffset;\nuniform vec2 u_maxIntNumOfCrossing;\n#include <util/encoding.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/fill/common.glsl>\n#include <materials/fill/hittest.glsl>\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\n}\n#endif\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\nLineData outputs = buildLine(\nout_pos,\na_id,\na_pos,\na_color,\n(a_aux3.xy - 128.) / 16.,\n(a_aux3.zw - 128.) / 16.,\n0.,\na_aux2.z / 16.,\na_bitset,\nvec4(0.),\nvec2(0.),\na_aux2.w / 16.\n);\nv_id      = outputs.id;\nv_opacity = outputs.opacity;\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\nout_color = outputs.color;\n}\n#endif\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\nfloat a_bitSet = a_bitset;\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity = getOpacity();\nv_id      = norm(a_id);\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\n0., -2. / 512.,  0.,\n-1.,  1.,  1.  );\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\n#else\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\n#endif\n#ifdef PATTERN\nvec4  a_tlbr   = a_aux1;\nfloat a_width  = a_aux2.x;\nfloat a_height = a_aux2.y;\nvec2  a_offset = a_aux2.zw;\nvec2  a_scale  = a_aux3.xy;\nfloat a_angle  = a_aux3.z;\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\na_width *= INV_SCALE_COMPRESSION_FACTOR;\n}\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\na_height *= INV_SCALE_COMPRESSION_FACTOR;\n}\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\nfloat width = u_zoomFactor * a_width * scale.x;\nfloat height = u_zoomFactor * a_height * scale.y;\nfloat angle = C_256_TO_RAD * a_angle;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nfloat dx = 0.0;\nfloat dy = 0.0;\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\nfloat id = rgba2float(vec4(a_id, 0.0));\ndx = rand(vec2(id, 0.0));\ndy = rand(vec2(0.0, id));\n}\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\n-sinA / width, cosA / height, 0,\ndx,            dy,           1);\nvec2 patternSize = vec2(a_width, a_height);\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\ntileOffset = mod(tileOffset, patternSize);\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\n#ifdef VV_COLOR\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\n#else\nv_sampleAlphaOnly = 0.0;\n#endif\n}\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\n#endif\n}\n#ifdef HITTEST\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\nout_pos = vec3(0., 0., 2.);\nreturn;\n}\n#endif\nhittestFill(out_color, out_pos);\ngl_PointSize = 1.0;\n}\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\nif (v_isOutline > 0.5) {\ndrawLine(out_color, out_pos);\n} else {\ndrawFill(out_color, out_pos);\n}\n}\n#else\n#define draw drawFill\n#endif\nvoid main()\n{\nINIT;\nhighp vec3 pos  = vec3(0.);\nhighp vec4 color  = vec4(0.);\ndraw(color, pos);\nv_color = color;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}","hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestFill(\nout lowp vec4 out_color,\nout highp vec3 out_pos\n) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\nfloat hittestDist = u_hittestDist;\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist < 0. || dist >= hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\n}\n#endif"},hittest:{"common.glsl":"#ifdef HITTEST\nuniform float u_hittestDist;\nuniform highp vec2 u_hittestPos;\nfloat projectScalar(vec2 a, vec2 b) {\nreturn dot(a, normalize(b));\n}\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\nvec2 L = p2 - p1;\nvec2 A = p0 - p1;\nfloat projAL = projectScalar(A, L);\nfloat t = clamp(projAL / length(L), 0., 1.);\nreturn distance(p0, p1 + t * (p2 - p1));\n}\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif ((dist - size) > u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\n}\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\nreturn inTriangle(xyToBarycentric(p, a, b, c));\n}\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\nvec2 ba = b - a;\nvec2 ca = c - a;\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\nif (isParallel) {\nreturn -1.;\n}\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\nreturn 0.;\n}\nfloat distAB = distPointSegment(p, a, b);\nfloat distBC = distPointSegment(p, b, c);\nfloat distCA = distPointSegment(p, c, a);\nreturn min(min(distAB, distBC), distCA);\n}\n#endif"},icon:{"common.glsl":"#include <util/encoding.glsl>\nuniform lowp vec2 u_mosaicSize;\nvarying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying highp vec4 v_sizeTex;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nuniform lowp sampler2D u_texture;\n#ifdef SDF\nvarying lowp vec4 v_outlineColor;\nvarying mediump float v_outlineWidth;\nvarying mediump float v_distRatio;\nvarying mediump float v_overridingOutlineColor;\nvarying mediump float v_isThin;\n#endif\n#ifdef SDF\nvec4 getColor(vec2 v_size, vec2 v_tex) {\nlowp vec4 fillPixelColor = v_color;\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\nfloat size = max(v_size.x, v_size.y);\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\nfloat outlineWidth = v_outlineWidth;\n#ifdef HIGHLIGHT\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\n#endif\nif (outlineWidth > 0.25) {\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\nfloat clampedOutlineSize = min(outlineWidth, size);\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\n}\nreturn v_opacity * fillPixelColor;\n}\n#else\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\nlowp vec4 texColor = texture2D(u_texture, v_tex);\nreturn v_opacity * texColor * v_color;\n}\n#endif",heatmapAccumulate:{"common.glsl":"varying lowp vec4 v_hittestResult;\nvarying mediump vec2 v_offsetFromCenter;\nvarying highp float v_fieldValue;","heatmapAccumulate.frag":"precision mediump float;\n#include <materials/icon/heatmapAccumulate/common.glsl>\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\n#define COMPRESSION_FACTOR 0.25\n#else\n#define COMPRESSION_FACTOR 1.0\n#endif\nuniform lowp sampler2D u_texture;\nvoid main() {\n#ifdef HITTEST\ngl_FragColor = v_hittestResult;\n#else\nfloat radius = length(v_offsetFromCenter);\nfloat shapeWeight = step(radius, 1.0);\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\n#endif\n}","heatmapAccumulate.vert":"precision highp float;\nattribute vec2 a_vertexOffset;\nvec4 a_color = vec4(0.0);\nvec2 a_zoomRange = vec2(0.0, 10000.0);\nuniform float u_radius;\nuniform float u_isFieldActive;\n#include <materials/vcommon.glsl>\n#include <materials/hittest/common.glsl>\n#include <materials/icon/heatmapAccumulate/common.glsl>\nvoid main() {\nfloat filterFlags = getFilterFlags();\n#ifdef HITTEST\nhighp vec4 out_hittestResult = vec4(0.);\nhighp vec3 out_pos = vec3(0.);\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\nv_hittestResult = out_hittestResult;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\nv_offsetFromCenter = sign(a_vertexOffset);\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},"hittest.glsl":"#ifdef HITTEST\n#include <materials/hittest/common.glsl>\nattribute vec2 a_vertexOffset1;\nattribute vec2 a_vertexOffset2;\nattribute vec2 a_texCoords1;\nattribute vec2 a_texCoords2;\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\n}\nvoid hittestIcon(\ninout lowp vec4 out_color,\nout highp vec3 out_pos,\nin vec3 pos,\nin vec3 offset,\nin vec2 size,\nin float scaleFactor,\nin float isMapAligned\n) {\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\nvec2 tex0 = a_texCoords  / u_mosaicSize;\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\nfloat alphaSum = 0.;\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\nout_pos.z += step(alphaSum, .05) * 2.0;\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\n}\n#endif","icon.frag":"precision mediump float;\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvoid main()\n{\n#ifdef HITTEST\nvec4 color = v_color;\n#else\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\n#endif\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","icon.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/icon/hittest.glsl>\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\n#ifdef VV_SIZE\nfloat f = getSize(size.y) / size.y;\nfloat sizeFactor = size.y / referenceSize;\nreturn getSize(referenceSize) / referenceSize;\n#else\nreturn 1.;\n#endif\n}\nvoid main()\n{\nINIT;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\nsize.xy     *= scaleFactor;\noffset.xy   *= scaleFactor;\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\nvec2 v_tex   = a_texCoords / u_mosaicSize;\nfloat filterFlags = getFilterFlags();\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\nv_opacity  = getOpacity();\nv_id       = norm(a_id);\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\nv_sizeTex  = vec4(size.xy, v_tex.xy);\n#ifdef SDF\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\n#ifdef VV_COLOR\nv_overridingOutlineColor = v_isThin;\n#else\nv_overridingOutlineColor = 0.0;\n#endif\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\nv_outlineColor = a_outlineColor;\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\n#endif\n#ifdef HITTEST\nhighp vec4 out_color = vec4(0.);\nhighp vec3 out_pos   = vec3(0.);\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\nv_color = out_color;\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},label:{"common.glsl":"uniform mediump float u_zoomLevel;\nuniform mediump float u_mapRotation;\nuniform mediump float u_mapAligned;\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying mediump vec2 v_tex;\nvarying mediump vec4 v_color;\nvarying lowp vec4 v_animation;","label.frag":"#include <materials/text/text.frag>","label.vert":"precision highp float;\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texAndSize;\nattribute vec4 a_refSymbolAndPlacementOffset;\nattribute vec4 a_glyphData;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nuniform float u_mapRotation;\nuniform float u_mapAligned;\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\nfloat glyphAngle = angle * 360.0 / 254.0;\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\nfloat z = 0.0;\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\nreturn z;\n}\nvoid main()\n{\nINIT;\nfloat groupMinZoom    = getMinZoom();\nfloat glyphMinZoom    = a_glyphData.x;\nfloat glyphMaxZoom    = a_glyphData.y;\nfloat glyphAngle      = a_glyphData.z;\nfloat a_isBackground  = a_glyphData.w;\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\nfloat fontSize           = a_texAndSize.z;\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor = (isBackground + isText) * a_color;\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\nv_opacity   = 1.0;\nv_tex       = a_texCoords / u_mosaicSize;\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\ngl_Position = vec4(v_pos, 1.0);\n#ifdef DEBUG\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\n#endif\n}"},line:{"common.glsl":"varying lowp vec4 v_color;\nvarying highp vec3 v_id;\nvarying mediump vec2 v_normal;\nvarying mediump float v_lineHalfWidth;\nvarying lowp float v_opacity;\n#ifdef PATTERN\nvarying mediump vec4 v_tlbr;\nvarying mediump vec2 v_patternSize;\n#endif\n#if defined(PATTERN) || defined(SDF)\nvarying highp float v_accumulatedDistance;\n#endif\n#ifdef SDF\nvarying mediump float v_lineWidthRatio;\n#endif","hittest.glsl":"#include <materials/hittest/common.glsl>\n#ifdef HITTEST\nattribute vec2 a_pos1;\nattribute vec2 a_pos2;\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\nif (dist >= u_hittestDist) {\nout_pos.z += 2.0;\n}\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\n}\n#endif","line.frag":"precision lowp float;\n#include <util/encoding.glsl>\n#include <materials/constants.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.frag>\n#ifdef HITTEST\nvoid main() {\ngl_FragColor = v_color;\n}\n#else\nvoid main() {\nLineData inputs = LineData(\nv_color,\nv_normal,\nv_lineHalfWidth,\nv_opacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr,\nv_patternSize,\n#endif\n#ifdef SDF\nv_lineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance,\n#endif\n#endif\nv_id\n);\ngl_FragColor = shadeLine(inputs);\n}\n#endif","line.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_offsetAndNormal;\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\nattribute vec4 a_tlbr;\nattribute vec4 a_segmentDirection;\nattribute vec2 a_aux;\nattribute vec2 a_zoomRange;\n#include <materials/vcommon.glsl>\n#include <materials/symbologyTypeUtils.glsl>\n#include <materials/line/common.glsl>\n#include <materials/line/hittest.glsl>\n#include <materials/shared/line/common.glsl>\n#include <materials/shared/line/line.vert>\n#ifdef HITTEST\nvoid draw() {\nfloat aa        = 0.5 * u_antialiasing;\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\nfloat a_cimHalfWidth = a_aux.x / 16. ;\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nhighp vec3 pos  = vec3(0.);\nv_color = vec4(0.);\nhittestLine(v_color, pos, halfWidth);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#else\nvoid draw()\n{\nhighp vec3 pos = vec3(0.);\nLineData outputs = buildLine(\npos,\na_id,\na_pos,\na_color,\na_offsetAndNormal.xy / 16.,\na_offsetAndNormal.zw / 16.,\na_accumulatedDistanceAndHalfWidth.x,\na_accumulatedDistanceAndHalfWidth.y / 16.,\na_segmentDirection.w,\na_tlbr,\na_segmentDirection.xy / 16.,\na_aux.x / 16.\n);\nv_id              = outputs.id;\nv_color           = outputs.color;\nv_normal          = outputs.normal;\nv_lineHalfWidth   = outputs.lineHalfWidth;\nv_opacity         = outputs.opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nv_tlbr          = outputs.tlbr;\nv_patternSize   = outputs.patternSize;\n#endif\n#ifdef SDF\nv_lineWidthRatio = outputs.lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nv_accumulatedDistance = outputs.accumulatedDistance;\n#endif\n#endif\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\n}\n#endif\nvoid main() {\nINIT;\ndraw();\n}"},pie:{"pie.frag":"precision mediump float;\n#include <util/atan2.glsl>\n#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/icon/common.glsl>\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\nuniform lowp vec4 u_defaultColor;\nuniform lowp vec4 u_othersColor;\nuniform lowp vec4 u_outlineColor;\nuniform float u_donutRatio;\nuniform float u_sectorThreshold;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\n#if __VERSION__ == 300\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\nreturn u_colors[colorIndex];\n#else\nmediump int colorIndex;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == index) {\ncolorIndex = int(filteredSectorToColorId[i].y);\n}\n}\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == colorIndex) {\nreturn u_colors[i];\n}\n}\nreturn u_colors[NUMBER_OF_FIELDS - 1];\n#endif\n}\nconst int OTHER_SECTOR_ID = 255;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor() {\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\nif (angle < 0.0) {\nangle += 360.0;\n} else if (angle > 360.0) {\nangle = mod(angle, 360.0);\n}\nint numOfEntries = int(v_numOfEntries);\nfloat maxSectorAngle = v_maxSectorAngle;\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\nlowp vec4 prevColor = vec4(0.0);\nlowp vec4 nextColor = vec4(0.0);\nfloat startSectorAngle = 0.0;\nfloat endSectorAngle = 0.0;\nif (angle < maxSectorAngle) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nstartSectorAngle = endSectorAngle;\nendSectorAngle = v_filteredSectorToColorId[index].x;\nif (endSectorAngle > angle) {\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\nbreak;\n}\nif (index == numOfEntries - 1) {\nbreak;\n}\n}\n} else {\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\nstartSectorAngle = maxSectorAngle;\nendSectorAngle = 360.0;\n}\nlowp vec4 outlineColor = u_outlineColor;\nfloat offset = length(v_offset);\nfloat distanceSize = offset * v_size;\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\nfloat distanceToStartSector = (angle - startSectorAngle);\nfloat distanceToEndSector = (endSectorAngle - angle);\nfloat sectorThreshold = 0.6;\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\nif (endSectorAlpha > 0.0) {\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\n} else if (beginSectorAlpha > 0.0) {\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\n}\n}\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\nfloat endOfDonut = donutSize - v_outlineWidth;\nfloat aaThreshold = 0.75;\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\nfloat startOfOutline = v_size - v_outlineWidth;\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\n}\nreturn v_opacity * circleAlpha * fillColor;\n}\n#endif\nvoid main()\n{\nvec4 color = getColor();\n#ifdef HIGHLIGHT\ncolor.a = step(1.0 / 255.0, color.a);\n#endif\ngl_FragColor = color;\n}","pie.vert":"precision highp float;\nattribute vec4 a_color;\nattribute vec4 a_outlineColor;\nattribute vec4 a_sizeAndOutlineWidth;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nattribute vec2 a_bitSetAndDistRatio;\nattribute vec2 a_zoomRange;\nuniform float u_outlineWidth;\nuniform mediump float u_sectorThreshold;\nvarying float v_size;\nvarying vec2 v_offset;\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\nvarying float v_numOfEntries;\nvarying float v_maxSectorAngle;\nstruct FilteredChartInfo {\nfloat endSectorAngle;\nint colorId;\n};\nint filter(in float sectorAngle,\nin int currentIndex,\ninout FilteredChartInfo filteredInfo,\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\nif (sectorAngle > u_sectorThreshold * 360.0) {\nfilteredInfo.endSectorAngle += sectorAngle;\n#if __VERSION__ == 300\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\nif (i == filteredInfo.colorId) {\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\n}\n}\n#endif\n++filteredInfo.colorId;\n}\nreturn 0;\n}\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\ninout FilteredChartInfo filteredInfo,\nin float sectorAngles[NUMBER_OF_FIELDS]) {\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\nfloat sectorValue = sectorAngles[index];\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\n}\nreturn filteredInfo.colorId;\n}\n#include <materials/vcommon.glsl>\n#include <materials/icon/common.glsl>\n#include <materials/hittest/common.glsl>\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\nvec2 outSize = baseSize;\n#ifdef VV_SIZE\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\noutSize.xy *= r;\noffset.xy *= r;\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\n#endif\nreturn outSize;\n}\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\nvec3  offset       = vec3(in_offset, 0.0);\nreturn getMatrix(isMapAligned) * offset;\n}\nfloat filterNaNValues(in float value) {\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\n}\nvoid main()\n{\nINIT;\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\nvec2  a_offset = a_vertexOffset / 16.0;\nfloat outlineSize = u_outlineWidth;\nfloat a_bitSet = a_bitSetAndDistRatio.x;\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\nfloat filterFlags = getFilterFlags();\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\nv_opacity      = getOpacity();\nv_id           = norm(a_id);\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\nv_offset       = sign(a_texCoords - 0.5);\nv_size         = max(size.x, size.y);\nv_outlineWidth = outlineSize;\nfloat attributeData[10];\nvec4 attributeData0 = getAttributeData3(a_id);\nattributeData[0] = filterNaNValues(attributeData0.x);\nattributeData[1] = filterNaNValues(attributeData0.y);\nattributeData[2] = filterNaNValues(attributeData0.z);\nattributeData[3] = filterNaNValues(attributeData0.w);\n#if (NUMBER_OF_FIELDS > 4)\nvec4 attributeData1 = getAttributeData4(a_id);\nattributeData[4] = filterNaNValues(attributeData1.x);\nattributeData[5] = filterNaNValues(attributeData1.y);\nattributeData[6] = filterNaNValues(attributeData1.z);\nattributeData[7] = filterNaNValues(attributeData1.w);\n#endif\n#if (NUMBER_OF_FIELDS > 8)\nvec4 attributeData2 = getAttributeData5(a_id);\nattributeData[8] = filterNaNValues(attributeData2.x);\nattributeData[9] = filterNaNValues(attributeData2.y);\n#endif\nfloat sum = 0.0;\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsum += attributeData[i];\n}\nfloat sectorAngles[NUMBER_OF_FIELDS];\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\n}\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\nv_numOfEntries = float(numOfEntries);\nv_maxSectorAngle = filteredInfo.endSectorAngle;\n#if __VERSION__ == 300\nv_filteredSectorToColorId = filteredSectorToColorId;\n#else\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\nif (i == numOfEntries) {\nbreak;\n}\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\n}\n#endif\n#ifdef HITTEST\nhighp vec3 out_pos = vec3(0.0);\nv_color            = vec4(0.0);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\ngl_PointSize = 1.0;\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\n#else\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\n#endif\n}"},shared:{line:{"common.glsl":"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nuniform mediump vec2 u_mosaicSize;\nvarying mediump float v_sampleAlphaOnly;\n#endif\nstruct LineData {\nlowp vec4 color;\nmediump vec2 normal;\nmediump float lineHalfWidth;\nlowp float opacity;\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nmediump vec4 tlbr;\nmediump vec2 patternSize;\n#endif\n#ifdef SDF\nmediump float lineWidthRatio;\n#endif\n#if defined(PATTERN) || defined(SDF)\nhighp float accumulatedDistance;\n#endif\n#endif\nhighp vec3 id;\n};","line.frag":"uniform lowp float u_blur;\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\n#if defined(PATTERN) || defined(SDF)\nuniform sampler2D u_texture;\nuniform highp float u_pixelRatio;\n#endif\n#endif\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\nfloat dist = d * line.lineHalfWidth;\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\n}\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\nlowp vec4 getLineColor(LineData line) {\nmediump float lineHalfWidth = line.lineHalfWidth;\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\nlowp vec4 color = texture2D(u_texture, texCoord);\n#ifdef VV_COLOR\nif (v_sampleAlphaOnly > 0.5) {\ncolor.rgb = vec3(color.a);\n}\n#endif\nreturn line.opacity * line.color * color;\n}\n#else\nlowp vec4 getLineColor(LineData line) {\nreturn line.opacity * line.color;\n}\n#endif\nvec4 shadeLine(LineData line)\n{\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\nlowp vec4 out_color = getLineColor(line) * alpha;\n#ifdef HIGHLIGHT\nout_color.a = step(1.0 / 255.0, out_color.a);\n#endif\n#ifdef ID\nif (out_color.a < 1.0 / 255.0) {\ndiscard;\n}\nout_color = vec4(line.id, 0.0);\n#endif\nreturn out_color;\n}","line.vert":"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\n#ifdef VV_SIZE\nfloat refLineWidth = 2.0 * referenceHalfWidth;\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\n#else\nreturn lineHalfWidth;\n#endif\n}\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\n#ifdef HIGHLIGHT\nhalfWidth = max(halfWidth, 2.0);\n#endif\nreturn halfWidth;\n}\nvec2 getDist(in vec2 offset, in float halfWidth) {\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\nreturn thinLineFactor * halfWidth * offset;\n}\nLineData buildLine(\nout vec3 out_pos,\nin vec3 in_id,\nin vec2 in_pos,\nin vec4 in_color,\nin vec2 in_offset,\nin vec2 in_normal,\nin float in_accumulatedDist,\nin float in_lineHalfWidth,\nin float in_bitSet,\nin vec4 in_tlbr,\nin vec2 in_segmentDirection,\nin float in_referenceHalfWidth\n)\n{\nfloat aa        = 0.5 * u_antialiasing;\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\nfloat z         = 2.0 * step(baseWidth, 0.0);\nvec2  dist      = getDist(in_offset, halfWidth);\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\nvec4  color     = in_color;\nfloat opacity   = 1.0;\n#else\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\nfloat opacity   = getOpacity();\n#ifdef SDF\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\n#endif\n#endif\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\n#endif\nout_pos = vec3(pos.xy, z);\nreturn LineData(\ncolor,\nin_normal,\nhalfWidth,\nopacity,\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#ifdef PATTERN\nin_tlbr / u_mosaicSize.xyxy,\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\n#endif\n#ifdef SDF\nlineWidthRatio,\n#endif\n#if defined(PATTERN) || defined(SDF)\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\n#endif\n#endif\nnorm(in_id)\n);\n}"}},"symbologyTypeUtils.glsl":"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\n#endif\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\n#endif",text:{"common.glsl":"uniform highp vec2 u_mosaicSize;\nvarying highp vec3 v_id;\nvarying mediump vec3 v_pos;\nvarying lowp float v_opacity;\nvarying lowp vec4 v_color;\nvarying highp vec2 v_tex;\nvarying mediump float v_antialiasingWidth;\nvarying mediump float v_edgeDistanceOffset;\nvarying lowp float v_transparency;","hittest.glsl":"#include <materials/hittest/common.glsl>","text.frag":"precision mediump float;\n#include <materials/text/common.glsl>\nuniform lowp sampler2D u_texture;\n#ifdef HITTEST\nvec4 getColor() {\nreturn v_color;\n}\n#else\nvec4 getColor()\n{\nfloat SDF_CUTOFF = (2.0 / 8.0);\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\nlowp float dist = texture2D(u_texture, v_tex).a;\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\n#ifdef HIGHLIGHT\nedge /= 2.0;\n#endif\nlowp float aa = v_antialiasingWidth;\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\nreturn alpha * v_color * v_opacity;\n}\n#endif\nvoid main()\n{\ngl_FragColor = getColor();\n}","text.vert":"precision highp float;\n#include <materials/utils.glsl>\n#include <materials/vcommon.glsl>\n#include <materials/text/common.glsl>\n#include <materials/text/hittest.glsl>\nattribute vec4 a_color;\nattribute vec4 a_haloColor;\nattribute vec4 a_texFontSize;\nattribute vec4 a_aux;\nattribute vec2 a_zoomRange;\nattribute vec2 a_vertexOffset;\nattribute vec2 a_texCoords;\nuniform float u_isHaloPass;\nuniform float u_isBackgroundPass;\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\n#ifdef VV_SIZE\nfloat r = getSize(referenceSize) / referenceSize;\nbaseSize *= r;\noffset.xy *= r;\nreturn baseSize;\n#endif\nreturn baseSize;\n}\nvoid main()\n{\nINIT;\nfloat a_isBackground  = a_aux.y;\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\nfloat a_bitSet        = a_aux.w;\nfloat a_fontSize      = a_texFontSize.z;\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\nfloat isText = 1.0 - a_isBackground;\nfloat isBackground = u_isBackgroundPass * a_isBackground;\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\nv_opacity = getOpacity();\nv_id      = norm(a_id);\nv_tex     = a_texCoords / u_mosaicSize;\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\nv_pos.z += 2.0 * isHidden;\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\n#ifdef HITTEST\nhighp vec3 out_pos  = vec3(0.);\nv_color = vec4(0.);\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\n+ u_tileMat3 * offset, fontSize / 2.);\ngl_PointSize = 1.;\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\n#else\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\n#endif\n}"},"utils.glsl":"float rshift(in float u32, in int amount) {\nreturn floor(u32 / pow(2.0, float(amount)));\n}\nfloat getBit(in float bitset, in int bitIndex) {\nfloat offset = pow(2.0, float(bitIndex));\nreturn mod(floor(bitset / offset), 2.0);\n}\nfloat getFilterBit(in float bitset, in int bitIndex) {\nreturn getBit(bitset, bitIndex + 1);\n}\nfloat getHighlightBit(in float bitset) {\nreturn getBit(bitset, 0);\n}\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\nfloat isAggregate = getBit(bitset.b, 7);\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\n}\nvec4 unpack(in float u32) {\nfloat r = mod(rshift(u32, 0), 255.0);\nfloat g = mod(rshift(u32, 8), 255.0);\nfloat b = mod(rshift(u32, 16), 255.0);\nfloat a = mod(rshift(u32, 24), 255.0);\nreturn vec4(r, g, b, a);\n}\nvec3 norm(in vec3 v) {\nreturn v /= 255.0;\n}\nvec4 norm(in vec4 v) {\nreturn v /= 255.0;\n}\nfloat max4(vec4 target) {\nreturn max(max(max(target.x, target.y), target.z), target.w);\n}\nvec2 unpack_u8_nf32(vec2 bytes) {\nreturn (bytes - 127.0) / 127.0;\n}\nhighp float rand(in vec2 co) {\nhighp float a = 12.9898;\nhighp float b = 78.233;\nhighp float c = 43758.5453;\nhighp float dt = dot(co, vec2(a,b));\nhighp float sn = mod(dt, 3.14);\nreturn fract(sin(sn) * c);\n}","vcommon.glsl":"#include <materials/constants.glsl>\n#include <materials/utils.glsl>\n#include <materials/attributeData.glsl>\n#include <materials/vv.glsl>\n#include <materials/barycentric.glsl>\nattribute vec2 a_pos;\nattribute highp vec3 a_id;\nuniform highp mat3 u_dvsMat3;\nuniform highp mat3 u_displayMat3;\nuniform highp mat3 u_displayViewMat3;\nuniform highp mat3 u_tileMat3;\nuniform highp mat3 u_viewMat3;\nuniform highp float u_pixelRatio;\nuniform mediump float u_zoomFactor;\nuniform mediump float u_antialiasing;\nuniform mediump float u_currentZoom;\nvec4 VV_ADATA = vec4(0.0);\nvoid loadVisualVariableData(inout vec4 target) {\n#ifdef SUPPORTS_TEXTURE_FLOAT\ntarget.rgba = getAttributeData2(a_id);\n#else\nvec4 data0 = getAttributeData2(a_id);\nvec4 data1 = getAttributeData3(a_id);\ntarget.r = u88VVToFloat(data0.rg * 255.0);\ntarget.g = u88VVToFloat(data0.ba * 255.0);\ntarget.b = u88VVToFloat(data1.rg * 255.0);\ntarget.a = u88VVToFloat(data1.ba * 255.0);\n#endif\n}\n#ifdef VV\n#define INIT loadVisualVariableData(VV_ADATA)\n#else\n#define INIT\n#endif\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\n#ifdef VV_COLOR\nfloat isColorLocked   = getBit(a_bitSet, index);\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\n#else\nreturn a_color;\n#endif\n}\nfloat getOpacity() {\n#ifdef VV_OPACITY\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\n#else\nreturn 1.0;\n#endif\n}\nfloat getSize(in float in_size) {\n#ifdef VV_SIZE\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\n#else\nreturn in_size;\n#endif\n}\nmat3 getRotation() {\n#ifdef VV_ROTATION\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\n#else\nreturn mat3(1.0);\n#endif\n}\nfloat getFilterFlags() {\n#ifdef IGNORES_SAMPLER_PRECISION\nreturn ceil(getAttributeData0(a_id).x * 255.0);\n#else\nreturn getAttributeData0(a_id).x * 255.0;\n#endif\n}\nvec4 getAnimationState() {\nreturn getAttributeData1(a_id);\n}\nfloat getMinZoom() {\nvec4 data0 = getAttributeData0(a_id) * 255.0;\nreturn data0.g;\n}\nmat3 getMatrixNoDisplay(float isMapAligned) {\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\n}\nmat3 getMatrix(float isMapAligned) {\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\n}\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\n#ifdef INSIDE\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\n#elif defined(OUTSIDE)\npos.z += 2.0 * getFilterBit(filterFlags, 1);\n#elif defined(HIGHLIGHT)\n#if !defined(HIGHLIGHT_ALL)\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\n#endif\n#endif\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\nreturn pos;\n}","vv.glsl":"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\n#define VV_SIZE\n#endif\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\n#define VV\n#endif\n#ifdef VV_COLOR\nuniform highp float u_vvColorValues[8];\nuniform vec4 u_vvColors[8];\n#endif\n#ifdef VV_SIZE_MIN_MAX_VALUE\nuniform highp vec4 u_vvSizeMinMaxValue;\n#endif\n#ifdef VV_SIZE_SCALE_STOPS\nuniform highp float u_vvSizeScaleStopsValue;\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nuniform highp float u_vvSizeFieldStopsValues[6];\nuniform float u_vvSizeFieldStopsSizes[6];\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\n#endif\n#ifdef VV_OPACITY\nuniform highp float u_vvOpacityValues[8];\nuniform float u_vvOpacities[8];\n#endif\n#ifdef VV_ROTATION\nuniform lowp float u_vvRotationType;\n#endif\nbool isNan(float val) {\nreturn (val == NAN_MAGIC_NUMBER);\n}\n#ifdef VV_SIZE_MIN_MAX_VALUE\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\n}\n#endif\n#ifdef VV_SIZE_FIELD_STOPS\nconst int VV_SIZE_N = 6;\nfloat getVVStopsSize(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\nreturn u_vvSizeFieldStopsSizes[0];\n}\nfor (int i = 1; i < VV_SIZE_N; ++i) {\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\n}\n}\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\n}\n#endif\n#ifdef VV_SIZE_UNIT_VALUE\nfloat getVVUnitValue(float sizeValue, float fallback) {\nif (isNan(sizeValue)) {\nreturn fallback;\n}\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\n}\n#endif\n#ifdef VV_OPACITY\nconst int VV_OPACITY_N = 8;\nfloat getVVOpacity(float opacityValue) {\nif (isNan(opacityValue)) {\nreturn 1.0;\n}\nif (opacityValue <= u_vvOpacityValues[0]) {\nreturn u_vvOpacities[0];\n}\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\nif (u_vvOpacityValues[i] >= opacityValue) {\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\n}\n}\nreturn u_vvOpacities[VV_OPACITY_N - 1];\n}\n#endif\n#ifdef VV_ROTATION\nmat4 getVVRotation(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat4(1, 0, 0, 0,\n0, 1, 0, 0,\n0, 0, 1, 0,\n0, 0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat4(cosA, sinA, 0, 0,\n-sinA,  cosA, 0, 0,\n0,     0, 1, 0,\n0,     0, 0, 1);\n}\nmat3 getVVRotationMat3(float rotationValue) {\nif (isNan(rotationValue)) {\nreturn mat3(1, 0, 0,\n0, 1, 0,\n0, 0, 1);\n}\nfloat rotation = rotationValue;\nif (u_vvRotationType == 1.0) {\nrotation = 90.0 - rotation;\n}\nfloat angle = C_DEG_TO_RAD * -rotation;\nfloat sinA = sin(angle);\nfloat cosA = cos(angle);\nreturn mat3(cosA, -sinA, 0,\nsinA, cosA, 0,\n0,    0,    1);\n}\n#endif\n#ifdef VV_COLOR\nconst int VV_COLOR_N = 8;\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\nif (isNan(colorValue) || isColorLocked == 1.0) {\nreturn fallback;\n}\nif (colorValue <= u_vvColorValues[0]) {\nreturn u_vvColors[0];\n}\nfor (int i = 1; i < VV_COLOR_N; ++i) {\nif (u_vvColorValues[i] >= colorValue) {\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\n}\n}\nreturn u_vvColors[VV_COLOR_N - 1];\n}\n#endif\nfloat getVVSize(in float size, in float vvSize)  {\n#ifdef VV_SIZE_MIN_MAX_VALUE\nreturn getVVMinMaxSize(vvSize, size);\n#elif defined(VV_SIZE_SCALE_STOPS)\nreturn u_vvSizeScaleStopsValue;\n#elif defined(VV_SIZE_FIELD_STOPS)\nfloat outSize = getVVStopsSize(vvSize, size);\nreturn isNan(outSize) ? size : outSize;\n#elif defined(VV_SIZE_UNIT_VALUE)\nreturn getVVUnitValue(vvSize, size);\n#else\nreturn size;\n#endif\n}"},overlay:{overlay:{"overlay.frag":"precision lowp float;\nuniform lowp sampler2D u_texture;\nuniform lowp float u_opacity;\nvarying mediump vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_texture, v_uv);\ngl_FragColor = color *  u_opacity;\n}","overlay.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nuniform highp mat3 u_dvsMat3;\nuniform mediump vec2 u_perspective;\nvarying mediump vec2 v_uv;\nvoid main(void) {\nv_uv = a_uv;\nfloat w = 1.0 + dot(a_uv, u_perspective);\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\ngl_Position = vec4(w * pos.xy, 0.0, w);\n}"}},"post-processing":{blit:{"blit.frag":"precision mediump float;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\ngl_FragColor = texture2D(u_texture, v_uv);\n}"},bloom:{composite:{"composite.frag":"precision mediump float;\nvarying vec2 v_uv;\nuniform sampler2D u_blurTexture1;\nuniform sampler2D u_blurTexture2;\nuniform sampler2D u_blurTexture3;\nuniform sampler2D u_blurTexture4;\nuniform sampler2D u_blurTexture5;\nuniform float u_bloomStrength;\nuniform float u_bloomRadius;\nuniform float u_bloomFactors[NUMMIPS];\nuniform vec3 u_bloomTintColors[NUMMIPS];\nfloat lerpBloomFactor(const in float factor) {\nfloat mirrorFactor = 1.2 - factor;\nreturn mix(factor, mirrorFactor, u_bloomRadius);\n}\nvoid main() {\nvec4 color = u_bloomStrength * (\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\n);\ngl_FragColor = clamp(color, 0.0, 1.0);\n}"},gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\n#define SIGMA RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = float(SIGMA);\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},luminosityHighPass:{"luminosityHighPass.frag":"precision mediump float;\nuniform sampler2D u_texture;\nuniform vec3 u_defaultColor;\nuniform float u_defaultOpacity;\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\nvarying vec2 v_uv;\nvoid main() {\nvec4 texel = texture2D(u_texture, v_uv);\nvec3 luma = vec3(0.299, 0.587, 0.114);\nfloat v = dot(texel.xyz, luma);\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\ngl_FragColor = mix(outputColor, texel, alpha);\n}"}},blur:{gaussianBlur:{"gaussianBlur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nuniform vec2 u_direction;\nuniform float u_sigma;\nvarying vec2 v_uv;\n#define KERNEL_RADIUS RADIUS\nfloat gaussianPdf(in float x, in float sigma) {\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\n}\nvoid main() {\nvec2 invSize = 1.0 / u_texSize;\nfloat fSigma = u_sigma;\nfloat weightSum = gaussianPdf(0.0, fSigma);\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\nfloat x = float(i);\nfloat w = gaussianPdf(x, fSigma);\nvec2 uvOffset = u_direction * invSize * x;\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\npixelColorSum += (sample1 + sample2) * w;\nweightSum += 2.0 * w;\n}\ngl_FragColor = pixelColorSum /weightSum;\n}"},"radial-blur":{"radial-blur.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nconst float sampleDist = 1.0;\nconst float sampleStrength = 2.2;\nvoid main(void) {\nfloat samples[10];\nsamples[0] = -0.08;\nsamples[1] = -0.05;\nsamples[2] = -0.03;\nsamples[3] = -0.02;\nsamples[4] = -0.01;\nsamples[5] =  0.01;\nsamples[6] =  0.02;\nsamples[7] =  0.03;\nsamples[8] =  0.05;\nsamples[9] =  0.08;\nvec2 dir = 0.5 - v_uv;\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\ndir = dir / dist;\nvec4 color = texture2D(u_colorTexture,v_uv);\nvec4 sum = color;\nfor (int i = 0; i < 10; i++) {\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\n}\nsum *= 1.0 / 11.0;\nfloat t = dist * sampleStrength;\nt = clamp(t, 0.0, 1.0);\ngl_FragColor = mix(color, sum, t);\n}"}},dra:{"dra.frag":"precision mediump float;\nuniform sampler2D u_minColor;\nuniform sampler2D u_maxColor;\nuniform sampler2D u_texture;\nvarying vec2 v_uv;\nvoid main() {\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\nvec4 color = texture2D(u_texture, v_uv);\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\nvec3 colorUnpremultiply = color.rgb / color.a;\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\n}","min-max":{"min-max.frag":"#extension GL_EXT_draw_buffers : require\nprecision mediump float;\n#define CELL_SIZE 2\nuniform sampler2D u_minTexture;\nuniform sampler2D u_maxTexture;\nuniform vec2 u_srcResolution;\nuniform vec2 u_dstResolution;\nvarying vec2 v_uv;\nvoid main() {\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\nvec2 onePixel = vec2(1.0) / u_srcResolution;\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\nvec4 minColor = vec4(1.0);\nvec4 maxColor = vec4(0.0);\nfor (int y = 0; y < CELL_SIZE; ++y) {\nfor (int x = 0; x < CELL_SIZE; ++x) {\nvec2 offset = uv + vec2(x, y) * onePixel;\nminColor = min(minColor, texture2D(u_minTexture, offset));\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\n}\n}\ngl_FragData[0] = minColor;\ngl_FragData[1] = maxColor;\n}"}},"drop-shadow":{composite:{"composite.frag":"precision mediump float;\nuniform sampler2D u_layerFBOTexture;\nuniform sampler2D u_blurTexture;\nuniform vec4 u_shadowColor;\nuniform vec2 u_shadowOffset;\nuniform highp mat3 u_displayViewMat3;\nvarying vec2 v_uv;\nvoid main() {\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\n}"}},"edge-detect":{"frei-chen":{"frei-chen.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform vec2 u_texSize;\nvarying vec2 v_uv;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[9];\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\nvoid main() {\nG[0] = g0,\nG[1] = g1,\nG[2] = g2,\nG[3] = g3,\nG[4] = g4,\nG[5] = g5,\nG[6] = g6,\nG[7] = g7,\nG[8] = g8;\nmat3 I;\nfloat cnv[9];\nvec3 sample;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 9; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\n}"},sobel:{"sobel.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\n}"}},"edge-enhance":{"edge-enhance.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nvarying vec2 v_uv;\nuniform vec2 u_texSize;\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\nmat3 G[2];\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\nvoid main() {\nmat3 I;\nfloat cnv[2];\nvec3 sample;\nG[0] = g0;\nG[1] = g1;\nfor (float i = 0.0; i < 3.0; i++) {\nfor (float j = 0.0; j < 3.0; j++) {\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\nI[int(i)][int(j)] = length(sample);\n}\n}\nfor (int i = 0; i < 2; i++) {\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\ncnv[i] = dp3 * dp3;\n}\nvec4 color = texture2D(u_colorTexture, v_uv);\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\n}"},filterEffect:{"filterEffect.frag":"precision mediump float;\nuniform sampler2D u_colorTexture;\nuniform mat4 u_coefficients;\nvarying vec2 v_uv;\nvoid main() {\nvec4 color = texture2D(u_colorTexture, v_uv);\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\nfloat a = color.a;\ngl_FragColor = vec4(a * rgbw.rgb, a);\n}"},pp:{"pp.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying vec2 v_uv;\nvoid main() {\ngl_Position = vec4(a_position, 0.0, 1.0);\nv_uv = (a_position + 1.0) / 2.0;\n}"}},raster:{bitmap:{"bitmap.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform highp vec2 u_coordScale;\nuniform lowp float u_opacity;\n#include <filtering/bicubic.glsl>\nvoid main() {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\n#else\nvec4 color = texture2D(u_texture, v_texcoord);\n#endif\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\n}","bitmap.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"},common:{"common.glsl":"uniform sampler2D u_image;\nuniform int u_bandCount;\nuniform bool u_flipY;\nuniform float u_opacity;\nuniform int u_resampling;\nuniform vec2 u_srcImageSize;\n#ifdef APPLY_PROJECTION\n#include <raster/common/projection.glsl>\n#endif\n#ifdef BICUBIC\n#include <filtering/bicubic.glsl>\n#endif\n#ifdef BILINEAR\n#include <filtering/bilinear.glsl>\n#endif\nvec2 getPixelLocation(vec2 coords) {\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\n#ifdef APPLY_PROJECTION\ntargetLocation = projectPixelLocation(targetLocation);\n#endif\nreturn targetLocation;\n}\nbool isOutside(vec2 coords){\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\nreturn true;\n} else {\nreturn false;\n}\n}\nvec4 getPixel(vec2 pixelLocation) {\n#ifdef BICUBIC\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\n#elif defined(BILINEAR)\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\n#else\nvec4 color = texture2D(u_image, pixelLocation);\n#endif\nreturn color;\n}","common.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform highp float u_scale;\nuniform highp vec2 u_offset;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos * u_scale + u_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}","contrastBrightness.glsl":"uniform float u_contrastOffset;\nuniform float u_brightnessOffset;\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\nfloat maxI = 255.0;\nfloat mid = 128.0;\nfloat c = u_contrastOffset;\nfloat b = u_brightnessOffset;\nvec4 v;\nif (c > 0.0 && c < 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\n} else if (c <= 0.0 && c > -100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\n} else if (c == 100.0) {\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\nv = (sign(v) + 1.0) / 2.0;\n} else if (c == -100.0) {\nv = vec4(mid, mid, mid, currentPixel.a);\n}\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\n}","getSurfaceValues.glsl":"#include <raster/common/mirror.glsl>\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\nvec2 onePixel = 1.0 / srcImageSize;\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\nvalues[0] = va.r;\nvalues[1] = vb.r;\nvalues[2] = vc.r;\nvalues[3] = vd.r;\nvalues[4] = ve.r;\nvalues[5] = vf.r;\nvalues[6] = vg.r;\nvalues[7] = vh.r;\nvalues[8] = vi.r;\nvalues[9] = alpha;\n}","inverse.glsl":"float invertValue(float value) {\nfloat s = sign(value);\nreturn (s * s) / (value + abs(s) - 1.0);\n}","mirror.glsl":"vec2 mirror(vec2 pos) {\nvec2 pos1 = abs(pos);\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\n}","projection.glsl":"uniform sampler2D u_transformGrid;\nuniform vec2 u_transformSpacing;\nuniform vec2 u_transformGridSize;\nuniform vec2 u_targetImageSize;\nvec2 projectPixelLocation(vec2 coords) {\n#ifdef LOOKUP_PROJECTION\nvec4 pv = texture2D(u_transformGrid, coords);\nreturn vec2(pv.r, pv.g);\n#endif\nvec2 index_image = floor(coords * u_targetImageSize);\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\nvec2 srcLocation;\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\nif (pos.s <= pos.t) {\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\n} else {\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\n}\nreturn srcLocation;\n}"},flow:{"getFadeOpacity.glsl":"uniform float u_decayRate;\nuniform float u_fadeToZero;\nfloat getFadeOpacity(float x) {\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\n}","getFragmentColor.glsl":"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\nif (dist > featheringStart) {\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\n}\nreturn color;\n}",imagery:{"imagery.frag":"precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D u_texture;\nuniform float u_Min;\nuniform float u_Max;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nfloat getIntensity(float v) {\nreturn u_Min + v * (u_Max - u_Min);\n}\nvoid main(void) {\nvec4 sampled = texture2D(u_texture, v_texcoord);\nfloat intensity = getIntensity(sampled.r);\ngl_FragColor = getColor(intensity);\ngl_FragColor.a *= getOpacity(sampled.r);\ngl_FragColor.a *= sampled.a;\ngl_FragColor.rgb *= gl_FragColor.a;\n}","imagery.vert":"attribute vec2 a_position;\nattribute vec2 a_texcoord;\nuniform mat3 u_dvsMat3;\nvarying vec2 v_texcoord;\nvoid main(void) {\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_texcoord = a_texcoord;\n}"},particles:{"particles.frag":"precision highp float;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/getFragmentColor.glsl>\nvoid main(void) {\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\n}","particles.vert":"attribute vec4 a_xyts0;\nattribute vec4 a_xyts1;\nattribute vec4 a_typeIdDurationSeed;\nattribute vec4 a_extrudeInfo;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nvarying vec4 v_color;\nvarying vec2 v_texcoord;\nvarying float v_size;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/vv.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nvec2 position0 = a_xyts0.xy;\nfloat t0 = a_xyts0.z;\nfloat speed0 = a_xyts0.w;\nvec2 position1 = a_xyts1.xy;\nfloat t1 = a_xyts1.z;\nfloat speed1 = a_xyts1.w;\nfloat type = a_typeIdDurationSeed.x;\nfloat id = a_typeIdDurationSeed.y;\nfloat duration = a_typeIdDurationSeed.z;\nfloat seed = a_typeIdDurationSeed.w;\nvec2 e0 = a_extrudeInfo.xy;\nvec2 e1 = a_extrudeInfo.zw;\nfloat animationPeriod = duration + u_trailLength;\nfloat scaledTime = u_time * u_flowSpeed;\nfloat randomizedTime = scaledTime + seed * animationPeriod;\nfloat t = mod(randomizedTime, animationPeriod);\nfloat fUnclamped = (t - t0) / (t1 - t0);\nfloat f = clamp(fUnclamped, 0.0, 1.0);\nfloat clampedTime = mix(t0, t1, f);\nfloat speed = mix(speed0, speed1, f);\nvec2 extrude;\nvec2 position;\nfloat fadeOpacity;\nfloat introOpacity;\nif (type == 2.0) {\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nvec2 ortho = mix(e0, e1, f);\nvec2 parallel;\nparallel = normalize(position1 - position0) * 0.5;\nif (id == 1.0) {\nextrude = ortho;\nv_texcoord = vec2(0.5, 0.0);\n} else if (id == 2.0) {\nextrude = -ortho;\nv_texcoord = vec2(0.5, 1.0);\n} else if (id == 3.0) {\nextrude = ortho + parallel;\nv_texcoord = vec2(1.0, 0.0);\n} else if (id == 4.0) {\nextrude = -ortho + parallel;\nv_texcoord = vec2(1.0, 1.0);\n}\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else {\nif (fUnclamped < 0.0) {\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\nreturn;\n}\nif (id == 1.0) {\nextrude = e0;\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 2.0) {\nextrude = -e0;\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\nintroOpacity = 1.0 - exp(-t0);\nv_size = getSize(speed0);\nv_color = getColor(speed0);\nv_color.a *= getOpacity(speed0);\nposition = position0;\n} else if (id == 3.0) {\nextrude = mix(e0, e1, f);\nv_texcoord = vec2(0.5, 0.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n} else if (id == 4.0) {\nextrude = -mix(e0, e1, f);\nv_texcoord = vec2(0.5, 1.0);\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\nintroOpacity = 1.0 - exp(-clampedTime);\nv_size = getSize(speed);\nv_color = getColor(speed);\nv_color.a *= getOpacity(speed);\nposition = mix(position0, position1, f);\n}\n}\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_color.a *= fadeOpacity;\nv_color.a *= mix(1.0, introOpacity, u_introFade);\nv_color.rgb *= v_color.a;\n}"},streamlines:{"streamlines.frag":"precision highp float;\nvarying float v_side;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_size;\nuniform float u_time;\nuniform float u_trailLength;\nuniform float u_flowSpeed;\nuniform float u_featheringSize;\nuniform float u_introFade;\n#include <raster/flow/getFragmentColor.glsl>\n#include <raster/flow/getFadeOpacity.glsl>\nvoid main(void) {\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\n}","streamlines.vert":"attribute vec3 a_positionAndSide;\nattribute vec3 a_timeInfo;\nattribute vec2 a_extrude;\nattribute float a_speed;\nuniform mat3 u_dvsMat3;\nuniform mat3 u_displayViewMat3;\nvarying float v_time;\nvarying float v_totalTime;\nvarying float v_timeSeed;\nvarying vec4 v_color;\nvarying float v_side;\nvarying float v_size;\nuniform float u_featheringSize;\n#include <raster/flow/vv.glsl>\nvoid main(void) {\nvec4 lineColor = getColor(a_speed);\nfloat lineOpacity = getOpacity(a_speed);\nfloat lineSize = getSize(a_speed);\nvec2 position = a_positionAndSide.xy;\nv_side = a_positionAndSide.z;\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\ngl_Position = vec4(xy, 0.0, 1.0);\nv_time = a_timeInfo.x;\nv_totalTime = a_timeInfo.y;\nv_timeSeed = a_timeInfo.z;\nv_color = lineColor;\nv_color.a *= lineOpacity;\nv_color.rgb *= v_color.a;\nv_size = lineSize;\n}"},"vv.glsl":"#define MAX_STOPS 8\n#ifdef VV_COLOR\nuniform float u_color_stops[MAX_STOPS];\nuniform vec4 u_color_values[MAX_STOPS];\nuniform int u_color_count;\n#else\nuniform vec4 u_color;\n#endif\n#ifdef VV_OPACITY\nuniform float u_opacity_stops[MAX_STOPS];\nuniform float u_opacity_values[MAX_STOPS];\nuniform int u_opacity_count;\n#else\nuniform float u_opacity;\n#endif\n#ifdef VV_SIZE\nuniform float u_size_stops[MAX_STOPS];\nuniform float u_size_values[MAX_STOPS];\nuniform int u_size_count;\n#else\nuniform float u_size;\n#endif\nuniform float u_featheringOffset;\nvec4 getColor(float x) {\n#ifdef VV_COLOR\nvec4 color = u_color_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_color_count) {\nbreak;\n}\nfloat x1 = u_color_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_color_stops[i];\nvec4 y2 = u_color_values[i];\nif (x < x2) {\nvec4 y1 = u_color_values[i - 1];\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\ncolor = y2;\n}\n}\n}\n#else\nvec4 color = u_color;\n#endif\nreturn color;\n}\nfloat getOpacity(float x) {\n#ifdef VV_OPACITY\nfloat opacity = u_opacity_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_opacity_count) {\nbreak;\n}\nfloat x1 = u_opacity_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_opacity_stops[i];\nfloat y2 = u_opacity_values[i];\nif (x < x2) {\nfloat y1 = u_opacity_values[i - 1];\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nopacity = y2;\n}\n}\n}\n#else\nfloat opacity = u_opacity;\n#endif\nreturn opacity;\n}\nfloat getSize(float x) {\n#ifdef VV_SIZE\nfloat size = u_size_values[0];\n{\nfor (int i = 1; i < MAX_STOPS; i++) {\nif (i >= u_size_count) {\nbreak;\n}\nfloat x1 = u_size_stops[i - 1];\nif (x < x1) {\nbreak;\n}\nfloat x2 = u_size_stops[i];\nfloat y2 = u_size_values[i];\nif (x < x2) {\nfloat y1 = u_size_values[i - 1];\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\n} else {\nsize = y2;\n}\n}\n}\n#else\nfloat size = u_size;\n#endif\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\n}"},hillshade:{"hillshade.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform int u_hillshadeType;\nuniform float u_sinZcosAs[6];\nuniform float u_sinZsinAs[6];\nuniform float u_cosZs[6];\nuniform float u_weights[6];\nuniform vec2 u_factor;\nuniform float u_minValue;\nuniform float u_maxValue;\n#include <raster/lut/colorize.glsl>\n#include <raster/common/getSurfaceValues.glsl>\nvec3 rgb2hsv(vec3 c) {\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\n}\nvec3 hsv2rgb(vec3 c) {\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\nvec3 hsv = rgb2hsv(rgb.xyz);\nhsv.z = hillshade;\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nif (currentPixel.a == 0.0) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nfloat pv[10];\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\nfloat hillshade = 0.0;\nif (u_hillshadeType == 0){\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\nif (z < 0.0)  z = 0.0;\nhillshade = z;\n} else {\nfor (int k = 0; k < 6; k++) {\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\nif (z < 0.0) z = 0.0;\nhillshade = hillshade + z * u_weights[k];\nif (k == 5) break;\n}\n}\n#ifdef APPLY_COLORMAP\ngl_FragColor = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\n#else\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\n#endif\n}"},lut:{"colorize.glsl":"uniform sampler2D u_colormap;\nuniform float u_colormapOffset;\nuniform float u_colormapMaxIndex;\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\nvec4 color = texture2D(u_colormap, clrPosition);\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\nreturn result;\n}","lut.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\n#include <raster/lut/colorize.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\nvec4 result = colorize(currentPixel, 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\n}"},magdir:{"magdir.frag":"precision mediump float;\nvarying vec4 v_color;\nuniform lowp float u_opacity;\nvoid main() {\ngl_FragColor = v_color * u_opacity;\n}","magdir.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nuniform float u_rotation;\nuniform vec4 u_colors[12];\nvarying vec4 v_color;\nvoid main()\n{\nfloat angle = a_offset.y + u_rotation;\n#ifndef ROTATION_GEOGRAPHIC\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\n#endif\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\nv_color = u_colors[int(a_vv.x)];\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},reproject:{"reproject.frag":"precision mediump float;\nvarying vec2 v_texcoord;\n#include <raster/common/common.glsl>\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\n}","reproject.vert":"precision mediump float;\nattribute vec2 a_position;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_position;\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\n}"},rfx:{aspect:{"aspect.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nconst float pi = 3.14159265359;\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\nalpha *= sign(abs(dzx) + abs(dzy));\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\nfloat aspect = aspect_rad * 180.0 / pi;\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\n}"},bandarithmetic:{"bandarithmetic.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nuniform float u_adjustments[3];\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index;\n#ifdef NDXI\nindex = (nir - red) * invertValue(nir + red);\n#elif defined(SR)\nindex = nir * invertValue(red);\n#elif defined(CI)\nindex = nir * invertValue(red) - 1.0;\n#elif defined(SAVI)\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\n#elif defined(TSAVI)\nfloat s = u_adjustments[0];\nfloat a = u_adjustments[1];\nfloat x = u_adjustments[2];\nfloat y = -a * s + x * (1.0 + s * s);\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\n#elif defined(MAVI)\nindex = 0.5 * (2.0 * (nir + 1.0) - sqrt(pow((2.0 * nir + 1.0), 2.0) - 8.0 * (nir - red)));\n#elif defined(GEMI)\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\n#elif defined(PVI)\nfloat a = u_adjustments[0];\nfloat b = u_adjustments[1];\nfloat y = sqrt(1.0 + a * a);\nindex = (nir - a * red - b) * invertValue(y);\n#elif defined(VARI)\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\n#elif defined(MTVI2)\nfloat green = pv2.b;\nfloat v = pow(sqrt((2.0 * nir + 1.0), 2.0) - 6.0 * nir - 5.0 * sqrt(red) - 0.5);\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * v;\n#elif defined(RTVICORE)\nfloat green = pv2.b;\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\n#elif defined(EVI)\nfloat blue = pv2.b;\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\nindex =  (2.5 * (nir - red)) * invertValue(denom);\n#elif defined(WNDWI)\nfloat g = pv2.r;\nfloat n = pv2.g;\nfloat s = pv2.s;\nfloat a = u_adjustments[0];\nfloat denom = g + a * n + (1.0 - a) * s;\nindex = (g - a * n - (1 - a) * s) * invertValue(denom);\n#elif defined(BAI)\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\n#else\ngl_FragColor = pv;\nreturn;\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}"},compositeband:{"compositeband.frag":"precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\nuniform sampler2D u_image2;\nvarying vec2 v_texcoord;\nvoid main() {\nvec4 p0 = texture2D(u_image, v_texcoord);\nvec4 p1 = texture2D(u_image1, v_texcoord);\nvec4 p2 = texture2D(u_image2, v_texcoord);\ngl_FragColor = vec4(p0.r, p1.r, p2.r, p0.a * p1.a * p2.a);\n}"},convolution:{"convolution.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_srcImageSize;\n#define KERNEL_SIZE_ROWS ROWS\n#define KERNEL_SIZE_COLS COLS\nuniform vec2 u_clampRange;\nuniform float u_kernel[25];\n#include <raster/common/mirror.glsl>\nvoid main() {\nvec3 rgb = vec3(0.0, 0.0, 0.0);\nvec2 resolution = 1.0 / u_srcImageSize;\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\nfloat alpha = 1.0;\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\nfloat pos_row = rowOffset + float(row);\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\nvec4 pv = texture2D(u_image, mirror(pos));\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\nalpha *= pv.a;\n}\n}\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(rgb * alpha, alpha);\n}"},curvature:{"curvature.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform float u_zlFactor;\nuniform vec2 u_srcImageSize;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\nfloat curvature = 0.0;\n#ifdef STANDARD\ncurvature = -u_zlFactor * (d + e);\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n#else\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\nfloat g = (-pv[3] + pv[5]) / 2.0;\nfloat h = (pv[1] - pv[7]) / 2.0;\nfloat g2 = g * g;\nfloat h2 = h * h;\n#ifdef PROFILE\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\n#else\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\n#endif\n#endif\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\n}"},extractband:{"extractband.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\ngl_FragColor = vec4(pv2, pv.a);\n}"},local:{"local.frag":"precision mediump float;\nuniform sampler2D u_image;\nuniform sampler2D u_image1;\n#ifdef ONE_CONSTANT\nuniform float u_image1Const;\n#ifdef TWO_CONSTANT\nuniform float u_image2Const;\n#endif\nuniform mat3 u_imageSwap;\n#endif\nvarying vec2 v_texcoord;\nuniform vec2 u_domainRange;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv0 = texture2D(u_image, v_texcoord);\nfloat a = pv0.r;\n#ifdef TWO_IMAGES\n#ifdef ONE_CONSTANT\nfloat b = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, 0);\na = abc.s;\nb = abc.t;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\n#endif\n#elif defined(CONDITIONAL)\n#ifdef TWO_CONSTANT\nfloat b = u_image1Const;\nfloat c = u_image2Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#elif defined(ONE_CONSTANT)\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nfloat b = pv1.r;\nfloat c = u_image1Const;\nvec3 abc = u_imageSwap * vec3(a, b, c);\na = abc.s;\nb = abc.t;\nc = abc.p;\n#else\nvec4 pv1 = texture2D(u_image1, v_texcoord);\nvec4 pv2 = texture2D(u_image2, v_texcoord);\nfloat b = pv1.r;\nfloat c = pv2.r;\n#endif\n#endif\nfloat result = a;\nfloat alpha = pv0.a;\n#ifdef PLUS\nresult = a + b;\n#elif defined(MINUS)\nresult = a - b;\n#elif defined(TIMES)\nresult = a * b;\n#elif defined(DIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOATDIVIDE)\nresult = a * invertValue(b);\nalpha *= float(abs(sign(b)));\n#elif defined(FLOORDIVIDE)\nresult = floor(a * invertValue(b));\nalpha *= float(abs(sign(b)));\n#elif defined(SQUARE)\nresult = a * a;\n#elif defined(SQRT)\nresult = sqrt(a);\n#elif defined(POWER)\nresult = pow(a, b);\n#elif defined(LN)\nresult = a <= 0.0 ? 0.0: log(a);\nalpha *= float(a > 0.0);\n#elif defined(LOG_1_0)\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\nalpha *= float(a > 0.0);\n#elif defined(LOG_2)\nresult = a <= 0.0 ? 0.0: log2(a);\nalpha *= float(a > 0.0);\n#elif defined(EXP)\nresult = exp(a);\n#elif defined(EXP_1_0)\nresult = pow(10.0, a);\n#elif defined(EXP_2)\nresult = pow(2.0, a);\n#elif defined(ROUNDDOWN)\nresult = floor(a);\n#elif defined(ROUNDUP)\nresult = ceil(a);\n#elif defined(INT)\nresult = float(sign(a)) * floor(abs(a));\n#elif defined(MOD)\nresult = mod(a, b);\n#elif defined(NEGATE)\nresult = -a;\n#elif defined(ABS)\nresult = abs(a);\n#elif defined(ACOS)\nresult = abs(a) > 1.0 ? 0.0: acos(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ACOSH)\nresult = acosh(a);\n#elif defined(POLYFILLACOSH)\nresult = log(a + sqrt(a * a - 1.0));\n#elif defined(ASIN)\nresult = abs(a) > 1.0 ? 0.0: asin(a);\nalpha *= step(abs(a), 1.00001);\n#elif defined(ASINH)\nresult = asinh(a);\n#elif defined(POLYFILLASINH)\nresult = log(a + sqrt(a * a + 1.0));\n#elif defined(ATAN)\nresult = atan(a);\n#elif defined(ATANH)\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\nalpha *= step(abs(a), 1.0);\n#elif defined(POLYFILLATANH)\nresult = a == 1.0 ? 0.0 : 0.5 * log((1.0 + a)/(1.0 -a));\n#elif defined(ATAN_2)\nresult = atan(a, b);\n#elif defined(COS)\nresult = cos(a);\n#elif defined(COSH)\nresult = cosh(a);\n#elif defined(POLYFILLCOSH)\nfloat halfexp = exp(a) / 2.0;\nresult = halfexp + 1.0 / halfexp;\n#elif defined(SIN)\nresult = sin(a);\n#elif defined(SINH)\nresult = sinh(a);\n#elif defined(POLYFILLSINH)\nfloat halfexp = exp(a) / 2.0;\nresult = halfexp - 1.0 / halfexp;\n#elif defined(TAN)\nresult = tan(a);\n#elif defined(TANH)\nresult = tanh(a);\n#elif defined(POLYFILLTANH)\nfloat expx = exp(a);\nresult = (expx - 1.0 / expx) / (expx + 1.0 / expx);\n#elif defined(BITWISEAND)\nresult = a & b;\n#elif defined(BITWISEOR)\nresult = a | b;\n#elif defined(BITWISELEFTSHIFT)\nresult = a << b;\n#elif defined(BITWISERIGHTSHIFT)\nresult = a >> b;\n#elif defined(BITWISENOT)\nresult = ~a;\n#elif defined(BITWISEXOR)\nresult = a ^ b;\n#elif defined(BOOLEANAND)\nresult = float((a != 0.0) && (b != 0.0));\n#elif defined(BOOLEANNOT)\nresult = float(a == 0.0);\n#elif defined(BOOLEANOR)\nresult = float((a != 0.0) || (b != 0.0));\n#elif defined(BOOLEANXOR)\nresult = float((a != 0.0) ^^ (b != 0.0));\n#elif defined(GREATERTHAN)\nresult = float(a > b);\n#elif defined(GREATERTHANEQUAL)\nresult = float(a >= b);\n#elif defined(LESSTHAN)\nresult = float(a < b);\n#elif defined(LESSTHANEQUAL)\nresult = float(a <= b);\n#elif defined(EQUALTO)\nresult = float(a == b);\n#elif defined(NOTEQUAL)\nresult = float(a != b);\n#elif defined(ISNULL)\nresult = float(alpha == 0.0);\nalpha = 1.0;\n#elif defined(SETNULL)\nfloat maskValue = float(a == 0.0);\nresult = maskValue * b;\nalpha *= maskValue;\n#elif defined(CONDITIONAL)\nfloat weight = float(abs(sign(a)));\nresult = weight * b + (1.0 - weight) * c;\n#endif\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\nresult = isInvalid ? 0.0 : result;\nalpha *= float(!isInvalid);\n#ifdef ROUND_OUTPUT\nresult = floor(result + 0.5);\n#endif\ngl_FragColor = vec4(result, result, result, alpha);\n}"},mask:{"mask.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_INCLUDED_RANGES 6\n#define LEN_NODATA_VALUES 6\nuniform highp float u_includedRanges[6];\nuniform highp float u_noDataValues[6];\nfloat maskFactor(float bandValue, float fromValue, float to) {\nfloat factor = 1.0;\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\nfactor *= float(u_noDataValues[i] != bandValue);\n}\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\nreturn factor;\n}\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\n#ifdef MULTI_BAND\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\nfloat maskFactor = redFactor * greenFactor * blueFactor;\ngl_FragColor = pv * maskFactor;\n#else\ngl_FragColor = pv * redFactor;\n#endif\n}"},ndvi:{"ndvi.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform mediump mat3 u_bandIndexMat3;\n#include <raster/common/inverse.glsl>\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\nfloat nir = pv2.r;\nfloat red = pv2.g;\nfloat index = (nir - red) * invertValue(nir + red);\n#ifdef SCALED\nindex = floor((index + 1.0) * 100.0 + 0.5);\n#endif\ngl_FragColor = vec4(index, index, index, pv.a);\n}"},remap:{"remap.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\n#define LEN_REMAP_RANGES 18\n#define LEN_NODATA_RANGES 12\nuniform highp float u_rangeMaps[18];\nuniform highp float u_noDataRanges[12];\nuniform highp float u_unmatchMask;\nuniform vec2 u_clampRange;\nvoid main() {\nvec4 pv = texture2D(u_image, v_texcoord);\nfloat factor = 1.0;\nfloat bandValue = pv.r;\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\nfactor *= inside;\n}\nfloat mapValue = 0.0;\nfloat includeMask = 0.0;\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\n}\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\n}"},slope:{"slope.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying vec2 v_texcoord;\nuniform vec2 u_cellSize;\nuniform float u_zFactor;\nuniform vec2 u_srcImageSize;\nuniform float u_pixelSizePower;\nuniform float u_pixelSizeFactor;\n#include <raster/common/getSurfaceValues.glsl>\nvoid main() {\nfloat pv[10];\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\nfloat alpha = pv[9];\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\n#ifdef PERCENT_RISE\nfloat percentRise = rise2run * 100.0;\ngl_FragColor = vec4(percentRise, percentRise, percentRise, alpha);\n#else\nfloat degree = atan(rise2run) * 57.2957795;\ngl_FragColor = vec4(degree, degree, degree, alpha);\n#endif\n}"},stretch:{"stretch.frag":"precision mediump float;\nuniform sampler2D u_image;\nvarying highp vec2 v_texcoord;\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\nval = clamp(val, minCutOff, maxCutOff);\nfloat stretchedVal;\n#ifdef USE_GAMMA\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\n#else\nstretchedVal = minOutput + (val - minCutOff) * factor;\n#endif\n#ifdef ROUND_OUTPUT\nstretchedVal = floor(stretchedVal + 0.5);\n#endif\nreturn stretchedVal;\n}\nvoid main() {\nvec4 currentPixel = texture2D(u_image, v_texcoord);\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\n#ifdef MULTI_BAND\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\n#else\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\n#endif\n}"},vs:{"vs.vert":"precision mediump float;\nattribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nvarying highp vec2 v_texcoord;\nvoid main()\n{\nv_texcoord = a_pos;\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\n}"}},scalar:{"scalar.frag":"precision mediump float;\nuniform lowp float u_opacity;\nvarying vec2 v_pos;\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\nconst float outlineSize = 0.02;\nconst float innerRadius = 0.25;\nconst float outerRadius = 0.42;\nconst float innerSquareLength = 0.15;\nvoid main() {\nmediump float dist = length(v_pos);\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\n#ifdef INNER_CIRCLE\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\n#else\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\n#endif\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\n}","scalar.vert":"precision mediump float;\nattribute vec2 a_pos;\nattribute vec2 a_offset;\nattribute vec2 a_vv;\nuniform highp mat3 u_dvsMat3;\nuniform highp vec2 u_coordScale;\nuniform vec2 u_symbolSize;\nuniform vec2 u_symbolPercentRange;\nuniform vec2 u_dataRange;\nvarying vec2 v_pos;\nvoid main()\n{\n#ifdef DATA_RANGE\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\n#else\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\n#endif\nvec2 size = u_symbolSize * sizePercentage;\nvec2 pos = a_pos + a_offset * size;\nv_pos = a_offset;\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\n}"},stretch:{"stretch.frag":"precision mediump float;\nvarying highp vec2 v_texcoord;\n#include <raster/common/common.glsl>\nuniform float u_minCutOff[3];\nuniform float u_maxCutOff[3];\nuniform float u_minOutput;\nuniform float u_maxOutput;\nuniform float u_factor[3];\nuniform bool u_useGamma;\nuniform float u_gamma[3];\nuniform float u_gammaCorrection[3];\n#include <raster/lut/colorize.glsl>\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\nif (val >= maxCutOff) {\nreturn maxOutput;\n} else if (val <= minCutOff) {\nreturn minOutput;\n}\nfloat stretchedVal;\nif (useGamma) {\nfloat tempf = 1.0;\nfloat outRange = maxOutput - minOutput;\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\nif (gamma > 1.0) {\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\n}\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\n} else {\nstretchedVal = minOutput + (val - minCutOff) * factor;\n}\nreturn stretchedVal;\n}\nvoid main() {\nvec2 pixelLocation = getPixelLocation(v_texcoord);\nif (isOutside(pixelLocation)) {\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\nreturn;\n}\nvec4 currentPixel = getPixel(pixelLocation);\n#ifdef NOOP\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\nreturn;\n#endif\nif (u_bandCount == 1) {\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\n#ifdef APPLY_COLORMAP\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\n#else\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\n#endif\n} else {\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\n}\n}"}},stencil:{"stencil.frag":"void main() {\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n}","stencil.vert":"attribute vec2 a_pos;\nuniform mat3 u_worldExtent;\nvoid main() {\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\n}"},tileInfo:{"tileInfo.frag":"uniform mediump sampler2D u_texture;\nvarying mediump vec2 v_tex;\nvoid main(void) {\nlowp vec4 color = texture2D(u_texture, v_tex);\ngl_FragColor = 0.75 * color;\n}","tileInfo.vert":"attribute vec2 a_pos;\nuniform highp mat3 u_dvsMat3;\nuniform mediump float u_depth;\nuniform mediump vec2 u_coord_ratio;\nuniform mediump vec2 u_delta;\nuniform mediump vec2 u_dimensions;\nvarying mediump vec2 v_tex;\nvoid main() {\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\nv_tex = a_pos;\n}"},util:{"atan2.glsl":"float atan2(in float y, in float x) {\nfloat t0, t1, t2, t3, t4;\nt3 = abs(x);\nt1 = abs(y);\nt0 = max(t3, t1);\nt1 = min(t3, t1);\nt3 = 1.0 / t0;\nt3 = t1 * t3;\nt4 = t3 * t3;\nt0 =         - 0.013480470;\nt0 = t0 * t4 + 0.057477314;\nt0 = t0 * t4 - 0.121239071;\nt0 = t0 * t4 + 0.195635925;\nt0 = t0 * t4 - 0.332994597;\nt0 = t0 * t4 + 0.999995630;\nt3 = t0 * t3;\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\nt3 = y < 0.0 ? -t3 : t3;\nreturn t3;\n}","encoding.glsl":"const vec4 rgba2float_factors = vec4(\n255.0 / (256.0),\n255.0 / (256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0),\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\n);\nfloat rgba2float(vec4 rgba) {\nreturn dot(rgba, rgba2float_factors);\n}"}};var i=new(n(250).a)((function(e){var t=a;return e.split("/").forEach((function(e){t&&(t=t[e])})),t}));function r(e){return i.resolveIncludes(e)}},196:function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var a=n(89),i=n(88),r=n(131),o=n(100),l=n(134),s=n(160),u=function(){function e(t,n){Object(a.a)(this,e),this._rctx=t,this._vertexBuffer=r.a.createVertex(t,o.B.STATIC_DRAW,new Uint16Array(n)),this._vao=new l.a(t,new Map([["a_position",0]]),{geometry:[new s.a("a_position",2,o.k.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}return Object(i.a)(e,[{key:"bind",value:function(){this._rctx.bindVAO(this._vao)}},{key:"unbind",value:function(){this._rctx.bindVAO(null)}},{key:"dispose",value:function(){this._vao.dispose()}},{key:"draw",value:function(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(o.q.TRIANGLE_STRIP,0,this._count)}}]),e}()},200:function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return o}));var a=n(100),i=n(160),r={geometry:[new i.a("a_pos",2,a.k.BYTE,0,2)]},o={geometry:[new i.a("a_pos",2,a.k.BYTE,0,4),new i.a("a_tex",2,a.k.BYTE,2,4)]},l={geometry:[new i.a("a_pos",2,a.k.UNSIGNED_SHORT,0,4)]}},202:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return l}));Math.PI;var a=256/360,i=1/Math.LN2;function r(e,t){return(e%=t)>=0?e:e+t}function o(e){return r(e*a,256)}function l(e){return Math.log(e)*i}},224:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var a,i,r,o=n(201),l={exports:{}};a=l,i=function(){function e(e,n,i){i=i||2;var r,o,l,u,c,f,d,v=n&&n.length,_=v?n[0]*i:e.length,m=t(e,0,_,i,!0),p=[];if(!m||m.next===m.prev)return p;if(v&&(m=s(e,n,m,i)),e.length>80*i){r=l=e[0],o=u=e[1];for(var g=i;g<_;g+=i)(c=e[g])<r&&(r=c),(f=e[g+1])<o&&(o=f),c>l&&(l=c),f>u&&(u=f);d=0!==(d=Math.max(l-r,u-o))?1/d:0}return a(m,p,i,r,o,d),p}function t(e,t,n,a,i){var r,o;if(i===A(e,t,n,a)>0)for(r=t;r<n;r+=a)o=E(r,e[r],e[r+1],o);else for(r=n-a;r>=t;r-=a)o=E(r,e[r],e[r+1],o);if(o&&y(o,o.next)){var l=o.next;I(o),o=l}return o}function n(e,t){if(!e)return e;t||(t=e);var n,a=e;do{if(n=!1,a.steiner||!y(a,a.next)&&0!==h(a.prev,a,a.next))a=a.next;else{var i=a.prev;if(I(a),(a=t=i)===a.next)break;n=!0}}while(n||a!==t);return t}function a(e,t,s,u,c,f,d){if(e){!d&&f&&v(e,u,c,f);for(var _,m,p=e;e.prev!==e.next;)if(_=e.prev,m=e.next,f?r(e,u,c,f):i(e))t.push(_.i/s),t.push(e.i/s),t.push(m.i/s),I(e),e=m.next,p=m.next;else if((e=m)===p){d?1===d?a(e=o(n(e),t,s),t,s,u,c,f,2):2===d&&l(e,t,s,u,c,f):a(n(e),t,s,u,c,f,1);break}}}function i(e){var t=e.prev,n=e,a=e.next;if(h(t,n,a)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(p(t.x,t.y,n.x,n.y,a.x,a.y,i.x,i.y)&&h(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function r(e,t,n,a){var i=e.prev,r=e,o=e.next;if(h(i,r,o)>=0)return!1;for(var l=i.x<r.x?i.x<o.x?i.x:o.x:r.x<o.x?r.x:o.x,s=i.y<r.y?i.y<o.y?i.y:o.y:r.y<o.y?r.y:o.y,u=i.x>r.x?i.x>o.x?i.x:o.x:r.x>o.x?r.x:o.x,c=i.y>r.y?i.y>o.y?i.y:o.y:r.y>o.y?r.y:o.y,f=_(l,s,t,n,a),d=_(u,c,t,n,a),v=e.prevZ,m=e.nextZ;v&&v.z>=f&&m&&m.z<=d;){if(v!==e.prev&&v!==e.next&&p(i.x,i.y,r.x,r.y,o.x,o.y,v.x,v.y)&&h(v.prev,v,v.next)>=0)return!1;if(v=v.prevZ,m!==e.prev&&m!==e.next&&p(i.x,i.y,r.x,r.y,o.x,o.y,m.x,m.y)&&h(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;v&&v.z>=f;){if(v!==e.prev&&v!==e.next&&p(i.x,i.y,r.x,r.y,o.x,o.y,v.x,v.y)&&h(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&p(i.x,i.y,r.x,r.y,o.x,o.y,m.x,m.y)&&h(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function o(e,t,a){var i=e;do{var r=i.prev,o=i.next.next;!y(r,o)&&b(r,i,i.next,o)&&S(r,o)&&S(o,r)&&(t.push(r.i/a),t.push(i.i/a),t.push(o.i/a),I(i),I(i.next),i=e=o),i=i.next}while(i!==e);return n(i)}function l(e,t,i,r,o,l){var s=e;do{for(var u=s.next.next;u!==s.prev;){if(s.i!==u.i&&g(s,u)){var c=T(s,u);return s=n(s,s.next),c=n(c,c.next),a(s,t,i,r,o,l),void a(c,t,i,r,o,l)}u=u.next}s=s.next}while(s!==e)}function s(e,a,i,r){var o,l,s,c=[];for(o=0,l=a.length;o<l;o++)(s=t(e,a[o]*r,o<l-1?a[o+1]*r:e.length,r,!1))===s.next&&(s.steiner=!0),c.push(m(s));for(c.sort(u),o=0;o<c.length;o++)i=n(i=f(c[o],i),i.next);return i}function u(e,t){return e.x-t.x}function c(e){if(e.next.prev===e)return e;for(var t=e;;){var n=t.next;if(n.prev===t||n===t||n===e)break;t=n}return t}function f(e,t){var a=function(e,t){var n,a=t,i=e.x,r=e.y,o=-1/0;do{if(r<=a.y&&r>=a.next.y&&a.next.y!==a.y){var l=a.x+(r-a.y)*(a.next.x-a.x)/(a.next.y-a.y);if(l<=i&&l>o){if(o=l,l===i){if(r===a.y)return a;if(r===a.next.y)return a.next}n=a.x<a.next.x?a:a.next}}a=a.next}while(a!==t);if(!n)return null;if(i===o)return n;var s,u=n,c=n.x,f=n.y,v=1/0;a=n;do{i>=a.x&&a.x>=c&&i!==a.x&&p(r<f?i:o,r,c,f,r<f?o:i,r,a.x,a.y)&&(s=Math.abs(r-a.y)/(i-a.x),S(a,e)&&(s<v||s===v&&(a.x>n.x||a.x===n.x&&d(n,a)))&&(n=a,v=s)),a=a.next}while(a!==u);return n}(e,t);if(!a)return t;var i=T(a,e),r=n(a,a.next),o=c(i);return n(o,o.next),r=c(r),c(t===a?r:t)}function d(e,t){return h(e.prev,e,t.prev)<0&&h(t.next,e,e.next)<0}function v(e,t,n,a){var i=e;do{null===i.z&&(i.z=_(i.x,i.y,t,n,a)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){var t,n,a,i,r,o,l,s,u=1;do{for(n=e,e=null,r=null,o=0;n;){for(o++,a=n,l=0,t=0;t<u&&(l++,a=a.nextZ);t++);for(s=u;l>0||s>0&&a;)0!==l&&(0===s||!a||n.z<=a.z)?(i=n,n=n.nextZ,l--):(i=a,a=a.nextZ,s--),r?r.nextZ=i:e=i,i.prevZ=r,r=i;n=a}r.nextZ=null,u*=2}while(o>1)}(i)}function _(e,t,n,a,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-a)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function m(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function p(e,t,n,a,i,r,o,l){return(i-o)*(t-l)-(e-o)*(r-l)>=0&&(e-o)*(a-l)-(n-o)*(t-l)>=0&&(n-o)*(r-l)-(i-o)*(a-l)>=0}function g(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&b(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(S(e,t)&&S(t,e)&&function(e,t){var n=e,a=!1,i=(e.x+t.x)/2,r=(e.y+t.y)/2;do{n.y>r!=n.next.y>r&&n.next.y!==n.y&&i<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(a=!a),n=n.next}while(n!==e);return a}(e,t)&&(h(e.prev,e,t.prev)||h(e,t.prev,t))||y(e,t)&&h(e.prev,e,e.next)>0&&h(t.prev,t,t.next)>0)}function h(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function y(e,t){return e.x===t.x&&e.y===t.y}function b(e,t,n,a){var i=O(h(e,t,n)),r=O(h(e,t,a)),o=O(h(n,a,e)),l=O(h(n,a,t));return i!==r&&o!==l||!(0!==i||!x(e,n,t))||!(0!==r||!x(e,a,t))||!(0!==o||!x(n,e,a))||!(0!==l||!x(n,t,a))}function x(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function O(e){return e>0?1:e<0?-1:0}function S(e,t){return h(e.prev,e,e.next)<0?h(e,t,e.next)>=0&&h(e,e.prev,t)>=0:h(e,t,e.prev)<0||h(e,e.next,t)<0}function T(e,t){var n=new C(e.i,e.x,e.y),a=new C(t.i,t.x,t.y),i=e.next,r=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,a.next=n,n.prev=a,r.next=a,a.prev=r,a}function E(e,t,n,a){var i=new C(e,t,n);return a?(i.next=a.next,i.prev=a,a.next.prev=i,a.next=i):(i.prev=i,i.next=i),i}function I(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function C(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function A(e,t,n,a){for(var i=0,r=t,o=n-a;r<n;r+=a)i+=(e[o]-e[r])*(e[r+1]+e[o+1]),o=r;return i}return e.deviation=function(e,t,n,a){var i=t&&t.length,r=i?t[0]*n:e.length,o=Math.abs(A(e,0,r,n));if(i)for(var l=0,s=t.length;l<s;l++){var u=t[l]*n,c=l<s-1?t[l+1]*n:e.length;o-=Math.abs(A(e,u,c,n))}var f=0;for(l=0;l<a.length;l+=3){var d=a[l]*n,v=a[l+1]*n,_=a[l+2]*n;f+=Math.abs((e[d]-e[_])*(e[v+1]-e[d+1])-(e[d]-e[v])*(e[_+1]-e[d+1]))}return 0===o&&0===f?0:Math.abs((f-o)/o)},e.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},a=0,i=0;i<e.length;i++){for(var r=0;r<e[i].length;r++)for(var o=0;o<t;o++)n.vertices.push(e[i][r][o]);i>0&&(a+=e[i-1].length,n.holes.push(a))}return n},e},void 0!==(r=i())&&(a.exports=r);var s=Object(o.b)(l.exports)},225:function(e,t,n){"use strict";function a(e){return window.WebGL2RenderingContext&&e instanceof window.WebGL2RenderingContext}n.d(t,"a",(function(){return a}))},226:function(e,t,n){"use strict";n.d(t,"a",(function(){return ae}));var a=n(267),i=n(89),r=n(88),o=n(90),l=n(91),s=n(166),u=n(117),c=n(123),f=n(183),d=n(100),v=n(175),_=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._color=Object(s.a)(0,1,0,1),e}return Object(r.a)(n,[{key:"dispose",value:function(){this._program&&this._program.dispose()}},{key:"prepareState",value:function(e){var t=e.context;t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setFaceCullingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(d.v.KEEP,d.v.KEEP,d.v.REPLACE),t.setStencilWriteMask(255),t.setStencilFunction(d.h.ALWAYS,0,255)}},{key:"draw",value:function(e,t){var n=e.context,a=e.state,i=e.requestRender,r=e.allowDelayedRender,o=Object(u.g)("clip",{geometry:[{location:0,name:"a_pos",count:2,type:d.k.SHORT}]}),l=t.getVAO(n,a,o.attributes,o.bufferLayouts);null!=l.indexBuffer&&(this._program||(this._program=Object(v.a)(n,f.a)),!r||null==i||this._program.compiled?(n.useProgram(this._program),this._program.setUniform2fv("u_coord_range",[1,1]),this._program.setUniform4fv("u_color",this._color),this._program.setUniformMatrix3fv("u_dvsMat3",a.displayMat3),n.bindVAO(l),n.drawElements(d.q.TRIANGLES,l.indexBuffer.size,d.k.UNSIGNED_INT,0),n.bindVAO()):i())}}]),n}(c.a),m=n(104),p=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._desc={vsPath:"overlay/overlay",fsPath:"overlay/overlay",attributes:new Map([["a_pos",0],["a_uv",1]])},e}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"prepareState",value:function(e){var t=e.context;t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setBlendFunctionSeparate(d.b.ONE,d.b.ONE_MINUS_SRC_ALPHA,d.b.ONE,d.b.ONE_MINUS_SRC_ALPHA),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(d.h.GREATER,255,255)}},{key:"draw",value:function(e,t){var n=e.context,a=e.painter,i=e.requestRender,r=e.allowDelayedRender;if(t.isReady){var o=t.computedOpacity,l=t.dvsMat3,s=t.isWrapAround,c=t.perspectiveTransform,f=t.texture;e.timeline.begin(this.name);var v=a.materialManager.getProgram(this._desc);if(!r||null==i||v.compiled){var _=Object(u.g)("overlay",{geometry:[{location:0,name:"a_pos",count:2,type:d.k.FLOAT}],tex:[{location:1,name:"a_uv",count:2,type:d.k.UNSIGNED_SHORT}]}),p=t.getVAO(n,_.bufferLayouts,_.attributes);if(p){n.bindVAO(p),n.useProgram(v),n.bindTexture(f,m.T),v.setUniformMatrix3fv("u_dvsMat3",l),v.setUniform1i("u_texture",m.T),v.setUniform1f("u_opacity",o),v.setUniform2fv("u_perspective",c);var g=s?10:4;n.drawArrays(d.q.TRIANGLE_STRIP,0,g),n.bindVAO(),e.timeline.end(this.name)}}else i()}}}]),n}(c.a),g=n(107),h=n(106),y=n(111),b=n(212),x=n(103),O=n(154),S=n(115),T=n(144);var E=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return x.d.FILL}},{key:"supportsSymbology",value:function(e){return e!==x.e.DOT_DENSITY}},{key:"drawGeometry",value:function(e,t,n,a){var i,r=e.context,o=e.painter,l=e.rendererInfo,s=e.requiredLevel,c=e.passOptions,f=e.requestRender,v=e.allowDelayedRender,_=S.a.load(n.materialKey),p=Object(T.b)(_.data),g=null!=c&&"hittest"===c.type,h=o.materialManager,y=null!==(i=p.programSpec)&&void 0!==i?i:function(e){var t={geometry:[{location:0,name:"a_pos",count:2,type:d.k.SHORT},{location:1,name:"a_id",count:3,type:d.k.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:d.k.UNSIGNED_BYTE},{location:3,name:"a_color",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_aux1",count:4,type:d.k.UNSIGNED_SHORT},{location:5,name:"a_aux2",count:4,type:d.k.SHORT},{location:6,name:"a_aux3",count:4,type:d.k.UNSIGNED_BYTE},{location:7,name:"a_zoomRange",count:2,type:d.k.UNSIGNED_SHORT}]};switch(e.symbologyType){case x.e.SIMPLE:case x.e.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:"materials/fill",vertexLayout:t}}(_),b=y.shader,O=y.vertexLayout,E=y.hittestAttributes,I=d.q.TRIANGLES,C=Object(u.g)(_.data,O);g&&(C=this._getTriangleDesc(n.materialKey,C,E),I=d.q.POINTS);var A=C,L=A.attributes,P=A.bufferLayouts,R=h.getMaterialProgram(e,_,b,L,a);if(!v||null==f||R.compiled){r.useProgram(R),this._setSharedUniforms(R,e,t);var D=t.key,M=D.row,w=D.col*m.fb,N=M*m.fb;if(R.setUniform2f("u_tileOffset",w%m.D,N%m.D),R.setUniform2f("u_maxIntNumOfCrossing",Math.floor(w/m.D),Math.floor(N/m.D)),_.textureBinding){o.textureManager.bindTextures(r,R,_);var V=1/Math.pow(2,s-t.key.level);R.setUniform1f("u_zoomFactor",V)}var z=1/e.pixelRatio;R.setUniform1f("u_blur",z),R.setUniform1f("u_antialiasing",z),this._setSizeVVUniforms(_,R,l,t),this._setColorAndOpacityVVUniforms(_,R,l);var F=n.target.getVAO(r,P,L,g),j=n.indexCount,k=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;g&&(j/=3,k/=3),r.bindVAO(F),this._drawFills(e,t,R,I,j,k)}else f()}},{key:"_drawFills",value:function(e,t,n,a,i,r){e.context.drawElements(a,i,d.k.UNSIGNED_INT,r)}}]),n}(O.a),I=n(131),C=n(186),A=n(253),L=n(254),P=n(148),R=n(147),D=n(134),M=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._dotTextureSize=0,e._dotTextures=null,e._dotSamplers=new Int32Array([m.Y,m.Z]),e._dotVAO=null,e._dotDesc={vsPath:"dot/dot",fsPath:"dot/dot",attributes:new Map([["a_pos",0]])},e}return Object(r.a)(n,[{key:"dispose",value:function(){Object(g.a)(Object(h.a)(n.prototype),"dispose",this).call(this),this._disposeTextures(),this._dotFBO=Object(y.f)(this._dotFBO),this._dotVAO=Object(y.f)(this._dotVAO)}},{key:"getGeometryType",value:function(){return x.d.FILL}},{key:"supportsSymbology",value:function(e){return e===x.e.DOT_DENSITY}},{key:"_drawFills",value:function(e,t,a,i,r,o){var l=e.passOptions;if(null!=l&&"hittest"===l.type)Object(g.a)(Object(h.a)(n.prototype),"_drawFills",this).call(this,e,t,a,i,r,o);else{var s=this._drawDotLocations(e,t,a,r,o);this._drawDotDensity(e,t,s)}}},{key:"_drawDotDensity",value:function(e,t,n){var a=e.context,i=e.painter,r=e.rendererInfo,o=e.requestRender,l=e.allowDelayedRender,s=i.materialManager.getProgram(this._dotDesc);if(!l||null==o||s.compiled){var u=r.rendererSchema;Object(T.a)(u,"dot-density");var c=this._createDotDensityMesh(a,this._dotDesc.attributes,{geometry:[{name:"a_pos",count:2,type:d.k.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});a.setStencilTestEnabled(!0),a.useProgram(s),s.setUniform1f("u_tileZoomFactor",1),s.setUniform1i("u_texture",this._dotSamplers[0]),s.setUniform1f("u_dotSize",Math.max(u.dotSize,1)),s.setUniform1f("u_pixelRatio",window.devicePixelRatio),this._setSharedUniforms(s,e,t),a.bindTexture(n,this._dotSamplers[0]),a.bindVAO(c),a.drawArrays(d.q.POINTS,0,262144)}else o()}},{key:"_drawDotLocations",value:function(e,t,n,a,i){var r=e.context,o=e.rendererInfo,l=e.requiredLevel,s=r.getViewport(),u=o.rendererSchema;Object(T.a)(u,"dot-density");var c=u.dotScale,f=u.colors,v=u.activeDots,_=u.backgroundColor,p=u.dotValue;r.setViewport(0,0,512,512);var g=r.getBoundFramebufferObject(),h=this._createFBO(r);r.bindFramebuffer(h),r.setClearColor(0,0,0,0),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.STENCIL_BUFFER_BIT),r.setStencilTestEnabled(!1);var y=1/Math.pow(2,l-t.key.level),b=m.fb,x=b*window.devicePixelRatio*b*window.devicePixelRatio,O=1/y*(1/y),S=c?e.state.scale/c:1;return n.setUniform1f("u_tileZoomFactor",y),n.setUniform1f("u_tileDotsOverArea",x/(m.fb*window.devicePixelRatio*m.fb*window.devicePixelRatio)),n.setUniformMatrix4fv("u_dotColors",f),n.setUniform4fv("u_isActive",v),n.setUniform4fv("u_dotBackgroundColor",_),n.setUniform1f("u_dotValue",Math.max(1,p*S*O)),this._bindDotDensityTextures(r,n,o,b),r.drawElements(d.q.TRIANGLES,a,d.k.UNSIGNED_INT,i),r.setViewport(s.x,s.y,s.width,s.height),r.bindFramebuffer(g),h.colorTexture}},{key:"_createFBO",value:function(e){if(null==this._dotFBO){var t=new R.a(512,512);t.samplingMode=d.x.NEAREST,t.wrapMode=d.z.CLAMP_TO_EDGE;var n=new A.a(e,new L.a(d.r.DEPTH_STENCIL,512,512));this._dotFBO=new C.a(e,t,n)}return this._dotFBO}},{key:"_disposeTextures",value:function(){if(this._dotTextures){for(var e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}},{key:"_bindDotDensityTextures",value:function(e,t,n,a){var i=n.rendererSchema;Object(T.a)(i,"dot-density");var r=this._createDotDensityTextures(e,a,i.seed);t.setUniform1iv("u_dotTextures",this._dotSamplers);for(var o=0;o<r.length;o++)e.bindTexture(r[o],this._dotSamplers[o])}},{key:"_createDotDensityMesh",value:function(e,t,n){if(null==this._dotVAO){for(var a=new Int16Array(524288),i=0;i<512;i++)for(var r=0;r<512;r++)a[2*(r+512*i)]=r,a[2*(r+512*i)+1]=i;var o=I.a.createVertex(e,d.B.STATIC_DRAW,a);this._dotVAO=new D.a(e,t,n,{geometry:o},null)}return this._dotVAO}},{key:"_createDotDensityTextures",value:function(e,t,n){if(this._dotTextureSize===t&&this._seed===n||(this._disposeTextures(),this._dotTextureSize=t,this._seed=n),null===this._dotTextures){var a=new b.a(n);this._dotTextures=[this._allocDotDensityTexture(e,t,a),this._allocDotDensityTexture(e,t,a)]}return this._dotTextures}},{key:"_allocDotDensityTexture",value:function(e,t,n){for(var a=new Float32Array(t*t*4),i=0;i<a.length;i++)a[i]=n.getFloat();var r=new R.a;return r.dataType=d.p.FLOAT,r.samplingMode=d.x.NEAREST,r.width=t,r.height=t,new P.a(e,r,a)}}]),n}(E),w=n(275),N=n(228),V=n(184),z=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(r.a)(n,[{key:"supportsSymbology",value:function(e){return e===x.e.PIE_CHART}},{key:"_drawMarkers",value:function(e,t,n,a,i,r,o){var l=e.context,s=e.rendererInfo.rendererSchema;Object(T.a)(s,"pie-chart"),n.setUniform4fv("u_colors",s.colors),n.setUniform4fv("u_defaultColor",s.defaultColor),n.setUniform4fv("u_othersColor",s.othersColor),n.setUniform4fv("u_outlineColor",s.outlineColor),n.setUniform1f("u_donutRatio",s.holePercentage),n.setUniform1f("u_sectorThreshold",s.sectorThreshold),n.setUniform1f("u_outlineWidth",s.outlineWidth),l.drawElements(a,i,d.k.UNSIGNED_INT,r)}}]),n}(V.a),F=n(229),j=n(92),k=n(141),U=n(151),B=n(118),G=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._color=Object(s.a)(1,0,0,1),e._patternMatrix=Object(U.b)(),e._programOptions={id:!1,pattern:!1},e}return Object(r.a)(n,[{key:"dispose",value:function(){this._vao&&(this._vao.dispose(),this._vao=null)}},{key:"drawMany",value:function(e,t){var n=e.context,a=e.painter,i=e.styleLayerUID,r=e.requestRender,o=e.allowDelayedRender;this._loadWGLResources(e);var l,s,u=e.displayLevel,c=e.styleLayer,f=c.backgroundMaterial,v=a.vectorTilesMaterialManager,_=c.getPaintValue("background-color",u),p=c.getPaintValue("background-opacity",u),g=c.getPaintValue("background-pattern",u),h=void 0!==g,y=_[3]*p,b=1|window.devicePixelRatio,O=e.spriteMosaic,S=b>m.gb?2:1,T=e.drawPhase===x.c.HITTEST,E=this._programOptions;E.id=T,E.pattern=h;var I=v.getMaterialProgram(n,f,E);if(!o||null==r||I.compiled){if(n.bindVAO(this._vao),n.useProgram(I),h){var C=O.getMosaicItemPosition(g,!0);if(null!=C){var A=C.tl,L=C.br,P=C.page;l=L[0]-A[0],s=L[1]-A[1];var R=O.getPageSize(P);null!=R&&(O.bind(n,d.x.LINEAR,P,m.ib),I.setUniform4f("u_tlbr",A[0],A[1],L[0],L[1]),I.setUniform2fv("u_mosaicSize",R),I.setUniform1i("u_texture",m.ib))}I.setUniform1f("u_opacity",p)}else this._color[0]=y*_[0],this._color[1]=y*_[1],this._color[2]=y*_[2],this._color[3]=y,I.setUniform4fv("u_color",this._color);if(I.setUniform1f("u_depth",c.z||0),T){var D=Object(B.c)(i+1);I.setUniform4fv("u_id",D)}var M,w=Object(j.a)(t);try{for(w.s();!(M=w.n()).done;){var N=M.value;if(I.setUniform1f("u_coord_range",N.rangeX),I.setUniformMatrix3fv("u_dvsMat3",N.transforms.dvs),h){var V=Math.max(Math.pow(2,Math.round(u)-N.key.level),1),z=S*N.width*V,F=z/Object(k.m)(l),U=z/Object(k.m)(s);this._patternMatrix[0]=F,this._patternMatrix[4]=U,I.setUniformMatrix3fv("u_pattern_matrix",this._patternMatrix)}n.setStencilFunction(d.h.EQUAL,0,255),n.drawArrays(d.q.TRIANGLE_STRIP,0,4)}}catch(G){w.e(G)}finally{w.f()}}else r()}},{key:"_loadWGLResources",value:function(e){if(!this._vao){var t=e.context,n=e.styleLayer.backgroundMaterial,a=new Int8Array([0,0,1,0,0,1,1,1]),i=I.a.createVertex(t,d.B.STATIC_DRAW,a),r=new D.a(t,n.getAttributeLocations(),n.getLayoutInfo(),{geometry:i});this._vao=r}}}]),n}(c.a),H=n(159),Y=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1},e}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,a=e.displayLevel,i=e.requiredLevel,r=e.state,o=e.drawPhase,l=e.painter,s=e.spriteMosaic,u=e.styleLayerUID,c=e.requestRender,f=e.allowDelayedRender;if(t.some((function(e){var t,n;return null!==(t=null===(n=e.layerData.get(u))||void 0===n?void 0:n.circleIndexCount)&&void 0!==t&&t}))){var v=e.styleLayer,_=v.circleMaterial,m=l.vectorTilesMaterialManager,p=v.getPaintValue("circle-translate",a),g=v.getPaintValue("circle-translate-anchor",a),h=o===x.c.HITTEST,y=this._programOptions;y.id=h;var b=m.getMaterialProgram(n,_,y);if(!f||null==c||b.compiled){n.useProgram(b),b.setUniformMatrix3fv("u_displayMat3",g===H.i.VIEWPORT?r.displayMat3:r.displayViewMat3),b.setUniform2fv("u_circleTranslation",p),b.setUniform1f("u_depth",v.z),b.setUniform1f("u_antialiasingWidth",1.2);var O=-1;if(h){var S=Object(B.c)(u+1);b.setUniform4fv("u_id",S)}var T,E=Object(j.a)(t);try{for(E.s();!(T=E.n()).done;){var I=T.value;if(I.layerData.has(u)){I.key.level!==O&&(O=I.key.level,_.setDataUniforms(b,a,v,O,s));var C=I.layerData.get(u);if(C.circleIndexCount){C.prepareForRendering(n);var A=C.vao;null!=A&&(n.bindVAO(A),b.setUniformMatrix3fv("u_dvsMat3",I.transforms.dvs),i!==I.key.level?n.setStencilFunction(d.h.EQUAL,I.stencilRef,255):n.setStencilFunction(d.h.GREATER,255,255),n.drawElements(d.q.TRIANGLES,C.circleIndexCount,d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*C.circleIndexStart),I.triangleCount+=C.circleIndexCount/3)}}}}catch(L){E.e(L)}finally{E.f()}}else c()}}}]),n}(c.a),W=n(99),q=1/65536,Z=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._fillProgramOptions={id:!1,pattern:!1},e._outlineProgramOptions={id:!1},e}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,a=e.displayLevel,i=e.drawPhase,r=e.renderPass,o=e.spriteMosaic,l=e.styleLayerUID,s=!1,u=Object(j.a)(t);try{for(u.s();!(n=u.n()).done;){var c=n.value;if(c.layerData.has(l)){var f=c.layerData.get(l);if(f.fillIndexCount>0||f.outlineIndexCount>0){s=!0;break}}}}catch(L){u.e(L)}finally{u.f()}if(s){var d,v=e.styleLayer,_=v.getPaintProperty("fill-pattern"),m=void 0!==_,p=m&&_.isDataDriven;if(m&&!p){var g=_.getValue(a);d=o.getMosaicItemPosition(g,!0)}var h=!m&&v.getPaintValue("fill-antialias",a),y=!0,b=1;if(!m){var O=v.getPaintProperty("fill-color"),S=v.getPaintProperty("fill-opacity");if((null===O||void 0===O||!O.isDataDriven)&&(null===S||void 0===S||!S.isDataDriven)){var T=v.getPaintValue("fill-color",a);(b=v.getPaintValue("fill-opacity",a)*T[3])>=1&&(y=!1)}}if(!y||"opaque"!==r){var E;i===x.c.HITTEST&&(E=Object(B.c)(l+1));var I=v.getPaintValue("fill-translate",a),C=v.getPaintValue("fill-translate-anchor",a);(y||"translucent"!==r)&&this._drawFill(e,l,v,t,I,C,m,d,p,E);var A=!v.hasDataDrivenOutlineColor&&v.outlineUsesFillColor&&b<1;h&&"opaque"!==r&&!A&&this._drawOutline(e,l,v,t,I,C,E)}}}},{key:"_drawFill",value:function(e,t,n,a,i,r,o,l,s,u){if(!o||s||null!=l){var c=e.context,f=e.displayLevel,v=e.state,_=e.drawPhase,p=e.painter,g=e.pixelRatio,h=e.spriteMosaic,y=e.requestRender,b=e.allowDelayedRender,O=n.fillMaterial,S=p.vectorTilesMaterialManager,T=g>m.gb?2:1,E=_===x.c.HITTEST,I=this._fillProgramOptions;I.id=E,I.pattern=o;var C=S.getMaterialProgram(c,O,I);if(!b||null==y||C.compiled){if(c.useProgram(C),null!=l){var A=l.page,L=h.getPageSize(A);null!=L&&(h.bind(c,d.x.LINEAR,A,m.ib),C.setUniform2fv("u_mosaicSize",L),C.setUniform1i("u_texture",m.ib))}C.setUniformMatrix3fv("u_displayMat3",r===H.i.VIEWPORT?v.displayMat3:v.displayViewMat3),C.setUniform2fv("u_fillTranslation",i),C.setUniform1f("u_depth",n.z+q),E&&C.setUniform4fv("u_id",u);var P,R=-1,D=Object(j.a)(a);try{for(D.s();!(P=D.n()).done;){var M=P.value;if(M.layerData.has(t)){M.key.level!==R&&(R=M.key.level,O.setDataUniforms(C,f,n,R,h));var w=M.layerData.get(t);if(w.fillIndexCount){w.prepareForRendering(c);var N=w.fillVAO;if(null!=N){if(c.bindVAO(N),C.setUniformMatrix3fv("u_dvsMat3",M.transforms.dvs),c.setStencilFunction(d.h.EQUAL,M.stencilRef,255),o){var V=Math.max(Math.pow(2,Math.round(f)-M.key.level),1),z=M.rangeX/(T*M.width*V);C.setUniform1f("u_patternFactor",z)}if(s){var F=w.patternMap;if(!F)continue;var k,U=Object(j.a)(F);try{for(U.s();!(k=U.n()).done;){var B=Object(W.a)(k.value,2),G=B[0],Y=B[1],Z=h.getPageSize(G);null!=Z&&(h.bind(c,d.x.LINEAR,G,m.ib),C.setUniform2fv("u_mosaicSize",Z),C.setUniform1i("u_texture",m.ib),c.drawElements(d.q.TRIANGLES,Y[1],d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*Y[0]))}}catch(K){U.e(K)}finally{U.f()}}else c.drawElements(d.q.TRIANGLES,w.fillIndexCount,d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*w.fillIndexStart);M.triangleCount+=w.fillIndexCount/3}}}}}catch(K){D.e(K)}finally{D.f()}}else y()}}},{key:"_drawOutline",value:function(e,t,n,a,i,r,o){var l=e.context,s=e.displayLevel,u=e.state,c=e.drawPhase,f=e.painter,v=e.pixelRatio,_=e.spriteMosaic,m=e.requestRender,p=e.allowDelayedRender,g=n.outlineMaterial,h=f.vectorTilesMaterialManager,y=.75/v,b=c===x.c.HITTEST,O=this._outlineProgramOptions;O.id=b;var S=h.getMaterialProgram(l,g,O);if(!p||null==m||S.compiled){l.useProgram(S),S.setUniformMatrix3fv("u_displayMat3",r===H.i.VIEWPORT?u.displayMat3:u.displayViewMat3),S.setUniform2fv("u_fillTranslation",i),S.setUniform1f("u_depth",n.z+q),S.setUniform1f("u_outline_width",y),b&&S.setUniform4fv("u_id",o);var T,E=-1,I=Object(j.a)(a);try{for(I.s();!(T=I.n()).done;){var C=T.value;if(C.layerData.has(t)){C.key.level!==E&&(E=C.key.level,g.setDataUniforms(S,s,n,E,_));var A=C.layerData.get(t);if(A.prepareForRendering(l),A.outlineIndexCount){var L=A.outlineVAO;null!=L&&(l.bindVAO(L),S.setUniformMatrix3fv("u_dvsMat3",C.transforms.dvs),l.setStencilFunction(d.h.EQUAL,C.stencilRef,255),l.drawElements(d.q.TRIANGLES,A.outlineIndexCount,d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*A.outlineIndexStart),C.triangleCount+=A.outlineIndexCount/3)}}}}catch(P){I.e(P)}finally{I.f()}}else m()}}]),n}(c.a),K=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._programOptions={id:!1,pattern:!1,sdf:!1},e}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n=e.context,a=e.displayLevel,i=e.state,r=e.drawPhase,o=e.painter,l=e.pixelRatio,s=e.spriteMosaic,u=e.styleLayerUID,c=e.requestRender,f=e.allowDelayedRender;if(t.some((function(e){var t,n;return null!==(t=null===(n=e.layerData.get(u))||void 0===n?void 0:n.lineIndexCount)&&void 0!==t&&t}))){var v,_,p=e.styleLayer,g=p.lineMaterial,h=o.vectorTilesMaterialManager,y=p.getPaintValue("line-translate",a),b=p.getPaintValue("line-translate-anchor",a),O=p.getPaintProperty("line-pattern"),S=void 0!==O,T=S&&O.isDataDriven;if(S&&!T){var E=O.getValue(a);v=s.getMosaicItemPosition(E)}var I=!1;if(!S){var C=p.getPaintProperty("line-dasharray");if(I=(_=void 0!==C)&&C.isDataDriven,_&&!I){var A=C.getValue(a),L=p.getDashKey(A,p.getLayoutValue("line-cap",a));v=s.getMosaicItemPosition(L)}}var P=1/l,R=r===x.c.HITTEST,D=this._programOptions;D.id=R,D.pattern=S,D.sdf=_;var M=h.getMaterialProgram(n,g,D);if(!f||null==c||M.compiled){if(n.useProgram(M),M.setUniformMatrix3fv("u_displayViewMat3",i.displayViewMat3),M.setUniformMatrix3fv("u_displayMat3",b===H.i.VIEWPORT?i.displayMat3:i.displayViewMat3),M.setUniform2fv("u_lineTranslation",y),M.setUniform1f("u_depth",p.z),M.setUniform1f("u_antialiasing",P),R){var w=Object(B.c)(u+1);M.setUniform4fv("u_id",w)}if(v&&null!=v){var N=v.page,V=s.getPageSize(N);null!=V&&(s.bind(n,d.x.LINEAR,N,m.ib),M.setUniform2fv("u_mosaicSize",V),M.setUniform1i("u_texture",m.ib))}var z,F=-1,k=Object(j.a)(t);try{for(k.s();!(z=k.n()).done;){var U=z.value;if(U.layerData.has(u)){U.key.level!==F&&(F=U.key.level,g.setDataUniforms(M,a,p,F,s));var G=Math.pow(2,a-F)/l;M.setUniform1f("u_zoomFactor",G);var Y=U.layerData.get(u);if(Y.lineIndexCount){Y.prepareForRendering(n);var q=Y.vao;if(null!=q){if(n.bindVAO(q),M.setUniformMatrix3fv("u_dvsMat3",U.transforms.dvs),n.setStencilFunction(d.h.EQUAL,U.stencilRef,255),T||I){var Z=Y.patternMap;if(!Z)continue;var K,X=Object(j.a)(Z);try{for(X.s();!(K=X.n()).done;){var Q=Object(W.a)(K.value,2),J=Q[0],$=Q[1],ee=s.getPageSize(J);null!=ee&&(s.bind(n,d.x.LINEAR,J,m.ib),M.setUniform2fv("u_mosaicSize",ee),M.setUniform1i("u_texture",m.ib),n.drawElements(d.q.TRIANGLES,$[1],d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*$[0]))}}catch(te){X.e(te)}finally{X.f()}}else n.drawElements(d.q.TRIANGLES,Y.lineIndexCount,d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*Y.lineIndexStart);U.triangleCount+=Y.lineIndexCount/3}}}}}catch(te){k.e(te)}finally{k.f()}}else c()}}}]),n}(c.a),X=n(156),Q=n(251),J=n(202),$=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._iconProgramOptions={id:!1,sdf:!1},e._sdfProgramOptions={id:!1},e._spritesTextureSize=Object(X.c)(),e}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"drawMany",value:function(e,t){var n,a=e.drawPhase,i=e.styleLayerUID,r=e.styleLayer;a===x.c.HITTEST&&(n=Object(B.c)(i+1)),this._drawIcons(e,r,t,n),this._drawText(e,r,t,n)}},{key:"_drawIcons",value:function(e,t,n,a){var i,r,o=e.context,l=e.displayLevel,s=e.drawPhase,u=e.painter,c=e.spriteMosaic,f=e.state,d=e.styleLayerUID,v=e.requestRender,_=e.allowDelayedRender,p=t.iconMaterial,g=u.vectorTilesMaterialManager,h=!1,y=Object(j.a)(n);try{for(y.s();!(r=y.n()).done;){var b=r.value;if(b.layerData.has(d)&&(i=b.layerData.get(d)).iconPerPageElementsMap.size>0){h=!0;break}}}catch(B){y.e(B)}finally{y.f()}if(h){var O=t.getPaintValue("icon-translate",l),S=t.getPaintValue("icon-translate-anchor",l),T=t.getLayoutValue("icon-rotation-alignment",l);T===H.a.AUTO&&(T=t.getLayoutValue("symbol-placement",l)===H.e.POINT?H.a.VIEWPORT:H.a.MAP);var E=T===H.a.MAP,I=t.getLayoutValue("icon-keep-upright",l)&&E,C=i.isIconSDF,A=s===x.c.HITTEST,L=this._iconProgramOptions;L.id=A,L.sdf=C;var P=g.getMaterialProgram(o,p,L);if(!_||null==v||P.compiled){o.useProgram(P),P.setUniformMatrix3fv("u_displayViewMat3",T===H.a.MAP?f.displayViewMat3:f.displayMat3),P.setUniformMatrix3fv("u_displayMat3",S===H.i.VIEWPORT?f.displayMat3:f.displayViewMat3),P.setUniform2fv("u_iconTranslation",O),P.setUniform1f("u_depth",t.z),P.setUniform1f("u_mapRotation",Object(J.a)(f.rotation)),P.setUniform1f("u_keepUpright",I?1:0),P.setUniform1f("u_level",10*l),P.setUniform1i("u_texture",m.ib),P.setUniform1f("u_fadeDuration",Q.d/1e3),A&&P.setUniform4fv("u_id",a);var R,D=-1,M=Object(j.a)(n);try{for(M.s();!(R=M.n()).done;){var w=R.value;if(w.layerData.has(d)&&(w.key.level!==D&&(D=w.key.level,p.setDataUniforms(P,l,t,D,c)),0!==(i=w.layerData.get(d)).iconPerPageElementsMap.size)){i.prepareForRendering(o),i.updateOpacityInfo();var N=i.iconVAO;if(null!=N){o.bindVAO(N),P.setUniformMatrix3fv("u_dvsMat3",w.transforms.dvs),P.setUniform1f("u_time",(performance.now()-i.lastOpacityUpdate)/1e3);var V,z=Object(j.a)(i.iconPerPageElementsMap);try{for(z.s();!(V=z.n()).done;){var F=Object(W.a)(V.value,2),k=F[0],U=F[1];this._renderIconRange(e,P,U,k,w)}}catch(B){z.e(B)}finally{z.f()}}}}}catch(B){M.e(B)}finally{M.f()}}else v()}}},{key:"_renderIconRange",value:function(e,t,n,a,i){var r=e.context,o=e.spriteMosaic;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv("u_mosaicSize",this._spritesTextureSize),o.bind(r,d.x.LINEAR,a,m.ib),r.setStencilTestEnabled(!0),r.setStencilFunction(d.h.GREATER,255,255),r.setStencilWriteMask(0),r.drawElements(d.q.TRIANGLES,n[1],d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]),i.triangleCount+=n[1]/3}},{key:"_drawText",value:function(e,t,n,a){var i,r,o=this,l=e.context,s=e.displayLevel,u=e.drawPhase,c=e.glyphMosaic,f=e.painter,v=e.pixelRatio,_=e.spriteMosaic,p=e.state,g=e.styleLayerUID,h=e.requestRender,y=e.allowDelayedRender,b=t.textMaterial,O=f.vectorTilesMaterialManager,S=!1,T=Object(j.a)(n);try{for(T.s();!(r=T.n()).done;){var E=r.value;if(E.layerData.has(g)&&(i=E.layerData.get(g)).glyphPerPageElementsMap.size>0){S=!0;break}}}catch(q){T.e(q)}finally{T.f()}if(S){var I=t.getPaintProperty("text-opacity");if(!I||I.isDataDriven||0!==I.getValue(s)){var C=t.getPaintProperty("text-color"),A=!C||C.isDataDriven||C.getValue(s)[3]>0,L=t.getPaintProperty("text-halo-width"),P=t.getPaintProperty("text-halo-color"),R=(!L||L.isDataDriven||L.getValue(s)>0)&&(!P||P.isDataDriven||P.getValue(s)[3]>0);if(A||R){var D=t.getLayoutValue("text-rotation-alignment",s);D===H.a.AUTO&&(D=t.getLayoutValue("symbol-placement",s)===H.e.POINT?H.a.VIEWPORT:H.a.MAP);var M=D===H.a.MAP,w=t.getLayoutValue("text-keep-upright",s)&&M,N=u===x.c.HITTEST,V=.8*3/v;this._glyphTextureSize||(this._glyphTextureSize=Object(X.d)(c.width/4,c.height/4));var z=t.getPaintValue("text-translate",s),F=t.getPaintValue("text-translate-anchor",s),k=this._sdfProgramOptions;k.id=N;var U=O.getMaterialProgram(l,b,k);if(!y||null==h||U.compiled){l.useProgram(U),U.setUniformMatrix3fv("u_displayViewMat3",D===H.a.MAP?p.displayViewMat3:p.displayMat3),U.setUniformMatrix3fv("u_displayMat3",F===H.i.VIEWPORT?p.displayMat3:p.displayViewMat3),U.setUniform2fv("u_textTranslation",z),U.setUniform1f("u_depth",t.z+152587890625e-16),U.setUniform2fv("u_mosaicSize",this._glyphTextureSize),U.setUniform1f("u_mapRotation",Object(J.a)(p.rotation)),U.setUniform1f("u_keepUpright",w?1:0),U.setUniform1f("u_level",10*s),U.setUniform1i("u_texture",m.hb),U.setUniform1f("u_antialiasingWidth",V),U.setUniform1f("u_fadeDuration",Q.d/1e3),N&&U.setUniform4fv("u_id",a);var B,G=-1,Y=Object(j.a)(n);try{var W=function(){var e=B.value;if(!e.layerData.has(g))return 0;if(e.key.level!==G&&(G=e.key.level,b.setDataUniforms(U,s,t,G,_)),0===(i=e.layerData.get(g)).glyphPerPageElementsMap.size)return 0;i.prepareForRendering(l),i.updateOpacityInfo();var n=i.textVAO;if(null==n)return 0;l.bindVAO(n),U.setUniformMatrix3fv("u_dvsMat3",e.transforms.dvs),l.setStencilTestEnabled(!0),l.setStencilFunction(d.h.GREATER,255,255),l.setStencilWriteMask(0);var a=(performance.now()-i.lastOpacityUpdate)/1e3;U.setUniform1f("u_time",a),i.glyphPerPageElementsMap.forEach((function(t,n){o._renderGlyphRange(l,t,n,c,U,R,A,e)}))};for(Y.s();!(B=Y.n()).done;)W()}catch(q){Y.e(q)}finally{Y.f()}}else h()}}}}},{key:"_renderGlyphRange",value:function(e,t,n,a,i,r,o,l){a.bind(e,d.x.LINEAR,n,m.hb),r&&(i.setUniform1f("u_halo",1),e.drawElements(d.q.TRIANGLES,t[1],d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),o&&(i.setUniform1f("u_halo",0),e.drawElements(d.q.TRIANGLES,t[1],d.k.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}}]),n}(c.a),ee=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return x.d.LABEL}},{key:"supportsSymbology",value:function(e){return!0}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,r=e.painter,o=e.state,l=e.rendererInfo,s=e.requestRender,c=e.allowDelayedRender,f=S.b.load(n.materialKey),v=f.mapAligned?1:0;if(v||!(Math.abs(t.key.level-Math.round(100*e.displayLevel)/100)>=1)){var _=function(e){return Object(u.g)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:d.k.SHORT},{location:1,name:"a_id",count:4,type:d.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:d.k.UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:d.k.UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:d.k.UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:d.k.SHORT},{location:8,name:"a_texCoords",count:2,type:d.k.UNSIGNED_SHORT}]})}(f),m=_.bufferLayouts,p=_.attributes,g=r.materialManager.getMaterialProgram(e,f,"materials/label",p,a);if(!c||null==s||g.compiled){e.context.setStencilFunction(d.h.EQUAL,0,255),i.useProgram(g),this._setSharedUniforms(g,e,t),r.textureManager.bindTextures(i,g,f);var h=1===v?o.displayViewMat3:o.displayMat3;this._setSizeVVUniforms(f,g,l,t),g.setUniform1f("u_mapRotation",Math.floor(o.rotation/360*254)),g.setUniform1f("u_mapAligned",v),g.setUniformMatrix3fv("u_displayMat3",h),g.setUniform1f("u_opacity",1),g.setUniform2fv("u_screenSize",e.state.size);var y=n.target.getVAO(i,m,p),b=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;i.bindVAO(y),g.setUniform1f("u_isHaloPass",0),g.setUniform1f("u_isBackgroundPass",1),i.drawElements(d.q.TRIANGLES,n.indexCount,d.k.UNSIGNED_INT,b),g.setUniform1f("u_isHaloPass",1),g.setUniform1f("u_isBackgroundPass",0),i.drawElements(d.q.TRIANGLES,n.indexCount,d.k.UNSIGNED_INT,b),g.setUniform1f("u_isHaloPass",0),g.setUniform1f("u_isBackgroundPass",0),i.drawElements(d.q.TRIANGLES,n.indexCount,d.k.UNSIGNED_INT,b),i.setStencilTestEnabled(!0),i.setBlendingEnabled(!0)}else s()}}}]),n}(O.a),te=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return x.d.LINE}},{key:"supportsSymbology",value:function(e){return!0}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,r=e.painter,o=e.rendererInfo,l=e.displayLevel,s=e.passOptions,c=e.requestRender,f=e.allowDelayedRender,v=S.c.load(n.materialKey),_=null!=s&&"hittest"===s.type,m=function(e){return Object(u.g)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:d.k.SHORT},{location:1,name:"a_id",count:4,type:d.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:d.k.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:d.k.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:d.k.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:d.k.BYTE},{location:7,name:"a_aux",count:2,type:d.k.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:d.k.UNSIGNED_SHORT}]})}(v),p=d.q.TRIANGLES;_&&(m=this._getTriangleDesc(n.materialKey,m),p=d.q.POINTS);var g=m,h=g.attributes,y=g.bufferLayouts,b=r.materialManager.getMaterialProgram(e,v,"materials/line",h,a);if(!f||null==c||b.compiled){var x=1/e.pixelRatio;i.useProgram(b),this._setSharedUniforms(b,e,t),v.textureBinding&&r.textureManager.bindTextures(i,b,v);var O=Math.pow(2,l-t.key.level);b.setUniform1f("u_zoomFactor",O),b.setUniform1f("u_blur",0+x),b.setUniform1f("u_antialiasing",x),this._setSizeVVUniforms(v,b,o,t),this._setColorAndOpacityVVUniforms(v,b,o),i.setFaceCullingEnabled(!1);var T=n.target.getVAO(i,y,h,_),E=n.indexCount,I=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;_&&(E/=3,I/=3),i.bindVAO(T),i.drawElements(p,E,d.k.UNSIGNED_INT,I)}else c()}}]),n}(O.a),ne=function(e){Object(o.a)(n,e);var t=Object(l.a)(n);function n(){return Object(i.a)(this,n),t.apply(this,arguments)}return Object(r.a)(n,[{key:"dispose",value:function(){}},{key:"getGeometryType",value:function(){return x.d.TEXT}},{key:"supportsSymbology",value:function(e){return!0}},{key:"drawGeometry",value:function(e,t,n,a){var i=e.context,r=e.painter,o=e.rendererInfo,l=e.state,s=e.passOptions,c=e.requestRender,f=e.allowDelayedRender,v=S.f.load(n.materialKey),_=null!=s&&"hittest"===s.type,m=function(e){return Object(u.g)(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:d.k.SHORT},{location:1,name:"a_id",count:4,type:d.k.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texFontSize",count:4,type:d.k.UNSIGNED_BYTE},{location:5,name:"a_aux",count:4,type:d.k.BYTE},{location:6,name:"a_zoomRange",count:2,type:d.k.UNSIGNED_SHORT},{location:7,name:"a_vertexOffset",count:2,type:d.k.SHORT},{location:8,name:"a_texCoords",count:2,type:d.k.UNSIGNED_SHORT}]})}(v),p=m.bufferLayouts,g=m.attributes,h=r.materialManager.getMaterialProgram(e,v,"materials/text",g,a);if(!f||null==c||h.compiled){i.useProgram(h);var y=d.q.TRIANGLES;_&&(y=d.q.POINTS),this._setSharedUniforms(h,e,t),r.textureManager.bindTextures(i,h,v),h.setUniformMatrix3fv("u_displayMat3",l.displayMat3),h.setUniformMatrix3fv("u_displayViewMat3",l.displayViewMat3),this._setSizeVVUniforms(v,h,o,t),this._setColorAndOpacityVVUniforms(v,h,o),this._setRotationVVUniforms(v,h,o);var b=n.target.getVAO(i,p,g),x=n.indexFrom*Uint32Array.BYTES_PER_ELEMENT;i.bindVAO(b),h.setUniform1f("u_isHaloPass",0),h.setUniform1f("u_isBackgroundPass",1),i.drawElements(y,n.indexCount,d.k.UNSIGNED_INT,x),h.setUniform1f("u_isHaloPass",1),h.setUniform1f("u_isBackgroundPass",0),i.drawElements(d.q.TRIANGLES,n.indexCount,d.k.UNSIGNED_INT,x),h.setUniform1f("u_isHaloPass",0),h.setUniform1f("u_isBackgroundPass",0),i.drawElements(y,n.indexCount,d.k.UNSIGNED_INT,x)}else c()}}]),n}(O.a),ae={marker:V.a,line:te,fill:E,text:ne,label:ee,clip:_,stencil:F.a,bitmap:a.a,overlay:p,tileInfo:N.a,vtlBackground:G,vtlFill:Z,vtlLine:K,vtlCircle:Y,vtlSymbol:$,dotDensity:M,heatmap:w.a,pieChart:z}},2279:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return C}));var a=n(1),i=n(4),r=n(12),o=n(89),l=n(88),s=n(90),u=n(91),c=n(94),f=n(102),d=n(111),v=n(110),_=n(127),m=n(97),p=(n(96),n(98),n(93),n(95)),g=n(130),h=n(686),y=n(274),b=n(863),x=n(273),O=n(421),S=n(101),T=n(244),E=n(1351),I=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(o.a)(this,n),(e=t.apply(this,arguments)).bitmapContainer=new h.a,e}return Object(l.a)(n,[{key:"supportsSpatialReference",value:function(e){return this.layer.serviceSupportsSpatialReference(e)}},{key:"update",value:function(e){var t=this;this.strategy.update(e).catch((function(e){Object(v.h)(e)||f.a.getLogger(t).error(e)}))}},{key:"attach",value:function(){var e=this,t=this.layer,n=t.imageMaxHeight,a=t.imageMaxWidth;this.bitmapContainer=new h.a,this.container.addChild(this.bitmapContainer),this.strategy=new b.a({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:n,imageMaxWidth:a,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(Object(_.e)((function(){return e.exportImageVersion}),(function(){return e.requestUpdate()})))}},{key:"detach",value:function(){this.strategy=Object(d.e)(this.strategy),this.container.removeAllChildren()}},{key:"moveStart",value:function(){}},{key:"viewChange",value:function(){}},{key:"moveEnd",value:function(){this.requestUpdate()}},{key:"createFetchPopupFeaturesQuery",value:function(e){var t,n=this.view,a=this.bitmapContainer,i=e.x,r=e.y,o=n.spatialReference,l=0,s=0;if(a.children.some((function(e){var n=e.width,a=e.height,u=e.resolution,c=e.x,f=e.y,d=c+u*n,v=f-u*a;return i>=c&&i<=d&&r<=f&&r>=v&&(t=new g.a({xmin:c,ymin:v,xmax:d,ymax:f,spatialReference:o}),l=n,s=a,!0)})),!t)return null;var u=t.width/l,c=Math.round((i-t.xmin)/u),f=Math.round((t.ymax-r)/u);return{extent:t,width:l,height:s,x:c,y:f}}},{key:"doRefresh",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(){return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:this.requestUpdate();case 1:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"isUpdating",value:function(){return this.strategy.updating||this.updateRequested}},{key:"fetchImage",value:function(e,t,n,i){return this.layer.fetchImageBitmap(e,t,n,Object(a.a)({timeExtent:this.timeExtent},i))}}]),n}(function(e){var t=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){return Object(o.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"initialize",value:function(){this.exportImageParameters=new E.a({layer:this.layer})}},{key:"destroy",value:function(){this.exportImageParameters=Object(d.e)(this.exportImageParameters)}},{key:"exportImageVersion",get:function(){var e;return null!==(e=this.exportImageParameters)&&void 0!==e&&e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}},{key:"fetchPopupFeatures",value:function(e){var t=this.layer;if(!e)return Promise.reject(new S.a("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));var n=t.popupEnabled;if(!n)return Promise.reject(new S.a("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:n}));var a=this.createFetchPopupFeaturesQuery(e);if(!a)return Promise.resolve([]);var i=a.extent,r=a.width,o=a.height,l=a.x,s=a.y;if(!(i&&r&&o))throw new S.a("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:i,width:r,height:o});return t.fetchFeatureInfo(i,r,o,l,s)}}]),n}(e);return Object(c.a)([Object(m.b)()],t.prototype,"exportImageParameters",void 0),Object(c.a)([Object(m.b)({readOnly:!0})],t.prototype,"exportImageVersion",null),Object(c.a)([Object(m.b)()],t.prototype,"layer",void 0),Object(c.a)([Object(m.b)(T.a)],t.prototype,"timeExtent",void 0),t=Object(c.a)([Object(p.a)("esri.layers.mixins.WMSLayerView")],t)}(Object(O.a)(Object(y.a)(x.a))));Object(c.a)([Object(m.b)()],I.prototype,"strategy",void 0),Object(c.a)([Object(m.b)()],I.prototype,"updating",void 0);var C=I=Object(c.a)([Object(p.a)("esri.views.2d.layers.WMSLayerView2D")],I)},228:function(e,t,n){"use strict";n.d(t,"a",(function(){return b}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(166),s=n(200),u=n(123),c=n(183),f=n(271),d=n(131),v=n(100),_=n(175),m=n(148),p=n(147),g=n(134),h=n(225),y=300,b=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._color=Object(l.a)(1,0,0,1),e}return Object(i.a)(n,[{key:"dispose",value:function(){var e,t,n,a;null!==(e=this._outlineProgram)&&void 0!==e&&e.dispose(),this._outlineProgram=null,null!==(t=this._tileInfoProgram)&&void 0!==t&&t.dispose(),this._tileInfoProgram=null,null!==(n=this._outlineVertexArrayObject)&&void 0!==n&&n.dispose(),this._outlineVertexArrayObject=null,null!==(a=this._tileInfoVertexArrayObject)&&void 0!==a&&a.dispose(),this._tileInfoVertexArrayObject=null,this._canvas=null}},{key:"prepareState",value:function(e){var t=e.context;t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(v.b.ONE,v.b.ONE_MINUS_SRC_ALPHA,v.b.ONE,v.b.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}},{key:"draw",value:function(e,t){var n=e.context,a=e.requestRender,i=e.allowDelayedRender;if(t.isReady)if(this._loadWGLResources(n),!i||null==a||this._outlineProgram.compiled&&this._tileInfoProgram.compiled){n.bindVAO(this._outlineVertexArrayObject),n.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._outlineProgram.setUniform2f("u_coord_range",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f("u_depth",0),this._outlineProgram.setUniform4fv("u_color",this._color),n.drawArrays(v.q.LINE_STRIP,0,4);var r=this._getTexture(n,t);r?(n.bindVAO(this._tileInfoVertexArrayObject),n.useProgram(this._tileInfoProgram),n.bindTexture(r,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f("u_delta",8,8),this._tileInfoProgram.setUniform2f("u_dimensions",r.descriptor.width,r.descriptor.height),n.drawArrays(v.q.TRIANGLE_STRIP,0,4),n.bindVAO()):n.bindVAO()}else a()}},{key:"_loadWGLResources",value:function(e){if(!this._outlineProgram||!this._tileInfoProgram){var t=Object(_.a)(e,c.a),n=Object(_.a)(e,f.a),a=new Int8Array([0,0,1,0,1,1,0,1]),i=d.a.createVertex(e,v.B.STATIC_DRAW,a),r=new g.a(e,c.a.attributes,s.a,{geometry:i}),o=new Int8Array([0,0,1,0,0,1,1,1]),l=d.a.createVertex(e,v.B.STATIC_DRAW,o),u=new g.a(e,f.a.attributes,s.a,{geometry:l});this._outlineProgram=t,this._tileInfoProgram=n,this._outlineVertexArrayObject=r,this._tileInfoVertexArrayObject=u}}},{key:"_getTexture",value:function(e,t){if(t.texture&&t.triangleCountReportedInDebug===t.triangleCount)return t.texture;t.triangleCountReportedInDebug=t.triangleCount,this._canvas||(this._canvas=document.createElement("canvas"),this._canvas.setAttribute("id","tileCanvas2d"),this._canvas.setAttribute("width","".concat(y)),this._canvas.setAttribute("height","".concat(32)),this._canvas.setAttribute("style","display:none"));var n=t.triangleCount,a=t.key.id;t.triangleCount>0&&(a+=", ".concat(n));var i=this._canvas,r=i.getContext("2d");r.font="24px sans-serif",r.textAlign="left",r.textBaseline="top",r.clearRect(0,0,y,32),n>1e5?(r.fillStyle="red",r.fillRect(0,0,y,32),r.fillStyle="black"):(r.clearRect(0,0,y,32),r.fillStyle="blue"),r.fillText(a,0,0);var o=new p.a;return o.wrapMode=v.z.CLAMP_TO_EDGE,o.samplingMode=v.x.NEAREST,o.isImmutable=Object(h.a)(e.gl),t.texture=new m.a(e,o,i),t.texture}}]),n}(u.a)},229:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(166),s=n(200),u=n(123),c=n(183),f=n(131),d=n(100),v=n(175),_=n(134),m=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._color=Object(l.a)(1,0,0,1),e._initialized=!1,e}return Object(i.a)(n,[{key:"dispose",value:function(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}},{key:"prepareState",value:function(e){var t=e.context;t.setDepthWriteEnabled(!1),t.setDepthTestEnabled(!1),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!1),t.setColorMask(!1,!1,!1,!1),t.setStencilOp(d.v.KEEP,d.v.KEEP,d.v.REPLACE),t.setStencilWriteMask(255)}},{key:"draw",value:function(e,t){var n=e.context,a=e.requestRender,i=e.allowDelayedRender;this._initialized||this._initialize(n),!i||null==a||this._solidProgram.compiled?(n.setStencilFunctionSeparate(d.m.FRONT_AND_BACK,d.h.GREATER,t.stencilRef,255),n.bindVAO(this._solidVertexArrayObject),n.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv("u_dvsMat3",t.transforms.dvs),this._solidProgram.setUniform2fv("u_coord_range",[t.rangeX,t.rangeY]),this._solidProgram.setUniform1f("u_depth",0),this._solidProgram.setUniform4fv("u_color",this._color),n.drawArrays(d.q.TRIANGLE_STRIP,0,4),n.bindVAO()):a()}},{key:"_initialize",value:function(e){if(this._initialized)return!0;var t=Object(v.a)(e,c.a);if(!t)return!1;var n=new Int8Array([0,0,1,0,0,1,1,1]),a=f.a.createVertex(e,d.B.STATIC_DRAW,n),i=new _.a(e,c.a.attributes,s.a,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=i,this._initialized=!0,!0}}]),n}(u.a)},246:function(e,t,n){"use strict";n.d(t,"a",(function(){return k}));var a=n(99),i=n(92),r=n(89),o=n(88),l=n(98),s=(n(93),n(333)),u=n(185),c=n(100),f=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],d={enableCache:!1},v=n(255),_=999,m=9999,p=0,g=1,h=2,y=3,b=4,x=5,O=6,S=7,T=8,E=9,I=10,C=11,A=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function L(){var e,t,n,a=0,i=0,r=_,o=[],l=[],s=1,u=0,c=0,f=!1,d=!1,L="";return function(e){return l=[],null!==e?R(e.replace?e.replace(/\r\n/g,"\n"):e):(o.length&&P(o.join("")),r=I,P("(eof)"),l)};function P(e){e.length&&l.push({type:A[r],data:e,position:c,line:s,column:u})}function R(t){var o;for(a=0,n=(L+=t).length;e=L[a],a<n;){switch(o=a,r){case p:a=N();break;case g:case h:a=w();break;case y:a=V();break;case b:a=j();break;case C:a=F();break;case x:a=k();break;case m:a=U();break;case E:a=M();break;case _:a=D()}o!==a&&("\n"===L[o]?(u=0,++s):++u)}return i+=a,L=L.slice(a),l}function D(){return o=o.length?[]:o,"/"===t&&"*"===e?(c=i+a-1,r=p,t=e,a+1):"/"===t&&"/"===e?(c=i+a-1,r=g,t=e,a+1):"#"===e?(r=h,c=i+a,a):/\s/.test(e)?(r=E,c=i+a,a):(f=/\d/.test(e),d=/[^\w_]/.test(e),c=i+a,r=f?b:d?y:m,a)}function M(){return/[^\s]/g.test(e)?(P(o.join("")),r=_,a):(o.push(e),t=e,a+1)}function w(){return"\r"!==e&&"\n"!==e||"\\"===t?(o.push(e),t=e,a+1):(P(o.join("")),r=_,a)}function N(){return"/"===e&&"*"===t?(o.push(e),P(o.join("")),r=_,a+1):(o.push(e),t=e,a+1)}function V(){if("."===t&&/\d/.test(e))return r=x,a;if("/"===t&&"*"===e)return r=p,a;if("/"===t&&"/"===e)return r=g,a;if("."===e&&o.length){for(;z(o););return r=x,a}if(";"===e||")"===e||"("===e){if(o.length)for(;z(o););return P(e),r=_,a+1}var n=2===o.length&&"="!==e;if(/[\w_\d\s]/.test(e)||n){for(;z(o););return r=_,a}return o.push(e),t=e,a+1}function z(e){for(var t,n,a=0;;){if(t=v.c.indexOf(e.slice(0,e.length+a).join("")),n=v.c[t],-1===t){if(a--+e.length>0)continue;n=e.slice(0,1).join("")}return P(n),c+=n.length,(o=o.slice(n.length)).length}}function F(){return/[^a-fA-F0-9]/.test(e)?(P(o.join("")),r=_,a):(o.push(e),t=e,a+1)}function j(){return"."===e||/[eE]/.test(e)?(o.push(e),r=x,t=e,a+1):"x"===e&&1===o.length&&"0"===o[0]?(r=C,o.push(e),t=e,a+1):/[^\d]/.test(e)?(P(o.join("")),r=_,a):(o.push(e),t=e,a+1)}function k(){return"f"===e&&(o.push(e),t=e,a+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(o.push(e),t=e,a+1):/[^\d]/.test(e)?(P(o.join("")),r=_,a):(o.push(e),t=e,a+1)}function U(){if(/[^\d\w_]/.test(e)){var n=o.join("");return r=v.b.indexOf(n)>-1?T:v.a.indexOf(n)>-1?S:O,P(o.join("")),r=_,a}return o.push(e),t=e,a+1}}function P(e){return function(e){var t=L(),n=[];return(n=n.concat(t(e))).concat(t(null))}(e)}var R=["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"];function D(e,t){for(var n=t-1;n>=0;n--){var a=e[n];if("whitespace"!==a.type&&"block-comment"!==a.type){if("keyword"!==a.type)break;if("attribute"===a.data||"in"===a.data)return!0}}return!1}function M(e,t,n,a){a=a||n;var r,o=Object(i.a)(e);try{for(o.s();!(r=o.n()).done;){var l=r.value;if("ident"===l.type&&l.data===n)return a in t?t[a]++:t[a]=0,M(e,t,a+"_"+t[a],a)}}catch(s){o.e(s)}finally{o.f()}return n}function w(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"afterVersion";function a(e,t){for(var n=t;n<e.length;n++){var a=e[n];if("operator"===a.type&&";"===a.data)return n}return null}var r={data:"\n",type:"whitespace"},o=function(t){return t<e.length&&/[^\r\n]$/.test(e[t].data)},l=function(e){for(var t=-1,i=0,r=-1,o=0;o<e.length;o++){var l=e[o];if("preprocessor"===l.type&&(/\#(if|ifdef|ifndef)\s+.+/.test(l.data)?++i:/\#endif\s*.*/.test(l.data)&&--i),"afterVersion"!==n&&"afterPrecision"!==n||"preprocessor"===l.type&&/^#version/.test(l.data)&&(r=Math.max(r,o)),"afterPrecision"===n&&"keyword"===l.type&&"precision"===l.data){var s=a(e,o);if(null===s)throw new Error("precision statement not followed by any semicolons!");r=Math.max(r,s)}t<r&&0===i&&(t=o)}return t+1}(e);o(l-1)&&e.splice(l++,0,r);var s,u=Object(i.a)(t);try{for(u.s();!(s=u.n()).done;){var c=s.value;e.splice(l++,0,c)}}catch(f){u.e(f)}finally{u.f()}o(l-1)&&o(l)&&e.splice(l,0,r)}function N(e,t,n){w(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:arguments.length>3&&void 0!==arguments[3]?arguments[3]:"lowp"},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function V(e,t,n,a){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"lowp";w(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:a.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:i},{type:"whitespace",data:" "},{type:"keyword",data:n},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function z(e,t){for(var n,a,i=-1,r=t;r<e.length;r++){var o=e[r];if("operator"===o.type&&("["===o.data&&(n=r),"]"===o.data)){a=r;break}"integer"===o.type&&(i=parseInt(o.data,10))}return n&&a&&e.splice(n,a-n+1),i}function F(e,t){if(e.startsWith("#version 300"))return e;var n,a=(n=e,d.enableCache?j.get(n):null);if(null!=a)return a;var r=P(e);if("300 es"===function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"100",a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"300 es",r=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/,o=Object(i.a)(e);try{for(o.s();!(t=o.n()).done;){var l=t.value;if("preprocessor"===l.type){var s=r.exec(l.data);if(s){var u=s[1].replaceAll(/\s\s+/g," ");if(u===a)return u;if(u===n)return l.data="#version "+a,n;throw new Error("unknown glsl version: "+u)}}}}catch(c){o.e(c)}finally{o.f()}return e.splice(0,0,{type:"preprocessor",data:"#version "+a},{type:"whitespace",data:"\n"}),null}(r,"100","300 es"))return e;for(var o=null,l=null,s={},u={},v=0;v<r.length;++v){var _=r[v];switch(_.type){case"keyword":t===c.t.VERTEX_SHADER&&"attribute"===_.data?_.data="in":"varying"===_.data&&(_.data=t===c.t.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(_.data.trim())&&(_.data=_.data.replaceAll(/(2D|Cube|EXT)/g,"")),t===c.t.FRAGMENT_SHADER&&"gl_FragColor"===_.data&&(o||N(r,o=M(r,s,"fragColor"),"vec4"),_.data=o),t===c.t.FRAGMENT_SHADER&&"gl_FragData"===_.data){var m=z(r,v+1),p=M(r,s,"fragData");V(r,p,"vec4",m,"mediump"),_.data=p}else t===c.t.FRAGMENT_SHADER&&"gl_FragDepthEXT"===_.data&&(l||(l=M(r,s,"gl_FragDepth")),_.data=l);break;case"ident":if(f.includes(_.data)){if(t===c.t.VERTEX_SHADER&&D(r,v))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");_.data in u||(u[_.data]=M(r,s,_.data)),_.data=u[_.data]}}}for(var g=r.length-1;g>=0;--g){var h=r[g];if("preprocessor"===h.type){var y=h.data.match(/\#extension\s+(.*)\:/);if(y&&y[1]&&R.includes(y[1].trim())){var b=r[g+1];r.splice(g,b&&"whitespace"===b.type?2:1)}var x=h.data.match(/\#ifdef\s+(.*)/);x&&x[1]&&R.includes(x[1].trim())&&(h.data="#if 1");var O=h.data.match(/\#ifndef\s+(.*)/);O&&O[1]&&R.includes(O[1].trim())&&(h.data="#if 0")}}return function(e,t){return d.enableCache&&j.set(e,t),t}(e,function(e){return e.map((function(e){return"eof"!==e.type?e.data:""})).join("")}(r))}var j=new Map;var k=function(){function e(t,n,o,l){var f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Map;Object(r.a)(this,e),this._context=t,this._locations=l,this._uniformBlockBindings=f,this._refCount=1,this._compiled=!1,this._nameToUniformLocation={},this._nameToUniform1={},this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),0===n.length&&console.error("Shaders source should not be empty!"),this._context.type===u.a.WEBGL2&&(n=F(n,c.t.VERTEX_SHADER),o=F(o,c.t.FRAGMENT_SHADER)),this._vShader=U(this._context,c.t.VERTEX_SHADER,n),this._fShader=U(this._context,c.t.FRAGMENT_SHADER,o),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(c.s.Shader,this),Object(s.c)()&&(this.vertexShader=n,this.fragmentShader=o);var d=this._context.gl,v=d.createProgram();if(d.attachShader(v,this._vShader),d.attachShader(v,this._fShader),this._locations.forEach((function(e,t){return d.bindAttribLocation(v,e,t)})),d.linkProgram(v),Object(s.c)()&&!d.getProgramParameter(v,d.LINK_STATUS)&&console.error("Could not link shader\nvalidated: ".concat(d.getProgramParameter(v,d.VALIDATE_STATUS),", gl error ").concat(d.getError(),", vertex: ").concat(d.getShaderParameter(this._vShader,d.COMPILE_STATUS),", fragment: ").concat(d.getShaderParameter(this._fShader,d.COMPILE_STATUS),", info log: ").concat(d.getProgramInfoLog(v),", vertex source: ").concat(this.vertexShader,", fragment source: ").concat(this.fragmentShader)),this._context.type===u.a.WEBGL2){var _,m=d,p=Object(i.a)(this._uniformBlockBindings);try{for(p.s();!(_=p.n()).done;){var g=Object(a.a)(_.value,2),h=g[0],y=g[1],b=m.getUniformBlockIndex(v,h);b<4294967295&&m.uniformBlockBinding(v,b,y)}}catch(x){p.e(x)}finally{p.f()}}this._glName=v,this._context.instanceCounter.increment(c.s.Program,this)}return Object(o.a)(e,[{key:"glName",get:function(){return this._glName}},{key:"hasGLName",get:function(){return null!=this._glName}},{key:"compiled",get:function(){if(this._compiled)return!0;var e=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==e||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}},{key:"dispose",value:function(){if(!(--this._refCount>0)){var e=this._context.gl;this._vShader&&(e.deleteShader(this._vShader),this._vShader=null,this._context.instanceCounter.decrement(c.s.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,this._context.instanceCounter.decrement(c.s.Program,this))}}},{key:"ref",value:function(){++this._refCount}},{key:"_getUniformLocation",value:function(e){return void 0===this._nameToUniformLocation[e]&&null!=this.glName&&(++G.numUniforms,this._nameToUniformLocation[e]=this._context.gl.getUniformLocation(this.glName,e)),this._nameToUniformLocation[e]}},{key:"hasUniform",value:function(e){return null!==this._getUniformLocation(e)}},{key:"setUniform1i",value:function(e,t){var n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}},{key:"setUniform1iv",value:function(e,t){B(this._nameToUniform1v,e,t)&&this._context.gl.uniform1iv(this._getUniformLocation(e),t)}},{key:"setUniform2iv",value:function(e,t){B(this._nameToUniform2,e,t)&&this._context.gl.uniform2iv(this._getUniformLocation(e),t)}},{key:"setUniform3iv",value:function(e,t){B(this._nameToUniform3,e,t)&&this._context.gl.uniform3iv(this._getUniformLocation(e),t)}},{key:"setUniform4iv",value:function(e,t){B(this._nameToUniform4,e,t)&&this._context.gl.uniform4iv(this._getUniformLocation(e),t)}},{key:"setUniform1f",value:function(e,t){var n=this._nameToUniform1[e];void 0!==n&&t===n||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1[e]=t)}},{key:"setUniform1fv",value:function(e,t){B(this._nameToUniform1v,e,t)&&this._context.gl.uniform1fv(this._getUniformLocation(e),t)}},{key:"setUniform2f",value:function(e,t,n){var a=this._nameToUniform2.get(e);void 0===a?(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),this._nameToUniform2.set(e,[t,n])):t===a[0]&&n===a[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,n),a[0]=t,a[1]=n)}},{key:"setUniform2fv",value:function(e,t){B(this._nameToUniform2,e,t)&&this._context.gl.uniform2fv(this._getUniformLocation(e),t)}},{key:"setUniform3f",value:function(e,t,n,a){var i=this._nameToUniform3.get(e);void 0===i?(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,a),this._nameToUniform3.set(e,[t,n,a])):t===i[0]&&n===i[1]&&a===i[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,n,a),i[0]=t,i[1]=n,i[2]=a)}},{key:"setUniform3fv",value:function(e,t){B(this._nameToUniform3,e,t)&&this._context.gl.uniform3fv(this._getUniformLocation(e),t)}},{key:"setUniform4f",value:function(e,t,n,a,i){var r=this._nameToUniform4.get(e);void 0===r?(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,a,i),this._nameToUniform4.set(e,[t,n,a,i])):void 0!==r&&t===r[0]&&n===r[1]&&a===r[2]&&i===r[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,n,a,i),r[0]=t,r[1]=n,r[2]=a,r[3]=i)}},{key:"setUniform4fv",value:function(e,t){B(this._nameToUniform4,e,t)&&this._context.gl.uniform4fv(this._getUniformLocation(e),t)}},{key:"setUniformMatrix3fv",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];B(this._nameToUniformMatrix3,e,t)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(e),n,t)}},{key:"setUniformMatrix4fv",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];B(this._nameToUniformMatrix4,e,t)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(e),n,t)}},{key:"stop",value:function(){}}]),e}();function U(e,t,n){var a=e.gl,i=a.createShader(t);return a.shaderSource(i,n),a.compileShader(i),Object(s.c)()&&!a.getShaderParameter(i,a.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===c.t.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(a.getShaderInfoLog(i)),console.error(function(e){var t=2;return e.replaceAll("\n",(function(){return"\n"+function(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":"}))}(n))),G.enabled&&(G.compiledLOC+=n.match(/\n/g).length+1),i}function B(e,t,n){var a=e.get(t);return a?Object(l.p)(a,n):(e.set(t,Array.from(n)),!0)}var G={compiledLOC:0,numUniforms:0,enabled:!1}},247:function(e,t,n){"use strict";n.d(t,"a",(function(){return N}));var a=n(92),i=n(89),r=n(88),o=n(107),l=n(106),s=n(90),u=n(91),c=(n(93),n(151)),f=n(226),d=n(256),v=n(99),_=n(101),m=n(102),p=n(127),g=n(199),h=n(34),y=n(1),b=n(224),x=n(171),O=n(222),S=n(168),T=n(169),E=n(118),I=n(131),C=n(100),A=function(e,t,n,a){for(var i=0,r=1;r<n;r++){var o=e[2*(t+r-1)],l=e[2*(t+r-1)+1];i+=(e[2*(t+r)]-o)*(e[2*(t+r)+1]+l)}return a?i>0:i<0},L=function(e,t){for(var n=e.coords,i=e.lengths,r=[],o=0,l=0;o<i.length;l+=i[o],o+=1){for(var s=l,u=[];o<i.length-1&&A(n,l+i[o],i[o+1],t);l+=i[o+=1])u.push(l+i[o]-s);var c,f=n.slice(2*s,2*(l+i[o])),d=Object(b.a)(f,u,2),v=Object(a.a)(d);try{for(v.s();!(c=v.n()).done;){var _=c.value;r.push(_+s)}}catch(m){v.e(m)}finally{v.f()}}return r},P=function(){function e(t,n,a){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];Object(i.a)(this,e),this._cache={},this.vertices=t,this.indices=n,this.primitiveType=a,this.isMapSpace=r}return Object(r.a)(e,[{key:"destroy",value:function(){for(var e in null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers)null!=this._cache.vertexBuffers[e]&&this._cache.vertexBuffers[e].dispose()}},{key:"elementType",get:function(){return function(e){switch(e.BYTES_PER_ELEMENT){case 1:return C.k.UNSIGNED_BYTE;case 2:return C.k.UNSIGNED_SHORT;case 4:return C.k.UNSIGNED_INT;default:throw new _.a("Cannot get DataType of array")}}(this.indices)}},{key:"getIndexBuffer",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:C.B.STATIC_DRAW;return this._cache.indexBuffer||(this._cache.indexBuffer=I.a.createIndex(e,t,this.indices)),this._cache.indexBuffer}},{key:"getVertexBuffers",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:C.B.STATIC_DRAW;return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce((function(a,i){return Object(y.a)(Object(y.a)({},a),{},Object(h.a)({},i,I.a.createVertex(e,n,t.vertices[i])))}),{})),this._cache.vertexBuffers}}],[{key:"fromRect",value:function(t){var n=t.x,a=t.y,i=n+t.width,r=a+t.height;return e.fromScreenExtent({xmin:n,ymin:a,xmax:i,ymax:r})}},{key:"fromPath",value:function(t){for(var n=Object(S.f)(new T.a,t.path,!1,!1),a=n.coords,i=new Uint32Array(L(n,!0)),r=new Uint32Array(a.length/2),o=0;o<r.length;o++)r[o]=Object(E.a)(Math.floor(a[2*o]),Math.floor(a[2*o+1]));return new e({geometry:r},i,C.q.TRIANGLES)}},{key:"fromGeometry",value:function(t,n){var a,i=null===(a=n.geometry)||void 0===a?void 0:a.type;switch(i){case"polygon":return e.fromPolygon(t,n.geometry);case"extent":return e.fromMapExtent(t,n.geometry);default:return m.a.getLogger("esri.views.2d.engine.webgl.Mesh2D").error(new _.a("mapview-bad-type","Unable to create a mesh from type ".concat(i),n)),e.fromRect({x:0,y:0,width:1,height:1})}}},{key:"fromPolygon",value:function(t,n){for(var a=Object(S.h)(new T.a,n,!1,!1),i=a.coords,r=new Uint32Array(L(a,!1)),o=new Uint32Array(i.length/2),l=Object(O.b)(),s=Object(O.b)(),u=0;u<o.length;u++)Object(x.p)(l,i[2*u],i[2*u+1]),t.toScreen(s,l),o[u]=Object(E.a)(Math.floor(s[0]),Math.floor(s[1]));return new e({geometry:o},r,C.q.TRIANGLES,!0)}},{key:"fromScreenExtent",value:function(t){var n=t.xmin,a=t.xmax,i=t.ymin,r=t.ymax;return new e({geometry:new Uint32Array([Object(E.a)(n,i),Object(E.a)(a,i),Object(E.a)(n,r),Object(E.a)(n,r),Object(E.a)(a,i),Object(E.a)(a,r)])},new Uint32Array([0,1,2,3,4,5]),C.q.TRIANGLES)}},{key:"fromMapExtent",value:function(t,n){var a=t.toScreen([0,0],[n.xmin,n.ymin]),i=Object(v.a)(a,2),r=i[0],o=i[1],l=t.toScreen([0,0],[n.xmax,n.ymax]),s=Object(v.a)(l,2),u=s[0],c=s[1];return new e({geometry:new Uint32Array([Object(E.a)(r,o),Object(E.a)(u,o),Object(E.a)(r,c),Object(E.a)(r,c),Object(E.a)(u,o),Object(E.a)(u,c)])},new Uint32Array([0,1,2,3,4,5]),C.q.TRIANGLES)}}]),e}(),R=n(134),D=function(e){return parseFloat(e)/100},M=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(e,a){var r;return Object(i.a)(this,n),(r=t.call(this))._clip=a,r._cache={},r.stage=e,r._handle=Object(p.e)((function(){return a.version}),(function(){return r._invalidate()})),r.ready(),r}return Object(r.a)(n,[{key:"_destroyGL",value:function(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}},{key:"destroy",value:function(){this._destroyGL(),this._handle.remove()}},{key:"getVAO",value:function(e,t,n,a){var i=Object(v.a)(t.size,2),r=i[0],o=i[1];if("geometry"!==this._clip.type&&this._lastWidth===r&&this._lastHeight===o||(this._lastWidth=r,this._lastHeight=o,this._destroyGL()),null==this._cache.vao){var l=this._createMesh(t,this._clip),s=l.getIndexBuffer(e),u=l.getVertexBuffers(e);this._cache.mesh=l,this._cache.vao=new R.a(e,n,a,u,s)}return this._cache.vao}},{key:"_createTransforms",value:function(){return{dvs:Object(c.b)()}}},{key:"_invalidate",value:function(){this._destroyGL(),this.requestRender()}},{key:"_createScreenRect",value:function(e,t){var n=Object(v.a)(e.size,2),a=n[0],i=n[1],r="string"==typeof t.left?D(t.left)*a:t.left,o="string"==typeof t.right?D(t.right)*a:t.right,l="string"==typeof t.top?D(t.top)*i:t.top,s="string"==typeof t.bottom?D(t.bottom)*i:t.bottom,u=r,c=l;return{x:u,y:c,width:Math.max(a-o-u,0),height:Math.max(i-s-c,0)}}},{key:"_createMesh",value:function(e,t){switch(t.type){case"rect":return P.fromRect(this._createScreenRect(e,t));case"path":return P.fromPath(t);case"geometry":return P.fromGeometry(e,t);default:return m.a.getLogger("esri.views.2d.engine.webgl.ClippingInfo").error(new _.a("mapview-bad-type","Unable to create ClippingInfo mesh from clip of type: ${clip.type}")),P.fromRect({x:0,y:0,width:1,height:1})}}}],[{key:"fromClipArea",value:function(e,t){return new n(e,t)}}]),n}(g.a),w=n(103),N=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments)).name=e.constructor.name,e}return Object(r.a)(n,[{key:"clips",set:function(e){this._clips=e,this.children.forEach((function(t){return t.clips=e})),this._updateClippingInfo()}},{key:"beforeRender",value:function(e){Object(o.a)(Object(l.a)(n.prototype),"beforeRender",this).call(this,e),this.updateTransforms(e.state)}},{key:"_createTransforms",value:function(){return{dvs:Object(c.b)()}}},{key:"doRender",value:function(e){var t=this.createRenderParams(e),n=t.painter,a=t.globalOpacity,i=t.profiler,r=t.drawPhase,o=r===w.c.LABEL||r===w.c.HIGHLIGHT?1:a*this.computedOpacity;i.recordContainerStart(this.name),n.beforeRenderLayer(t,this._clippingInfos?255:0,o),this.renderChildren(t),n.compositeLayer(t,o),i.recordContainerEnd()}},{key:"renderChildren",value:function(e){null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(e.painter));var t,n=Object(a.a)(this._renderPasses);try{for(n.s();!(t=n.n()).done;){var i=t.value;try{i.render(e)}catch(r){}}}catch(o){n.e(o)}finally{n.f()}}},{key:"createRenderParams",value:function(e){return e.requireFBO=this.requiresDedicatedFBO,e}},{key:"prepareRenderPasses",value:function(e){var t=this;return[e.registerRenderPass({name:"clip",brushes:[f.a.clip],target:function(){return t._clippingInfos},drawPhase:w.c.MAP|w.c.LABEL|w.c.LABEL_ALPHA|w.c.DEBUG|w.c.HIGHLIGHT})]}},{key:"updateTransforms",value:function(e){var t,n=Object(a.a)(this.children);try{for(n.s();!(t=n.n()).done;){t.value.setTransform(e)}}catch(i){n.e(i)}finally{n.f()}}},{key:"onAttach",value:function(){Object(o.a)(Object(l.a)(n.prototype),"onAttach",this).call(this),this._updateClippingInfo()}},{key:"onDetach",value:function(){Object(o.a)(Object(l.a)(n.prototype),"onDetach",this).call(this),this._updateClippingInfo()}},{key:"_updateClippingInfo",value:function(){null!=this._clippingInfos&&(this._clippingInfos.forEach((function(e){return e.destroy()})),this._clippingInfos=null);var e=this.stage;if(e){var t=this._clips;null!=t&&t.length&&(this._clippingInfos=t.items.map((function(t){return M.fromClipArea(e,t)}))),this.requestRender()}}}]),n}(d.a)},250:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(89),i=n(88),r=function(){function e(t){Object(a.a)(this,e),this._readFile=t}return Object(i.a)(e,[{key:"resolveIncludes",value:function(e){return this._resolve(e)}},{key:"_resolve",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Map;if(n.has(e))return n.get(e);var a=this._read(e);if(!a)throw new Error("cannot find shader file ".concat(e));for(var i=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm,r=i.exec(a),o=[];null!=r;)o.push({path:r[1],start:r.index,length:r[0].length}),r=i.exec(a);var l=0,s="";return o.forEach((function(e){s+=a.slice(l,e.start),s+=n.has(e.path)?"":t._resolve(e.path,n),l=e.start+e.length})),s+=a.slice(l),n.set(e,s),s}},{key:"_read",value:function(e){return this._readFile(e)}}]),e}()},251:function(e,t,n){"use strict";n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return a})),n.d(t,"d",(function(){return o}));var a=!0,i=32,r=1.5,o=200},255:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return c}));var a,i=n(201),r={exports:{}};r.exports,void 0!==(a=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(r.exports=a);var o,l=Object(i.b)(r.exports),s={exports:{}};o=s,function(e){var t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==t&&(o.exports=t)}();var u,c=Object(i.b)(s.exports),f={exports:{}};u=f,function(e){var t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];void 0!==t&&(u.exports=t)}();var d=Object(i.b)(f.exports)},257:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(89),i=n(88),r=function(){function e(){Object(a.a)(this,e),this.name=this.constructor.name}return Object(i.a)(e,[{key:"createOptions",value:function(e,t){return null}}]),e}()},267:function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(104),s=n(196),u=n(123),c=n(100),f={nearest:{defines:[],samplingMode:c.x.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:c.x.LINEAR,mips:!1},bicubic:{defines:["bicubic"],samplingMode:c.x.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:c.x.LINEAR_MIPMAP_LINEAR,mips:!0}},d=function(e,t,n){if("dynamic"===n.samplingMode){var a=e.state,i=t.resolution/t.pixelRatio/a.resolution,r=Math.round(e.pixelRatio)!==e.pixelRatio,o=i>1.05||i<.95;return a.rotation||o||r||t.isSourceScaled||t.rotation?f.bilinear:f.nearest}return f[n.samplingMode]},v=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments))._desc={vsPath:"raster/bitmap",fsPath:"raster/bitmap",attributes:new Map([["a_pos",0]])},e}return Object(i.a)(n,[{key:"dispose",value:function(){this._quad&&this._quad.dispose()}},{key:"prepareState",value:function(e){var t=e.context;t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0)}},{key:"draw",value:function(e,t){var n=e.context,a=e.renderingOptions,i=e.painter,r=e.requestRender,o=e.allowDelayedRender;if(t.source&&t.isReady){var u=d(e,t,a),f=i.materialManager.getProgram(this._desc,u.defines);if(!o||null==r||f.compiled){e.timeline.begin(this.name),"additive"===t.blendFunction?n.setBlendFunctionSeparate(c.b.ONE,c.b.ONE,c.b.ONE,c.b.ONE):n.setBlendFunctionSeparate(c.b.ONE,c.b.ONE_MINUS_SRC_ALPHA,c.b.ONE,c.b.ONE_MINUS_SRC_ALPHA),n.setStencilFunction(c.h.EQUAL,t.stencilRef,255),this._quad||(this._quad=new s.a(n,[0,0,1,0,0,1,1,1]));var v=t.coordScale,_=t.computedOpacity,m=t.transforms;t.setSamplingProfile(u),t.bind(e.context,l.T),n.useProgram(f),f.setUniformMatrix3fv("u_dvsMat3",m.dvs),f.setUniform1i("u_texture",l.T),f.setUniform2fv("u_coordScale",v),f.setUniform1f("u_opacity",_),this._quad.draw(),e.timeline.end(this.name)}else r()}}}]),n}(u.a)},268:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(133),s=n(104),u=n(158),c=n(100),f=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,null,[{key:"getStorageSpec",value:function(e){var t=e.attributes;return{visualVariables:!1,attributes:null!==t&&void 0!==t?t:null}}},{key:"_createRendererSchema",value:function(){return{type:"dot-density",colors:new Float32Array(32),dotValue:-1,dotSize:-1,dotScale:-1,dotBlending:!1,backgroundColor:new Float32Array(4),activeDots:new Float32Array(8),seed:-1}}},{key:"createOrUpdateRendererSchema",value:function(e,t){var n=t.attributes,a=t.dotValue,i=t.referenceScale,r=t.dotSize,o=t.dotBlendingEnabled,u=t.seed,c=t.backgroundColor,f=null!=e&&"dot-density"===e.type?e:this._createRendererSchema();f.dotValue=a,f.dotSize=r,f.dotScale=i,f.dotBlending=o,f.seed=u;for(var d=f.colors,v=f.activeDots,_=f.backgroundColor,m=0;m<s.v;m++){var p=m>=n.length?null:n[m].color;Object(l.d)(d,p,4*m)}for(var g=0;g<8;g++)v[g]=g<t.attributes.length?1:0;return Object(l.d)(_,c),f}},{key:"getVariation",value:function(e){return{ddDotBlending:e.dotBlending}}},{key:"getVariationHash",value:function(e){return e.dotBlending?1:0}}]),n}(u.a);f.type="dot-density",f.programSpec={shader:"materials/fill",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:c.k.SHORT},{location:1,name:"a_id",count:3,type:c.k.UNSIGNED_BYTE},{location:2,name:"a_bitset",count:1,type:c.k.UNSIGNED_BYTE},{location:3,name:"a_inverseArea",count:1,type:c.k.FLOAT}]}}},269:function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(108),s=n(307),u=n(158),c=n(100),f=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,null,[{key:"getStorageSpec",value:function(e){var t=e.field,n=e.valueExpression;return{visualVariables:!1,attributes:t||n?[{field:t,valueExpression:n}]:null}}},{key:"_createRendererSchema",value:function(){return{type:"heatmap",radius:-1,referenceScale:-1,isFieldActive:0,minDensity:-1,densityRange:-1,kernel:null,gradient:null,gradientHash:"invalid"}}},{key:"createOrUpdateRendererSchema",value:function(e,t){var n,a=t.radius,i=t.minDensity,r=t.maxDensity,o=t.referenceScale,u=t.field,c=t.valueExpression,f=t.colorStops,d=r-i,v=u||c?1:0,_=f.map((function(e){var t=e.color,n=e.ratio;return"".concat(n,":").concat(t.toString())})).join(),m=!0;return null!=e&&"heatmap"===e.type?(n=e,m=_!==e.gradientHash):n=this._createRendererSchema(),n.radius=Object(l.c)(a),n.minDensity=i,n.densityRange=d,n.referenceScale=o,n.isFieldActive=v,m&&(n.gradient=Object(s.g)(f),n.gradientHash=_),n}}]),n}(u.a);f.type="heatmap",f.programSpec={shader:"materials/icon/heatmapAccumulate",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:c.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:c.k.SHORT},{location:4,name:"a_id",count:4,type:c.k.UNSIGNED_BYTE}]}}},270:function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(143),s=n(108),u=n(133),c=n(104),f=n(158),d=n(100),v=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,null,[{key:"getStorageSpec",value:function(e){var t=e.attributes;return{visualVariables:!0,attributes:null!==t&&void 0!==t?t:null}}},{key:"_createRendererSchema",value:function(){return{type:"pie-chart",colors:new Float32Array(4*c.s),defaultColor:new Float32Array(4),othersColor:new Float32Array(4),outlineColor:new Float32Array(4),holePercentage:0,sectorThreshold:0,outlineWidth:1,numberOfFields:10}}},{key:"createOrUpdateRendererSchema",value:function(e,t){for(var n=t.attributes,a=t.defaultColor,i=t.holePercentage,r=t.othersCategory,o=t.outline,f=null!=e&&"pie-chart"===e.type?e:this._createRendererSchema(),d=0;d<c.s;d++){var v=d>=n.length?new l.a([0,0,0,0]):n[d].color;Object(u.d)(f.colors,v,4*d)}return Object(u.d)(f.defaultColor,a),Object(u.d)(f.othersColor,null===r||void 0===r?void 0:r.color),Object(u.d)(f.outlineColor,null===o||void 0===o?void 0:o.color),f.outlineWidth=Object(s.c)((null===o||void 0===o?void 0:o.width)||0),f.holePercentage=i,f.sectorThreshold=(null===r||void 0===r?void 0:r.threshold)||0,f.numberOfFields=n.length,f}},{key:"getVariation",value:function(e){return{numberOfFields:e.numberOfFields}}},{key:"getVariationHash",value:function(e){return e.numberOfFields}}]),n}(f.a);v.type="pie-chart",v.programSpec={shader:"materials/pie",vertexLayout:{geometry:[{location:0,name:"a_pos",count:2,type:d.k.SHORT},{location:1,name:"a_vertexOffset",count:2,type:d.k.SHORT},{location:2,name:"a_texCoords",count:2,type:d.k.UNSIGNED_SHORT},{location:3,name:"a_bitSetAndDistRatio",count:2,type:d.k.UNSIGNED_SHORT},{location:4,name:"a_id",count:4,type:d.k.UNSIGNED_BYTE},{location:5,name:"a_color",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:6,name:"a_outlineColor",count:4,type:d.k.UNSIGNED_BYTE,normalized:!0},{location:7,name:"a_sizeAndOutlineWidth",count:4,type:d.k.UNSIGNED_BYTE},{location:8,name:"a_zoomRange",count:2,type:d.k.UNSIGNED_SHORT}]},hittestAttributes:["a_vertexOffset","a_texCoords"]}},271:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(188),i={shaders:{vertexShader:Object(a.a)("tileInfo/tileInfo.vert"),fragmentShader:Object(a.a)("tileInfo/tileInfo.frag")},attributes:new Map([["a_pos",0]])}},273:function(e,t,n){"use strict";n.d(t,"a",(function(){return g}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(94),s=n(126),u=n(193),c=n(189),f=n(234),d=n(102),v=n(266),_=n(97),m=(n(96),n(98),n(93),n(95)),p=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(e){var i;return Object(a.a)(this,n),(i=t.call(this,e)).layer=null,i.parent=null,i}return Object(i.a)(n,[{key:"initialize",value:function(){var e=this;this.when().catch((function(t){if("layerview:create-error"!==t.name){var n=e.layer&&e.layer.id||"no id",a=e.layer&&e.layer.title||"no title";d.a.getLogger(e).error("#resolve()","Failed to resolve layer view (layer title: '".concat(a,"', id: '").concat(n,"')"),t)}}))}},{key:"fullOpacity",get:function(){var e,t,n,a;return(null!==(e=null===(t=this.layer)||void 0===t?void 0:t.opacity)&&void 0!==e?e:1)*(null!==(n=null===(a=this.parent)||void 0===a?void 0:a.fullOpacity)&&void 0!==n?n:1)}},{key:"suspended",get:function(){return!this.canResume()}},{key:"suspendInfo",get:function(){return this.getSuspendInfo()}},{key:"legendEnabled",get:function(){var e;return!this.suspended&&!0===(null===(e=this.layer)||void 0===e?void 0:e.legendEnabled)}},{key:"updating",get:function(){var e;return!((null===(e=this.updatingHandles)||void 0===e||!e.updating)&&!this.isUpdating())}},{key:"updatingProgress",get:function(){return this.updating?0:1}},{key:"visible",get:function(){var e;return!0===(null===(e=this.layer)||void 0===e?void 0:e.visible)},set:function(e){this._overrideIfSome("visible",e)}},{key:"canResume",value:function(){var e,t,n;return this.visible&&(null===(e=this.layer)||void 0===e?void 0:e.loaded)&&!(null!==(t=this.parent)&&void 0!==t&&t.suspended)&&(null===(n=this.view)||void 0===n?void 0:n.ready)||!1}},{key:"getSuspendInfo",value:function(){var e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{};return this.view&&this.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}},{key:"isUpdating",value:function(){return!1}}]),n}(Object(c.b)(Object(f.a)(Object(v.b)(u.a.EventedMixin(s.a)))));Object(l.a)([Object(_.b)()],p.prototype,"fullOpacity",null),Object(l.a)([Object(_.b)()],p.prototype,"layer",void 0),Object(l.a)([Object(_.b)()],p.prototype,"parent",void 0),Object(l.a)([Object(_.b)({readOnly:!0})],p.prototype,"suspended",null),Object(l.a)([Object(_.b)({readOnly:!0})],p.prototype,"suspendInfo",null),Object(l.a)([Object(_.b)({readOnly:!0})],p.prototype,"legendEnabled",null),Object(l.a)([Object(_.b)({type:Boolean,readOnly:!0})],p.prototype,"updating",null),Object(l.a)([Object(_.b)({readOnly:!0})],p.prototype,"updatingProgress",null),Object(l.a)([Object(_.b)()],p.prototype,"visible",null),Object(l.a)([Object(_.b)()],p.prototype,"view",void 0);var g=p=Object(l.a)([Object(m.a)("esri.views.layers.LayerView")],p)},274:function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var a=n(89),i=n(88),r=n(107),o=n(106),l=n(90),s=n(91),u=n(94),c=n(145),f=n(264),d=n(101),v=n(127),_=n(97),m=(n(96),n(98),n(93),n(95)),p=n(256),g=n(380),h=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"version",get:function(){return this.commitVersionProperties(),(this._get("version")||0)+1}}]),n}(n(105).a);Object(u.a)([Object(_.b)({readOnly:!0})],h.prototype,"version",null);var y,b=h=Object(u.a)([Object(m.a)("esri.views.layers.support.ClipArea")],h),x=y=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(e){var i;return Object(a.a)(this,n),(i=t.call(this,e)).type="rect",i.left=null,i.right=null,i.top=null,i.bottom=null,i}return Object(i.a)(n,[{key:"clone",value:function(){return new y({left:this.left,right:this.right,top:this.top,bottom:this.bottom})}},{key:"commitVersionProperties",value:function(){this.commitProperty("left"),this.commitProperty("right"),this.commitProperty("top"),this.commitProperty("bottom")}}]),n}(b);Object(u.a)([Object(_.b)({type:[Number,String],json:{write:!0}})],x.prototype,"left",void 0),Object(u.a)([Object(_.b)({type:[Number,String],json:{write:!0}})],x.prototype,"right",void 0),Object(u.a)([Object(_.b)({type:[Number,String],json:{write:!0}})],x.prototype,"top",void 0),Object(u.a)([Object(_.b)({type:[Number,String],json:{write:!0}})],x.prototype,"bottom",void 0);var O,S=x=y=Object(u.a)([Object(m.a)("esri.views.layers.support.ClipRect")],x),T=(n(119),n(214)),E=n(122),I=n(130),C=n(164),A={base:T.a,key:"type",typeMap:{extent:I.a,polygon:C.a}},L=O=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(e){var i;return Object(a.a)(this,n),(i=t.call(this,e)).type="geometry",i.geometry=null,i}return Object(i.a)(n,[{key:"clone",value:function(){var e,t;return new O({geometry:null!==(e=null===(t=this.geometry)||void 0===t?void 0:t.clone())&&void 0!==e?e:null})}},{key:"commitVersionProperties",value:function(){this.commitProperty("geometry")}}]),n}(b);Object(u.a)([Object(_.b)({types:A,json:{read:E.a,write:!0}})],L.prototype,"geometry",void 0);var P=L=O=Object(u.a)([Object(m.a)("esri.views.layers.support.Geometry")],L),R=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(e){var i;return Object(a.a)(this,n),(i=t.call(this,e)).type="path",i.path=[],i}return Object(i.a)(n,[{key:"commitVersionProperties",value:function(){this.commitProperty("path")}}]),n}(b);Object(u.a)([Object(_.b)({type:[[[Number]]],json:{write:!0}})],R.prototype,"path",void 0);var D=R=Object(u.a)([Object(m.a)("esri.views.layers.support.Path")],R),M=c.a.ofType({key:"type",base:null,typeMap:{rect:S,path:D,geometry:P}}),w=function(e){var t=function(e){Object(l.a)(n,e);var t=Object(s.a)(n);function n(){var e;return Object(a.a)(this,n),(e=t.apply(this,arguments)).attached=!1,e.clips=new M,e.lastUpdateId=-1,e.moving=!1,e.updateRequested=!1,e.visibleAtCurrentScale=!1,e.highlightOptions=null,e}return Object(i.a)(n,[{key:"initialize",value:function(){var e,t,n,a,i=this,r=null===(e=null===(t=this.view)||void 0===t?void 0:t.spatialReferenceLocked)||void 0===e||e;(null===(n=this.view)||void 0===n?void 0:n.spatialReference)&&r&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new d.a("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new p.a),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.addHandles([Object(v.e)((function(){return i.suspended}),(function(e){i.container&&(i.container.visible=!e),i.view&&!e&&i.updateRequested&&i.view.requestUpdate()}),v.d),Object(v.e)((function(){var e,t;return null!==(e=null===(t=i.layer)||void 0===t?void 0:t.opacity)&&void 0!==e?e:1}),(function(e){i.container&&(i.container.opacity=e)}),v.d),Object(v.e)((function(){return i.layer&&"blendMode"in i.layer?i.layer.blendMode:"normal"}),(function(e){i.container&&(i.container.blendMode=e)}),v.d),Object(v.e)((function(){return i.layer&&"effect"in i.layer?i.layer.effect:null}),(function(e){i.container&&(i.container.effect=e)}),v.d),Object(v.e)((function(){return i.highlightOptions}),(function(e){return i.container.highlightOptions=e}),v.d),Object(v.b)((function(){return i.clips}),"change",(function(){i.container&&(i.container.clips=i.clips)}),v.d),Object(v.e)((function(){var e;return{scale:null===(e=i.view)||void 0===e?void 0:e.scale,scaleRange:i.layer&&"effectiveScaleRange"in i.layer?i.layer.effectiveScaleRange:null}}),(function(e){var t=e.scale,n=null!=t&&i.isVisibleAtScale(t);n!==i.visibleAtCurrentScale&&i._set("visibleAtCurrentScale",n)}),v.d)],"constructor"),null!==(a=this.view)&&void 0!==a&&a.whenLayerView?this.view.whenLayerView(this.layer).then((function(e){e===i&&i.processAttach()}),(function(){})):this.when().then((function(){i.processAttach()}),(function(){})))}},{key:"destroy",value:function(){this.processDetach(),this.updateRequested=!1}},{key:"spatialReferenceSupported",get:function(){var e,t=null===(e=this.view)||void 0===e?void 0:e.spatialReference;return null==t||this.supportsSpatialReference(t)}},{key:"updating",get:function(){var e;return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!(null===(e=this.updatingHandles)||void 0===e||!e.updating))}},{key:"processAttach",value:function(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}},{key:"processDetach",value:function(){this.attached&&(this.attached=!1,this.removeHandles("attach"),this.detach(),this.updateRequested=!1)}},{key:"isVisibleAtScale",value:function(e){var t=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!t)return!0;var n=t.minScale,a=t.maxScale;return(0===n||e<=n)&&(0===a||e>=a)}},{key:"requestUpdate",value:function(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}},{key:"processUpdate",value:function(e){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",e),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(e))):this.updateRequested=!1}},{key:"hitTest",value:function(e,t){return Promise.resolve(null)}},{key:"supportsSpatialReference",value:function(e){return!0}},{key:"canResume",value:function(){return!!this.spatialReferenceSupported&&!!Object(r.a)(Object(o.a)(n.prototype),"canResume",this).call(this)&&this.visibleAtCurrentScale}},{key:"getSuspendInfo",value:function(){var e=Object(r.a)(Object(o.a)(n.prototype),"getSuspendInfo",this).call(this),t=!this.spatialReferenceSupported,a=this.visibleAtCurrentScale;return t&&(e.spatialReferenceNotSupported=t),a&&(e.outsideScaleRange=a),e}},{key:"addAttachHandles",value:function(e){this.addHandles(e,"attach")}}]),n}(e);return Object(u.a)([Object(_.b)()],t.prototype,"attached",void 0),Object(u.a)([Object(_.b)({type:M,set:function(e){var t=Object(f.b)(e,this._get("clips"),M);this._set("clips",t)}})],t.prototype,"clips",void 0),Object(u.a)([Object(_.b)()],t.prototype,"container",void 0),Object(u.a)([Object(_.b)()],t.prototype,"moving",void 0),Object(u.a)([Object(_.b)({readOnly:!0})],t.prototype,"spatialReferenceSupported",null),Object(u.a)([Object(_.b)({readOnly:!0})],t.prototype,"updateParameters",void 0),Object(u.a)([Object(_.b)()],t.prototype,"updateRequested",void 0),Object(u.a)([Object(_.b)()],t.prototype,"updating",null),Object(u.a)([Object(_.b)()],t.prototype,"view",void 0),Object(u.a)([Object(_.b)({readOnly:!0})],t.prototype,"visibleAtCurrentScale",void 0),Object(u.a)([Object(_.b)({type:g.a})],t.prototype,"highlightOptions",void 0),t=Object(u.a)([Object(m.a)("esri.views.2d.layers.LayerView2D")],t)}},275:function(e,t,n){"use strict";n.d(t,"a",(function(){return L}));var a=n(1),i=n(112),r=n(89),o=n(88),l=n(107),s=n(106),u=n(90),c=n(91),f=n(102),d=n(111),v=n(103),_=n(196),m=n(184),p=n(257),g=n(144),h=n(185),y=n(100),b=n(186),x=n(101);var O=n(253),S=n(254),T=n(148),E=n(147),I=f.a.getLogger("esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap");function C(e){return"heatmap"===e.type}function A(e,t){var n=e.referenceScale;return e.radius*(0!==n?n/t.scale:1)}var L=function(e){Object(u.a)(n,e);var t=Object(c.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments)).brushEffect=new D,e}return Object(o.a)(n,[{key:"supportsSymbology",value:function(e){return e===v.e.HEATMAP}},{key:"dispose",value:function(){Object(l.a)(Object(s.a)(n.prototype),"dispose",this).call(this),this.brushEffect.dispose(),this.brushEffect=null}},{key:"prepareState",value:function(){}},{key:"drawGeometry",value:function(e,t,a,r){var o=this.brushEffect.loadQualityProfile(e.context).defines;Object(l.a)(Object(s.a)(n.prototype),"drawGeometry",this).call(this,e,t,a,r?[].concat(Object(i.a)(r),Object(i.a)(o)):o)}},{key:"_drawMarkers",value:function(e,t,n,a,i,r,o){var l=e.context,s=e.rendererInfo,u=e.state,c=s.rendererSchema;Object(g.a)(c,"heatmap");var f=c.isFieldActive;n.setUniform1f("u_radius",A(c,u)),o||(n.setUniform1f("u_isFieldActive",f),l.setStencilFunction(y.h.GEQUAL,t.stencilRef,255)),l.drawElements(a,i,y.k.UNSIGNED_INT,r)}}]),n}(m.a),P={vsPath:"heatmap/heatmapResolve",fsPath:"heatmap/heatmapResolve",attributes:new Map([["a_position",0]])},R=.25;var D=function(e){Object(u.a)(n,e);var t=Object(c.a)(n);function n(){var e;return Object(r.a)(this,n),(e=t.apply(this,arguments)).name=e.constructor.name,e}return Object(o.a)(n,[{key:"createOptions",value:function(e){return e.passOptions}},{key:"dispose",value:function(){this._prevFBO=null,null!=this._accumulateFramebuffer&&this._accumulateFramebuffer.detachDepthStencilBuffer(),this._accumulateOutputStencilBuffer=Object(d.f)(this._accumulateOutputStencilBuffer),this._accumulateFramebuffer=Object(d.f)(this._accumulateFramebuffer),this._resolveGradientTexture=Object(d.f)(this._resolveGradientTexture),this._tileQuad=Object(d.f)(this._tileQuad)}},{key:"bind",value:function(e){var t=e.context,n=e.rendererInfo,a=e.passOptions,i=e.state,r=n.rendererSchema;(null==a||"hittest"!==a.type)&&C(r)&&(this._prevFBO=t.getBoundFramebufferObject(),this._prevViewport=t.getViewport(),Object(g.a)(r,"heatmap"),this._loadResources(e),this._updateResources(t,r,i),t.bindFramebuffer(this._accumulateFramebuffer),t.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),t.setStencilTestEnabled(!0),t.setBlendingEnabled(!0),t.setBlendFunction(y.b.ONE,y.b.ONE),t.setClearColor(0,0,0,0),t.clear(y.e.COLOR_BUFFER_BIT))}},{key:"unbind",value:function(){this._prevFBO=null,this._prevViewport=null}},{key:"draw",value:function(e){var t=e.context,n=e.painter,a=e.rendererInfo,i=e.passOptions,r=a.rendererSchema;if((null==i||"hittest"!==i.type)&&C(r)){var o=this.loadQualityProfile(t).defines,l=n.materialManager.getProgram(P,o);t.useProgram(l),t.bindFramebuffer(this._prevFBO),t.setViewport(0,0,this._prevViewport.width,this._prevViewport.height),t.setBlendFunction(y.b.ONE,y.b.ONE_MINUS_SRC_ALPHA),t.setStencilTestEnabled(!1);var s=r.radius,u=r.minDensity,c=r.densityRange;t.bindTexture(this._accumulateFramebuffer.colorTexture,8),t.bindTexture(this._resolveGradientTexture,9),l.setUniform1i("u_texture",8),l.setUniform1i("u_gradient",9),l.setUniform2f("u_densityMinAndInvRange",u,1/c),l.setUniform1f("u_densityNormalization",3/(s*s*Math.PI)),this._tileQuad.draw()}}},{key:"_loadResources",value:function(e){var t,n,a,i,r=e.context,o=e.painter,l=this.loadQualityProfile(r),s=l.dataType,u=l.samplingMode,c=l.pixelFormat,f=l.internalFormat,d=l.requiresSharedStencilBuffer,v=this._prevViewport,m=v.width,p=v.height,g=m*R,h=p*R,x=new E.a(g,h);x.pixelFormat=c,x.internalFormat=f,x.dataType=s,x.samplingMode=u,x.wrapMode=y.z.CLAMP_TO_EDGE,d||null!==(t=this._accumulateOutputStencilBuffer)&&void 0!==t||(this._accumulateOutputStencilBuffer=new O.a(r,new S.a(y.r.DEPTH_STENCIL,g,h))),null!==(n=this._accumulateFramebuffer)&&void 0!==n||(this._accumulateFramebuffer=new b.a(r,x,d?o.getSharedStencilBuffer():this._accumulateOutputStencilBuffer)),(x=new E.a).wrapMode=y.z.CLAMP_TO_EDGE,null!==(a=this._resolveGradientTexture)&&void 0!==a||(this._resolveGradientTexture=new T.a(r,x)),null!==(i=this._tileQuad)&&void 0!==i||(this._tileQuad=new _.a(r,[0,0,1,0,0,1,1,1]))}},{key:"_updateResources",value:function(e,t,n){var a=t.gradientHash,i=t.gradient;this._prevGradientHash!==a&&(this._resolveGradientTexture.resize(i.length/4,1),this._resolveGradientTexture.setData(i),this._prevGradientHash=a);var r=this.loadQualityProfile(e).requiresSharedStencilBuffer,o=r?1:function(e){return e<2?1:R}(A(t,n)),l=this._prevViewport,s=l.width*o,u=l.height*o,c=this._accumulateFramebuffer,f=c.width,d=c.height;if(f!==s||d!==u){var v=this._accumulateFramebuffer.depthStencilAttachment;if(r&&null!=v){var _=v.descriptor,m=_.width,p=_.height;m===s&&p===u||(I.errorOnce("Attempted to resize shared stencil buffer! Detaching instead."),this._accumulateFramebuffer.detachDepthStencilBuffer())}this._accumulateFramebuffer.resize(s,u)}r||e.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,y.e.STENCIL_BUFFER_BIT,y.x.NEAREST)}},{key:"loadQualityProfile",value:function(e){if(null==this._qualityProfile){var t=function(e,t){var n=e.capabilities,a=n.textureFloat,i=n.colorBufferFloat,r=null===a||void 0===a?void 0:a.textureFloat,o=null===a||void 0===a?void 0:a.textureFloatLinear,l=null===a||void 0===a?void 0:a.textureHalfFloat,s=null===a||void 0===a?void 0:a.textureHalfFloatLinear,u=null===a||void 0===a?void 0:a.HALF_FLOAT,c=null===i||void 0===i?void 0:i.textureFloat,f=null===i||void 0===i?void 0:i.textureHalfFloat,v=null===i||void 0===i?void 0:i.floatBlend,_=Object(d.m)(e.driverTest).floatBufferBlend.result;if(!r&&!l)throw new x.a("heatmap:missing-texture-float","HeatmapRenderer requires WebGL2 or the WebGL1 extension OES_texture_float or OES_texture_half_float.");if(!c&&!f)throw new x.a("heatmap:missing-color-buffer-float","HeatmapRenderer requires the WebGL extension EXT_color_buffer_float or EXT_color_buffer_half_float or WEBGL_color_buffer_float.");if(!(v&&_||f))throw new x.a("heatmap:missing-float-blend","HeatmapRenderer requires the WebGL extension EXT_float_blend or EXT_color_buffer_half_float."+(_?"":" This device claims support for EXT_float_blend, but does not actually support it."));var m=r&&c&&v&&_,p=l&&f,g=o,h=s,b=!(null===i||void 0===i||!i.R32F),O=!(null===i||void 0===i||!i.R16F);if(m&&(g||!h))return g||t.warnOnce("Missing WebGL extension OES_texture_float_linear. Heatmap quality may be reduced."),{dataType:y.p.FLOAT,samplingMode:g?y.x.LINEAR:y.x.NEAREST,pixelFormat:b?y.o.RED:y.o.RGBA,internalFormat:b?y.u.R32F:y.o.RGBA};if(p)return h||t.warnOnce("Missing WebGL extension OES_texture_half_float_linear. Heatmap quality may be reduced."),{dataType:u,samplingMode:h?y.x.LINEAR:y.x.NEAREST,pixelFormat:O?y.o.RED:y.o.RGBA,internalFormat:O?y.u.R16F:y.o.RGBA};throw new x.a("heatmap:missing-hardware-support","HeatmapRenderer requires WebGL extensions that allow it to render and blend to float or half float textures.")}(e,I),n=e.type===h.a.WEBGL1;this._qualityProfile=Object(a.a)(Object(a.a)({},t),{},{requiresSharedStencilBuffer:n,defines:t.dataType!==y.p.FLOAT?["heatmapPrecisionHalfFloat"]:[]})}return this._qualityProfile}}]),n}(p.a)},409:function(e,t,n){"use strict";n.d(t,"a",(function(){return C})),n.d(t,"b",(function(){return T})),n.d(t,"c",(function(){return E}));var a=n(99),i=n(4),r=n(12),o=n(89),l=n(88),s=n(120),u=n(107),c=n(106),f=n(90),d=n(91),v=n(111),_=n(110),m=n(178),p=n(151),g=n(156),h=n(199),y=n(410),b=n(185),x=n(100),O=n(148),S=n(147);function T(e){return e&&"render"in e}function E(e){var t=document.createElement("canvas");return t.width=e.width,t.height=e.height,e.render(t.getContext("2d")),t}function I(e){return T(e)?e instanceof y.a?Object(v.b)(e.getRenderedRasterPixels(),(function(e){return e.renderedRasterPixels})):E(e):e}var C=function(e){Object(f.a)(n,e);var t=Object(d.a)(n);function n(){var e,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Object(o.a)(this,n),(e=t.call(this)).blendFunction="standard",e._sourceWidth=0,e._sourceHeight=0,e._textureInvalidated=!1,e._texture=null,e.stencilRef=0,e.coordScale=[1,1],e._height=void 0,e.pixelRatio=1,e.resolution=0,e.rotation=0,e._source=null,e._width=void 0,e.x=0,e.y=0,e.immutable=i,e.source=a,e.requestRender=e.requestRender.bind(Object(s.a)(e)),e}return Object(l.a)(n,[{key:"destroy",value:function(){this._texture&&(this._texture.dispose(),this._texture=null),null!=this._uploadStatus&&(this._uploadStatus.controller.abort(),this._uploadStatus=null)}},{key:"isSourceScaled",get:function(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}},{key:"height",get:function(){return void 0!==this._height?this._height:this._sourceHeight},set:function(e){this._height=e}},{key:"source",get:function(){return this._source},set:function(e){null==e&&null==this._source||(this._source=e,this.invalidateTexture(),this.requestRender())}},{key:"width",get:function(){return void 0!==this._width?this._width:this._sourceWidth},set:function(e){this._width=e}},{key:"beforeRender",value:function(e){Object(u.a)(Object(c.a)(n.prototype),"beforeRender",this).call(this,e),this.updateTexture(e)}},{key:"setSourceAsync",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(t,n){var a,r;return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return null!=this._uploadStatus&&this._uploadStatus.controller.abort(),a=new AbortController,r=Object(_.c)(),e.abrupt("return",(Object(_.l)(n,(function(){return a.abort()})),Object(_.l)(a,(function(e){return r.reject(e)})),this._uploadStatus={controller:a,resolver:r},this.source=t,r.promise));case 3:case"end":return e.stop()}}),e,this)})));return function(t,n){return e.apply(this,arguments)}}()},{key:"invalidateTexture",value:function(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width))}},{key:"updateTransitionProperties",value:function(e,t){e>=64&&(this.fadeTransitionEnabled=!1,this.inFadeTransition=!1),Object(u.a)(Object(c.a)(n.prototype),"updateTransitionProperties",this).call(this,e,t)}},{key:"setTransform",value:function(e){var t=Object(m.g)(this.transforms.dvs),n=e.toScreenNoRotation([0,0],[this.x,this.y]),i=Object(a.a)(n,2),r=i[0],o=i[1],l=this.resolution/this.pixelRatio/e.resolution,s=l*this.width,u=l*this.height,c=Math.PI*this.rotation/180;Object(m.h)(t,t,Object(g.d)(r,o)),Object(m.h)(t,t,Object(g.d)(s/2,u/2)),Object(m.n)(t,t,-c),Object(m.h)(t,t,Object(g.d)(-s/2,-u/2)),Object(m.k)(t,t,Object(g.d)(s,u)),Object(m.l)(this.transforms.dvs,e.displayViewMat3,t)}},{key:"setSamplingProfile",value:function(e){this._texture&&(e.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(e.samplingMode))}},{key:"bind",value:function(e,t){this._texture&&e.bindTexture(this._texture,t)}},{key:"updateTexture",value:function(){var e=Object(r.a)(Object(i.a)().mark((function e(t){var n,a,r,o,l,s,u,c,f,d,v;return Object(i.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.context,a=t.painter,this._textureInvalidated){e.next=3;break}return e.abrupt("return");case 3:if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(n)),this.source){e.next=5;break}return e.abrupt("return",void this._texture.setData(null));case 5:if(this._texture.resize(this._sourceWidth,this._sourceHeight),r=I(this.source),e.prev=7,null==this._uploadStatus){e.next=16;break}return o=this._uploadStatus,l=o.controller,s=o.resolver,u={signal:l.signal},c=this.width,f=this.height,d=this._texture,v=a.textureUploadManager,e.next=12,v.enqueueTextureUpdate({data:r,texture:d,width:c,height:f},u);case 12:s.resolve(),this._uploadStatus=null,e.next=17;break;case 16:this._texture.setData(r);case 17:this.ready(),e.next=23;break;case 20:e.prev=20,e.t0=e.catch(7),Object(_.o)(e.t0);case 23:case"end":return e.stop()}}),e,this,[[7,20]])})));return function(t){return e.apply(this,arguments)}}()},{key:"onDetach",value:function(){this.destroy()}},{key:"_createTransforms",value:function(){return{dvs:Object(p.b)()}}},{key:"_createTexture",value:function(e){var t=this.immutable&&e.type===b.a.WEBGL2,n=new S.a;return n.internalFormat=t?x.u.RGBA8:x.o.RGBA,n.wrapMode=x.z.CLAMP_TO_EDGE,n.isImmutable=t,n.width=this._sourceWidth,n.height=this._sourceHeight,new O.a(e,n)}}]),n}(h.a)},410:function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));var a=n(89),i=n(88),r=function(){function e(t,n,i){Object(a.a)(this,e),this.pixelBlock=t,this.extent=n,this.originalPixelBlock=i}return Object(i.a)(e,[{key:"width",get:function(){return null!=this.pixelBlock?this.pixelBlock.width:0}},{key:"height",get:function(){return null!=this.pixelBlock?this.pixelBlock.height:0}},{key:"render",value:function(e){var t,n=this.pixelBlock;if(null!=n){var a=this.filter({extent:this.extent,pixelBlock:null!==(t=this.originalPixelBlock)&&void 0!==t?t:n});if(null!=a.pixelBlock){a.pixelBlock.maskIsAlpha&&(a.pixelBlock.premultiplyAlpha=!0);var i=a.pixelBlock.getAsRGBA(),r=e.createImageData(a.pixelBlock.width,a.pixelBlock.height);r.data.set(i),e.putImageData(r,0,0)}}}},{key:"getRenderedRasterPixels",value:function(){var e=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return null==e.pixelBlock?null:(e.pixelBlock.maskIsAlpha&&(e.pixelBlock.premultiplyAlpha=!0),{width:e.pixelBlock.width,height:e.pixelBlock.height,renderedRasterPixels:new Uint8Array(e.pixelBlock.getAsRGBA().buffer)})}}]),e}()},421:function(e,t,n){"use strict";n.d(t,"a",(function(){return v}));var a=n(89),i=n(88),r=n(90),o=n(91),l=n(94),s=n(102),u=n(110),c=n(127),f=n(97),d=(n(96),n(98),n(93),n(95)),v=function(e){var t=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(i.a)(n,[{key:"initialize",value:function(){var e=this;this.handles.add(Object(c.b)((function(){return e.layer}),"refresh",(function(t){e.doRefresh(t.dataChanged).catch((function(t){Object(u.h)(t)||s.a.getLogger(e).error(t)}))})),"RefreshableLayerView")}}]),n}(e);return Object(l.a)([Object(f.b)()],t.prototype,"layer",void 0),t=Object(l.a)([Object(d.a)("esri.layers.mixins.RefreshableLayerView")],t)}},686:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var a=n(112),i=n(89),r=n(88),o=n(107),l=n(106),s=n(90),u=n(91),c=n(226),f=n(103),d=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(){var e;return Object(i.a)(this,n),(e=t.apply(this,arguments))._hasCrossfade=!1,e}return Object(r.a)(n,[{key:"requiresDedicatedFBO",get:function(){return this._hasCrossfade}},{key:"beforeRender",value:function(e){Object(o.a)(Object(l.a)(n.prototype),"beforeRender",this).call(this,e),this._manageFade()}},{key:"prepareRenderPasses",value:function(e){var t=this,i=e.registerRenderPass({name:"bitmap",brushes:[c.a.bitmap],target:function(){return t.children},drawPhase:f.c.MAP});return[].concat(Object(a.a)(Object(o.a)(Object(l.a)(n.prototype),"prepareRenderPasses",this).call(this,e)),[i])}},{key:"_manageFade",value:function(){this.children.reduce((function(e,t){return e+(t.inFadeTransition?1:0)}),0)>=2?(this.children.forEach((function(e){return e.blendFunction="additive"})),this._hasCrossfade=!0):(this.children.forEach((function(e){return e.blendFunction="standard"})),this._hasCrossfade=!1)}}]),n}(n(247).a)},863:function(e,t,n){"use strict";n.d(t,"a",(function(){return w}));var a=n(4),i=n(92),r=n(12),o=n(89),l=n(88),s=n(90),u=n(91),c=n(94),f=n(126),d=(n(93),n(110)),v=n(97),_=(n(96),n(98),n(95)),m=n(139),p=n(132),g=n(323),h=n(99),y=Math.PI/180;function b(e,t){var n=t.rotation*y,a=Math.abs(Math.cos(n)),i=Math.abs(Math.sin(n)),r=Object(h.a)(t.size,2),o=r[0],l=r[1];return e[0]=Math.round(l*i+o*a),e[1]=Math.round(l*a+o*i),e}function x(e,t,n,a){var i=Object(h.a)(t,2),r=i[0],o=i[1],l=Object(h.a)(a,2),s=l[0],u=l[1],c=.5*n;return e[0]=r-c*s,e[1]=o-c*u,e[2]=r+c*s,e[3]=o+c*u,e}var O=n(409),S=n(388),T=n(220),E=Object(m.h)(),I=[0,0],C=new T.a(0,0,0,0),A=2048,L=2048,P=!1,R=!1,D=!1,M=function(e){Object(s.a)(n,e);var t=Object(u.a)(n);function n(e){var l;return Object(o.a)(this,n),(l=t.call(this,e))._imagePromise=null,l.bitmaps=[],l.hidpi=D,l.imageMaxWidth=A,l.imageMaxHeight=L,l.imageRotationSupported=P,l.imageNormalizationSupported=R,l.update=Object(d.d)(function(){var e=Object(r.a)(Object(a.a)().mark((function e(t,n){var r,o,s,u,c,f,v,_,m,g,h,y,x,O,S,T,E,C,A,L,P,R,D,M,w;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(Object(d.n)(n),t.stationary&&!l.destroyed){e.next=2;break}return e.abrupt("return");case 2:return s=t.state,u=Object(p.e)(s.spatialReference),c=l.hidpi?t.pixelRatio:1,f=l.imageNormalizationSupported&&s.worldScreenWidth&&s.worldScreenWidth<s.size[0],v=null!==(r=l.imageMaxWidth)&&void 0!==r?r:0,_=null!==(o=l.imageMaxHeight)&&void 0!==o?o:0,f?(I[0]=s.worldScreenWidth,I[1]=s.size[1]):l.imageRotationSupported?(I[0]=s.size[0],I[1]=s.size[1]):b(I,s),m=Math.floor(I[0]*c)>v||Math.floor(I[1]*c)>_,g=u&&(s.extent.xmin<u.valid[0]||s.extent.xmax>u.valid[1]),h=!l.imageNormalizationSupported&&g,y=!m&&!h,x=l.imageRotationSupported?s.rotation:0,O=l.container.children.slice(),y?(S=f?s.paddedViewState.center:s.center,l._imagePromise&&console.error("Image promise was not defined!"),l._imagePromise=l._singleExport(s,I,S,s.resolution,x,c,n)):(T=Math.min(v,_),h&&(T=Math.min(s.worldScreenWidth,T)),l._imagePromise=l._tiledExport(s,T,c,n)),e.prev=6,e.next=9,l._imagePromise;case 9:if(e.t1=E=e.sent,e.t0=null!==e.t1,!e.t0){e.next=13;break}e.t0=void 0!==E;case 13:if(!e.t0){e.next=17;break}e.t2=E,e.next=18;break;case 17:e.t2=[];case 18:if(C=e.t2,Object(d.n)(n),A=[],l._imagePromise=null,!l.destroyed){e.next=23;break}return e.abrupt("return");case 23:l.bitmaps=C,L=Object(i.a)(O),e.prev=25,R=Object(a.a)().mark((function e(){var t;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:t=P.value,C.includes(t)||A.push(t.fadeOut().then((function(){t.remove(),t.destroy()})));case 2:case"end":return e.stop()}}),e)})),L.s();case 28:if((P=L.n()).done){e.next=32;break}return e.delegateYield(R(),"t3",30);case 30:e.next=28;break;case 32:e.next=37;break;case 34:e.prev=34,e.t4=e.catch(25),L.e(e.t4);case 37:return e.prev=37,L.f(),e.finish(37);case 40:D=Object(i.a)(C);try{for(D.s();!(M=D.n()).done;)w=M.value,A.push(w.fadeIn())}catch(N){D.e(N)}finally{D.f()}return e.next=44,Promise.all(A);case 44:e.next=49;break;case 46:e.prev=46,e.t5=e.catch(6),l._imagePromise=null,Object(d.m)(e.t5);case 49:case"end":return e.stop()}}),e,null,[[6,46],[25,34,37,40]])})));return function(t,n){return e.apply(this,arguments)}}(),5e3),l.updateExports=Object(d.d)(function(){var e=Object(r.a)(Object(a.a)().mark((function e(t){var n,r,o,s,u;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:n=[],r=Object(i.a)(l.container.children),e.prev=2,s=Object(a.a)().mark((function e(){var i;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((i=o.value).visible&&i.stage){e.next=3;break}return e.abrupt("return",{v:void 0});case 3:n.push(t(i).then((function(){i.invalidateTexture(),i.requestRender()})));case 4:case"end":return e.stop()}}),e)})),r.s();case 5:if((o=r.n()).done){e.next=12;break}return e.delegateYield(s(),"t0",7);case 7:if(!(u=e.t0)){e.next=10;break}return e.abrupt("return",u.v);case 10:e.next=5;break;case 12:e.next=17;break;case 14:e.prev=14,e.t1=e.catch(2),r.e(e.t1);case 17:return e.prev=17,r.f(),e.finish(17);case 20:return l._imagePromise=Object(d.e)(n).then((function(){return l._imagePromise=null})),e.next=23,l._imagePromise;case 23:case"end":return e.stop()}}),e,null,[[2,14,17,20]])})));return function(t){return e.apply(this,arguments)}}()),l}return Object(l.a)(n,[{key:"destroy",value:function(){this.bitmaps.forEach((function(e){return e.destroy()})),this.bitmaps=[]}},{key:"updating",get:function(){return!this.destroyed&&null!==this._imagePromise}},{key:"_export",value:function(){var e=Object(r.a)(Object(a.a)().mark((function e(t,n,i,r,o,l){var s,u;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.fetchSource(t,Math.floor(n*o),Math.floor(i*o),{rotation:r,pixelRatio:o,signal:l});case 2:return s=e.sent,Object(d.n)(l),(u=new O.a(null,!0)).x=t.xmin,u.y=t.ymax,u.resolution=t.width/n,u.rotation=r,u.pixelRatio=o,u.opacity=0,this.container.addChild(u),e.next=14,u.setSourceAsync(s,l);case 14:return Object(d.n)(l),e.abrupt("return",u);case 16:case"end":return e.stop()}}),e,this)})));return function(t,n,a,i,r,o){return e.apply(this,arguments)}}()},{key:"_singleExport",value:function(){var e=Object(r.a)(Object(a.a)().mark((function e(t,n,i,r,o,l,s){var u;return Object(a.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return x(E,i,r,n),u=Object(m.s)(E,t.spatialReference),e.next=4,this._export(u,n[0],n[1],o,l,s);case 4:return e.t0=e.sent,e.abrupt("return",[e.t0]);case 6:case"end":return e.stop()}}),e,this)})));return function(t,n,a,i,r,o,l){return e.apply(this,arguments)}}()},{key:"_tiledExport",value:function(e,t,n,a){var i=this,r=g.a.create({size:t,spatialReference:e.spatialReference,scales:[e.scale]}),o=new S.a(r),l=o.getTileCoverage(e);if(!l)return null;var s=[];return l.forEach((function(r,l,u,c){C.set(r,l,u,0),o.getTileBounds(E,C);var f=Object(m.s)(E,e.spatialReference);s.push(i._export(f,t,t,0,n,a).then((function(e){return 0!==c&&(C.set(r,l,u,c),o.getTileBounds(E,C),e.x=E[0],e.y=E[3]),e})))})),Promise.all(s)}}]),n}(f.a);Object(c.a)([Object(v.b)()],M.prototype,"_imagePromise",void 0),Object(c.a)([Object(v.b)()],M.prototype,"bitmaps",void 0),Object(c.a)([Object(v.b)()],M.prototype,"container",void 0),Object(c.a)([Object(v.b)()],M.prototype,"fetchSource",void 0),Object(c.a)([Object(v.b)()],M.prototype,"hidpi",void 0),Object(c.a)([Object(v.b)()],M.prototype,"imageMaxWidth",void 0),Object(c.a)([Object(v.b)()],M.prototype,"imageMaxHeight",void 0),Object(c.a)([Object(v.b)()],M.prototype,"imageRotationSupported",void 0),Object(c.a)([Object(v.b)()],M.prototype,"imageNormalizationSupported",void 0),Object(c.a)([Object(v.b)()],M.prototype,"requestUpdate",void 0),Object(c.a)([Object(v.b)()],M.prototype,"updating",null);var w=M=Object(c.a)([Object(_.a)("esri.views.2d.layers.support.ExportStrategy")],M)}}]);
//# sourceMappingURL=163.3428a38b.chunk.js.map