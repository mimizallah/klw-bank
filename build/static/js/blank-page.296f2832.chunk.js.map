{"version":3,"sources":["components/mapcomponent/map.js","../node_modules/@stencil/core/internal/client lazy /^/.//.*$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/mapcomponent/Layers/MyFeatureLayer.js","containers/navs/Breadcrumb.js","views/app/blank-page.js"],"names":["Map","mapDiv","useRef","click_ref","useEffect","current","drawPnt","graphic","pntGraphics","GraphicsLayer","webmap","WebMap","basemap","view","MapView","container","map","center","scale","ui","components","searchWidget","Search","add","stateFeatureLayer","FeatureLayer","url","outFields","cityFeatureLayer","addMany","when","whenLayerView","then","layerView","draw","Draw","sym","type","style","color","size","outline","width","drawPoint","console","log","action","create","on","evt","graphics","removeAll","Point","x","coordinates","y","spatialReference","Graphic","geometry","symbol","native","ctrlKey","focus","_jsx","className","ref","children","id","title","onClick","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","exports","MyFeatureLayer","props","_useState","useState","_useState2","_slicedToArray","myFeatureLayer","setMyFeatureLayer","remove","getMenuTitle","sub","concat","adminRoot","IntlMessages","getUrl","path","split","BreadcrumbItems","_ref2","match","substr","paths","length","indexOf","filter","_Fragment","Breadcrumb","index","BreadcrumbItem","active","NavLink","to","BreadcrumbContainer","_ref","heading","_jsxs","marginBottom","BlankPage","Row","Colxx","xxs","Separator","Card","CardBody","CardTitle"],"mappings":"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","file":"static/js/blank-page.296f2832.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useRef, useEffect } from 'react';\nimport MapView from '@arcgis/core/views/MapView';\nimport WebMap from '@arcgis/core/Map';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport Draw from '@arcgis/core/views/draw/Draw';\nimport Graphic from '@arcgis/core/Graphic';\nimport GraphicsLayer from '@arcgis/core/layers/GraphicsLayer';\nimport Point from '@arcgis/core/geometry/Point';\nimport MultiPoint from '@arcgis/core/geometry/Multipoint';\nimport Search from '@arcgis/core/widgets/Search'\n\nimport '../../assets/css/map.css';\n\nconst Map = () => {\n  const mapDiv = useRef(null);\n  const click_ref = useRef(null);\n\n  useEffect(() => {\n    if (mapDiv.current) {\n      /**\n       * Initialize application\n       */\n      const pntGraphics = new GraphicsLayer();\n\n      let renderer = {\n        type: 'simple', // autocasts as new SimpleRenderer()\n        symbol: {\n          type: 'simple-fill', // autocasts as new SimpleFillSymbol()\n          color: [255, 255, 255, 0.5],\n          style: 'none',\n          outline: {\n            // autocasts as new SimpleLineSymbol()\n            color: 'white',\n            width: 2,\n          },\n        },\n      };\n\n      let drawPnt,\n        graphic,\n        ctrlKey = false,\n        highlight,\n        statesLyrView;\n\n      const webmap = new WebMap({\n        basemap: 'streets-vector',\n      });\n\n      const view = new MapView({\n        container: mapDiv.current,\n        map: webmap,\n        center: [-98.43750059604514, 38.1986442207947],\n        scale: 25000000,\n        ui: {\n          components: ['zoom', 'compass'],\n        },\n      });\n\n      const searchWidget = new Search({\n        view: view\n      });\n\n      view.ui.add(searchWidget, \"top-right\");\n\n      const stateFeatureLayer = new FeatureLayer({\n        url:\n          'https://services2.arcgis.com/JoecHEvChY6qFe2m/arcgis/rest/services/USA_States/FeatureServer/0',\n        outFields: ['*'],\n      });\n\n      const cityFeatureLayer = new FeatureLayer({\n        url:\n          'https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/0',\n        outFields: ['*'],\n      });\n\n      webmap.addMany([stateFeatureLayer, cityFeatureLayer]);\n\n      stateFeatureLayer.when(function () {\n        view.whenLayerView(stateFeatureLayer).then(function (layerView) {\n          statesLyrView = layerView;\n        });\n      });\n\n      const draw = new Draw({\n        view: view,\n      });\n\n      var sym = {\n        type: 'simple-marker',\n        style: 'circle',\n        color: [0, 255, 255, 0.6],\n        size: '8px',\n        outline: {\n          color: [0, 255, 255, 1],\n          width: 1,\n        },\n      };\n\n      view.ui.add('point-button', 'top-left');\n\n      const drawPoint = () => {\n        console.log('in ');\n        if (highlight) {\n          highlight.remove();\n        }\n        const action = draw.create('point');\n        action.on('cursor-update', function (evt) {\n          view.graphics.removeAll();\n          drawPnt = new Point({\n            x: evt.coordinates[0],\n            y: evt.coordinates[1],\n            spatialReference: view.spatialReference,\n          });\n          graphic = new Graphic({\n            geometry: drawPnt,\n            symbol: sym,\n          });\n          view.graphics.add(graphic);\n          /*if (ctrlKey && !evt.native.ctrlKey) {\n              draw.reset();\n              view.graphics.removeAll();\n              selectStates();\n          }*/\n        });\n        action.on('draw-complete', function (evt) {\n          if (evt.native.ctrlKey) {\n            ctrlKey = true;\n          } else {\n            ctrlKey = false;\n          }\n          drawPnt = new Point({\n            x: evt.coordinates[0],\n            y: evt.coordinates[1],\n            spatialReference: view.spatialReference,\n          });\n          graphic = new Graphic({\n            geometry: drawPnt,\n            symbol: sym,\n          });\n          pntGraphics.add(graphic);\n          if (evt.native.ctrlKey) {\n            drawPoint();\n          } else {\n            view.graphics.removeAll();\n            selectStates();\n          }\n        });\n        view.focus();\n      }\n\n      function selectStates() {\n        console.log('in selectstate');\n      }\n\n      click_ref.current = drawPoint;\n      //document.getElementById('point-button').onclick = drawPoint;\n    }\n  }, []);\n\n  return (\n    <div className=\"mapDiv\" ref={mapDiv}>\n      <button\n        id=\"point-button\"\n        className=\"esri-widget esri-widget--button esri-interactive\"\n        title=\"Select Countries\"\n        onClick={()=>click_ref.current()}\n      >\n        <span className=\"esri-icon-map-pin\"></span>\n      </button>\n    </div>\n  );\n};\n\nexport default Map;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 1274;","import { useEffect, useState } from 'react';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\n\nfunction MyFeatureLayer(props) {\n  console.log(props);\n  const [myFeatureLayer, setMyFeatureLayer] = useState(null);\n  useEffect(() => {\n    // eslint-disable-next-line no-shadow\n    const myFeatureLayer = new FeatureLayer({\n      url:\n        'https://sampleserver6.arcgisonline.com/arcgis/rest/services/USA/MapServer/2',\n    });\n\n    setMyFeatureLayer(myFeatureLayer);\n    props.map.add(myFeatureLayer);\n\n    return function cleanup() {\n      props.map.remove(myFeatureLayer);\n    };\n  }, [myFeatureLayer, props]);\n  return null;\n}\n\nexport default MyFeatureLayer;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1 style={{ marginBottom: '0rem' }}>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React from 'react';\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../containers/navs/Breadcrumb';\nimport Map from '../../components/mapcomponent/map';\nimport MyFeatureLayer from '../../components/mapcomponent/Layers/MyFeatureLayer';\n\nconst BlankPage = ({ match }) => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.blank-page\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"dashboards.map\" />\n              </CardTitle>\n              <Map>\n                <MyFeatureLayer />\n              </Map>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default BlankPage;\n"],"sourceRoot":""}