{"version":3,"sources":["containers/navs/Breadcrumb.js","views/app/ui/components/editors.js"],"names":["getMenuTitle","sub","concat","adminRoot","_jsx","IntlMessages","id","getUrl","path","split","BreadcrumbItems","_ref2","match","substr","paths","length","indexOf","filter","x","_Fragment","children","Breadcrumb","className","map","index","BreadcrumbItem","active","NavLink","to","BreadcrumbContainer","_ref","heading","_jsxs","style","marginBottom","quillModules","toolbar","list","indent","quillFormats","EditorsUi","_useState","useState","_useState2","_slicedToArray","textQuillStandart","setTextQuillStandart","_useState3","_useState4","textQuillBubble","setTextQuillBubble","Row","Colxx","xxs","Separator","Card","CardBody","CardTitle","ReactQuill","theme","value","onChange","val","modules","formats"],"mappings":"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","file":"static/js/components-editors.97657446.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1 style={{ marginBottom: '0rem' }}>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React, { useState } from 'react';\nimport { Row, Card, CardBody, CardTitle } from 'reactstrap';\nimport ReactQuill from 'react-quill';\nimport {\n  Colxx,\n  Separator,\n} from '../../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../../containers/navs/Breadcrumb';\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.bubble.css';\n\nconst quillModules = {\n  toolbar: [\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n    [\n      { list: 'ordered' },\n      { list: 'bullet' },\n      { indent: '-1' },\n      { indent: '+1' },\n    ],\n    ['link', 'image'],\n    ['clean'],\n  ],\n};\n\nconst quillFormats = [\n  'header',\n  'bold',\n  'italic',\n  'underline',\n  'strike',\n  'blockquote',\n  'list',\n  'bullet',\n  'indent',\n  'link',\n  'image',\n];\n\nconst EditorsUi = ({ match }) => {\n  const [textQuillStandart, setTextQuillStandart] = useState('');\n  const [textQuillBubble, setTextQuillBubble] = useState('');\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.editors\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"editors.quill-standart\" />\n              </CardTitle>\n              <ReactQuill\n                theme=\"snow\"\n                value={textQuillStandart}\n                onChange={(val) => setTextQuillStandart(val)}\n                modules={quillModules}\n                formats={quillFormats}\n              />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-4\">\n        <Colxx xxs=\"12\">\n          <Card>\n            <CardBody>\n              <CardTitle>\n                <IntlMessages id=\"editors.quill-bubble\" />\n              </CardTitle>\n              <ReactQuill\n                theme=\"bubble\"\n                value={textQuillBubble}\n                onChange={(val) => setTextQuillBubble(val)}\n              />\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default EditorsUi;\n"],"sourceRoot":""}