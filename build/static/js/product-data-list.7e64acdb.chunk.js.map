{"version":3,"sources":["containers/pages/ListPageHeading.js","containers/pages/AddNewModal.js","hooks/use-mousetrap.js","containers/pages/ContextMenuContainer.js","containers/pages/DataListView.js","containers/pages/ImageListView.js","containers/pages/ThumbListView.js","containers/pages/ListPageListing.js","containers/navs/Breadcrumb.js","views/app/pages/product/data-list.js","components/common/CustomSelectInput.js","containers/pages/Pagination.js"],"names":["injectIntl","_ref","intl","displayMode","changeDisplayMode","handleChangeSelectAll","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","match","startIndex","endIndex","selectedItemsLength","itemsLength","onSearchKey","orderOptions","pageSizes","toggleModal","heading","_useState","useState","_useState2","_slicedToArray","dropdownSplitOpen","setDropdownSplitOpen","_useState3","_useState4","displayOptionsIsOpen","setDisplayOptionsIsOpen","messages","_jsx","Row","children","_jsxs","Colxx","xxs","className","IntlMessages","id","Button","color","size","onClick","ButtonDropdown","isOpen","toggle","CustomInput","type","checked","onChange","label","concat","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Breadcrumb","Collapse","href","DataListIcon","ThumbListIcon","ImageListIcon","UncontrolledDropdown","map","order","index","column","name","placeholder","onKeyPress","e","Separator","AddNewModal","modalOpen","categories","Modal","wrapClassName","backdrop","ModalHeader","ModalBody","Label","Input","Select","components","CustomSelectInput","classNamePrefix","options","ModalFooter","outline","handlerKey","handlerCallback","actionRef","useRef","current","useEffect","mousetrap","bind","evt","combo","preventDefault","unbind","ContextMenuContainer","onContextMenu","onContextMenuClick","ContextMenu","onShow","detail","data","MenuItem","action","DataListView","product","isSelect","collect","onCheckItem","ContextMenuTrigger","Card","event","classnames","active","NavLink","to","title","category","date","Badge","statusColor","pill","status","React","memo","ImageListView","sm","lg","xl","CardImg","top","alt","src","img","CardBody","CardSubtitle","CardText","ThumbListView","props","ListPageListing","items","selectedItems","currentPage","totalPage","onChangePage","includes","Pagination","i","getMenuTitle","sub","adminRoot","getUrl","path","split","BreadcrumbItems","_ref2","substr","paths","length","indexOf","filter","x","_Fragment","BreadcrumbItem","BreadcrumbContainer","style","marginBottom","getIndex","value","arr","prop","apiUrl","servicePath","key","DataListPages","isLoaded","setIsLoaded","setDisplayMode","_useState5","_useState6","setCurrentPage","_useState7","_useState8","setSelectedPageSize","_useState9","_useState10","setSelectedOrderOption","_useState11","_useState12","setModalOpen","_useState13","_useState14","setTotalItemCount","_useState15","_useState16","setTotalPage","_useState17","_useState18","search","setSearch","_useState19","_useState20","setSelectedItems","_useState21","_useState22","setItems","_useState23","_useState24","lastChecked","setLastChecked","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","get","then","res","_objectSpread","replace","totalItem","stop","apply","arguments","fetchData","isToggle","document","activeElement","blur","useMousetrap","ListPageHeading","find","target","toLowerCase","tagName","parentElement","selectedList","_toConsumableArray","push","shiftKey","newItems","start","end","slice","Math","min","max","item","Array","from","Set","console","log","clickedProductId","customProps","autoCorrect","autoCapitalize","_ref$totalPage","_ref$currentPage","_ref$numberLimit","numberLimit","_ref$lastIsActive","lastIsActive","_ref$firstIsActive","firstIsActive","startPoint","endPoint","parseInt","points","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","Nav","NavItem"],"mappings":"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","file":"static/js/product-data-list.7e64acdb.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { useState } from 'react';\nimport {\n  Row,\n  Button,\n  ButtonDropdown,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  CustomInput,\n  Collapse,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap';\nimport Breadcrumb from '../navs/Breadcrumb';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nimport {\n  DataListIcon,\n  ThumbListIcon,\n  ImageListIcon,\n} from '../../components/svg';\n\nconst ListPageHeading = ({\n  intl,\n  displayMode,\n  changeDisplayMode,\n  handleChangeSelectAll,\n  changeOrderBy,\n  changePageSize,\n  selectedPageSize,\n  totalItemCount,\n  selectedOrderOption,\n  match,\n  startIndex,\n  endIndex,\n  selectedItemsLength,\n  itemsLength,\n  onSearchKey,\n  orderOptions,\n  pageSizes,\n  toggleModal,\n  heading,\n}) => {\n  const [dropdownSplitOpen, setDropdownSplitOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  const { messages } = intl;\n\n  return (\n    <Row>\n      <Colxx xxs=\"12\">\n        <div className=\"mb-2\">\n          <h1>\n            <IntlMessages id={heading} />\n          </h1>\n\n          <div className=\"text-zero top-right-button-container\">\n            <Button\n              color=\"primary\"\n              size=\"lg\"\n              className=\"top-right-button\"\n              onClick={() => toggleModal()}\n            >\n              <IntlMessages id=\"pages.add-new\" />\n            </Button>\n            {'  '}\n            <ButtonDropdown\n              isOpen={dropdownSplitOpen}\n              toggle={() => setDropdownSplitOpen(!dropdownSplitOpen)}\n            >\n              <div className=\"btn btn-primary btn-lg pl-4 pr-0 check-button check-all\">\n                <CustomInput\n                  className=\"custom-checkbox mb-0 d-inline-block\"\n                  type=\"checkbox\"\n                  id=\"checkAll\"\n                  checked={selectedItemsLength >= itemsLength}\n                  onChange={() => handleChangeSelectAll(true)}\n                  label={\n                    <span\n                      className={`custom-control-label ${\n                        selectedItemsLength > 0 &&\n                        selectedItemsLength < itemsLength\n                          ? 'indeterminate'\n                          : ''\n                      }`}\n                    />\n                  }\n                />\n              </div>\n              <DropdownToggle\n                caret\n                color=\"primary\"\n                className=\"dropdown-toggle-split btn-lg\"\n              />\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.delete\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"pages.another-action\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </ButtonDropdown>\n          </div>\n          <Breadcrumb match={match} />\n        </div>\n\n        <div className=\"mb-2\">\n          <Button\n            color=\"empty\"\n            className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n          >\n            <IntlMessages id=\"pages.display-options\" />{' '}\n            <i className=\"simple-icon-arrow-down align-middle\" />\n          </Button>\n          <Collapse\n            isOpen={displayOptionsIsOpen}\n            className=\"d-md-block\"\n            id=\"displayOptions\"\n          >\n            <span className=\"mr-3 d-inline-block float-md-left\">\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'list' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('list')}\n              >\n                <DataListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'thumblist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('thumblist')}\n              >\n                <ThumbListIcon />\n              </a>\n              <a\n                href=\"#/\"\n                className={`mr-2 view-icon ${\n                  displayMode === 'imagelist' ? 'active' : ''\n                }`}\n                onClick={() => changeDisplayMode('imagelist')}\n              >\n                <ImageListIcon />\n              </a>\n            </span>\n\n            <div className=\"d-block d-md-inline-block pt-1\">\n              <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  <IntlMessages id=\"pages.orderby\" />\n                  {selectedOrderOption.label}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {orderOptions.map((order, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changeOrderBy(order.column)}\n                      >\n                        {order.label}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\n                <input\n                  type=\"text\"\n                  name=\"keyword\"\n                  id=\"search\"\n                  placeholder={messages['menu.search']}\n                  onKeyPress={(e) => onSearchKey(e)}\n                />\n              </div>\n            </div>\n            <div className=\"float-md-right pt-1\">\n              <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\n                  {selectedPageSize}\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {pageSizes.map((size, index) => {\n                    return (\n                      <DropdownItem\n                        key={index}\n                        onClick={() => changePageSize(size)}\n                      >\n                        {size}\n                      </DropdownItem>\n                    );\n                  })}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            </div>\n          </Collapse>\n        </div>\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n  );\n};\n\nexport default injectIntl(ListPageHeading);\n","import React from 'react';\nimport {\n  CustomInput,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../components/common/CustomSelectInput';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst AddNewModal = ({ modalOpen, toggleModal, categories }) => {\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"pages.add-new-modal-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label>\n          <IntlMessages id=\"pages.product-name\" />\n        </Label>\n        <Input />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.category\" />\n        </Label>\n        <Select\n          components={{ Input: CustomSelectInput }}\n          className=\"react-select\"\n          classNamePrefix=\"react-select\"\n          name=\"form-field-name\"\n          options={categories}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.description\" />\n        </Label>\n        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"pages.status\" />\n        </Label>\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio\"\n          name=\"customRadio\"\n          label=\"ON HOLD\"\n        />\n        <CustomInput\n          type=\"radio\"\n          id=\"exCustomRadio2\"\n          name=\"customRadio\"\n          label=\"PROCESSED\"\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"pages.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={toggleModal}>\n          <IntlMessages id=\"pages.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddNewModal;\n","/* eslint-disable no-unused-expressions */\nimport mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\n/**\n * Use mousetrap hook\n *\n * @param  {(string | string[])} handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  { function } handlerCallback - A function that is triggered on key combo catch.\n */\nexport default (handlerKey, handlerCallback) => {\n  const actionRef = useRef(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    mousetrap.bind(handlerKey, (evt, combo) => {\n      typeof actionRef.current === 'function' && actionRef.current(evt, combo);\n      evt.preventDefault();\n    });\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey]);\n};\n","import React from 'react';\nimport { ContextMenu, MenuItem } from 'react-contextmenu';\n\nconst ContextMenuContainer = ({ onContextMenu, onContextMenuClick }) => {\n  return (\n    <ContextMenu id=\"menu_id\" onShow={(e) => onContextMenu(e, e.detail.data)}>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'copy' }}>\n        <i className=\"simple-icon-docs\" /> <span>Copy</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'move' }}>\n        <i className=\"simple-icon-drawer\" /> <span>Move to archive</span>\n      </MenuItem>\n      <MenuItem onClick={onContextMenuClick} data={{ action: 'delete' }}>\n        <i className=\"simple-icon-trash\" /> <span>Delete</span>\n      </MenuItem>\n    </ContextMenu>\n  );\n};\n\nexport default ContextMenuContainer;\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst DataListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(DataListView);\n","import React from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardSubtitle,\n  CardImg,\n  CardText,\n  CustomInput,\n  Badge,\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ImageListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx sm=\"6\" lg=\"4\" xl=\"3\" className=\"mb-3\" key={product.id}>\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames({\n            active: isSelect,\n          })}\n        >\n          <div className=\"position-relative\">\n            <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n              <CardImg top alt={product.title} src={product.img} />\n            </NavLink>\n            <Badge\n              color={product.statusColor}\n              pill\n              className=\"position-absolute badge-top-left\"\n            >\n              {product.status}\n            </Badge>\n          </div>\n          <CardBody>\n            <Row>\n              <Colxx xxs=\"2\">\n                <CustomInput\n                  className=\"item-check mb-0\"\n                  type=\"checkbox\"\n                  id={`check_${product.id}`}\n                  checked={isSelect}\n                  onChange={() => {}}\n                  label=\"\"\n                />\n              </Colxx>\n              <Colxx xxs=\"10\" className=\"mb-3\">\n                <CardSubtitle>{product.title}</CardSubtitle>\n                <CardText className=\"text-muted text-small mb-0 font-weight-light\">\n                  {product.date}\n                </CardText>\n              </Colxx>\n            </Row>\n          </CardBody>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ImageListView);\n","import React from 'react';\nimport { Card, CustomInput, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\nimport { ContextMenuTrigger } from 'react-contextmenu';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst ThumbListView = ({ product, isSelect, collect, onCheckItem }) => {\n  return (\n    <Colxx xxs=\"12\" key={product.id} className=\"mb-3\">\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\n        <Card\n          onClick={(event) => onCheckItem(event, product.id)}\n          className={classnames('d-flex flex-row', {\n            active: isSelect,\n          })}\n        >\n          <NavLink to={`?p=${product.id}`} className=\"d-flex\">\n            <img\n              alt={product.title}\n              src={product.img}\n              className=\"list-thumbnail responsive border-0 card-img-left\"\n            />\n          </NavLink>\n          <div className=\"pl-2 d-flex flex-grow-1 min-width-zero\">\n            <div className=\"card-body align-self-center d-flex flex-column flex-lg-row justify-content-between min-width-zero align-items-lg-center\">\n              <NavLink to={`?p=${product.id}`} className=\"w-40 w-sm-100\">\n                <p className=\"list-item-heading mb-1 truncate\">\n                  {product.title}\n                </p>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.category}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-sm-100\">\n                {product.date}\n              </p>\n              <div className=\"w-15 w-sm-100\">\n                <Badge color={product.statusColor} pill>\n                  {product.status}\n                </Badge>\n              </div>\n            </div>\n            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n              <CustomInput\n                className=\"item-check mb-0\"\n                type=\"checkbox\"\n                id={`check_${product.id}`}\n                checked={isSelect}\n                onChange={() => {}}\n                label=\"\"\n              />\n            </div>\n          </div>\n        </Card>\n      </ContextMenuTrigger>\n    </Colxx>\n  );\n};\n\n/* React.memo detail : https://reactjs.org/docs/react-api.html#reactpurecomponent  */\nexport default React.memo(ThumbListView);\n","import React from 'react';\nimport { Row } from 'reactstrap';\nimport Pagination from './Pagination';\nimport ContextMenuContainer from './ContextMenuContainer';\nimport DataListView from './DataListView';\nimport ImageListView from './ImageListView';\nimport ThumbListView from './ThumbListView';\n\nfunction collect(props) {\n  return { data: props.data };\n}\n\nconst ListPageListing = ({\n  items,\n  displayMode,\n  selectedItems,\n  onCheckItem,\n  currentPage,\n  totalPage,\n  onContextMenuClick,\n  onContextMenu,\n  onChangePage,\n}) => {\n  return (\n    <Row>\n      {items.map((product) => {\n        if (displayMode === 'imagelist') {\n          return (\n            <ImageListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        if (displayMode === 'thumblist') {\n          return (\n            <ThumbListView\n              key={product.id}\n              product={product}\n              isSelect={selectedItems.includes(product.id)}\n              collect={collect}\n              onCheckItem={onCheckItem}\n            />\n          );\n        }\n        return (\n          <DataListView\n            key={product.id}\n            product={product}\n            isSelect={selectedItems.includes(product.id)}\n            onCheckItem={onCheckItem}\n            collect={collect}\n          />\n        );\n      })}\n      <Pagination\n        currentPage={currentPage}\n        totalPage={totalPage}\n        onChangePage={(i) => onChangePage(i)}\n      />\n      <ContextMenuContainer\n        onContextMenuClick={onContextMenuClick}\n        onContextMenu={onContextMenu}\n      />\n    </Row>\n  );\n};\n\nexport default React.memo(ListPageListing);\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if (`/${sub}` === adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1 style={{ marginBottom: '0rem' }}>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import React, { useState, useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { servicePath } from '../../../../constants/defaultValues';\n\nimport ListPageHeading from '../../../../containers/pages/ListPageHeading';\nimport AddNewModal from '../../../../containers/pages/AddNewModal';\nimport ListPageListing from '../../../../containers/pages/ListPageListing';\nimport useMousetrap from '../../../../hooks/use-mousetrap';\n\nconst getIndex = (value, arr, prop) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i][prop] === value) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst apiUrl = `${servicePath}/cakes/paging`;\n\nconst orderOptions = [\n  { column: 'title', label: 'Product Name' },\n  { column: 'category', label: 'Category' },\n  { column: 'status', label: 'Status' },\n];\nconst pageSizes = [4, 8, 12, 20];\n\nconst categories = [\n  { label: 'Cakes', value: 'Cakes', key: 0 },\n  { label: 'Cupcakes', value: 'Cupcakes', key: 1 },\n  { label: 'Desserts', value: 'Desserts', key: 2 },\n];\n\nconst DataListPages = ({ match }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [displayMode, setDisplayMode] = useState('list');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPageSize, setSelectedPageSize] = useState(8);\n  const [selectedOrderOption, setSelectedOrderOption] = useState({\n    column: 'title',\n    label: 'Product Name',\n  });\n\n  const [modalOpen, setModalOpen] = useState(false);\n  const [totalItemCount, setTotalItemCount] = useState(0);\n  const [totalPage, setTotalPage] = useState(1);\n  const [search, setSearch] = useState('');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [items, setItems] = useState([]);\n  const [lastChecked, setLastChecked] = useState(null);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedPageSize, selectedOrderOption]);\n\n  useEffect(() => {\n    async function fetchData() {\n      axios\n        .get(\n          `${apiUrl}?pageSize=${selectedPageSize}&currentPage=${currentPage}&orderBy=${selectedOrderOption.column}&search=${search}`\n        )\n        .then((res) => {\n          return res.data;\n        })\n        .then((data) => {\n          setTotalPage(data.totalPage);\n          setItems(\n            data.data.map((x) => {\n              return { ...x, img: x.img.replace('img/', 'img/products/') };\n            })\n          );\n          setSelectedItems([]);\n          setTotalItemCount(data.totalItem);\n          setIsLoaded(true);\n        });\n    }\n    fetchData();\n  }, [selectedPageSize, currentPage, selectedOrderOption, search]);\n\n  const onCheckItem = (event, id) => {\n    if (\n      event.target.tagName === 'A' ||\n      (event.target.parentElement && event.target.parentElement.tagName === 'A')\n    ) {\n      return true;\n    }\n    if (lastChecked === null) {\n      setLastChecked(id);\n    }\n\n    let selectedList = [...selectedItems];\n    if (selectedList.includes(id)) {\n      selectedList = selectedList.filter((x) => x !== id);\n    } else {\n      selectedList.push(id);\n    }\n    setSelectedItems(selectedList);\n\n    if (event.shiftKey) {\n      let newItems = [...items];\n      const start = getIndex(id, newItems, 'id');\n      const end = getIndex(lastChecked, newItems, 'id');\n      newItems = newItems.slice(Math.min(start, end), Math.max(start, end) + 1);\n      selectedItems.push(\n        ...newItems.map((item) => {\n          return item.id;\n        })\n      );\n      selectedList = Array.from(new Set(selectedItems));\n      setSelectedItems(selectedList);\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const handleChangeSelectAll = (isToggle) => {\n    if (selectedItems.length >= items.length) {\n      if (isToggle) {\n        setSelectedItems([]);\n      }\n    } else {\n      setSelectedItems(items.map((x) => x.id));\n    }\n    document.activeElement.blur();\n    return false;\n  };\n\n  const onContextMenuClick = (e, data) => {\n    console.log('onContextMenuClick - selected items', selectedItems);\n    console.log('onContextMenuClick - action : ', data.action);\n  };\n\n  const onContextMenu = (e, data) => {\n    const clickedProductId = data.data;\n    if (!selectedItems.includes(clickedProductId)) {\n      setSelectedItems([clickedProductId]);\n    }\n\n    return true;\n  };\n\n  useMousetrap(['ctrl+a', 'command+a'], () => {\n    handleChangeSelectAll(false);\n  });\n\n  useMousetrap(['ctrl+d', 'command+d'], () => {\n    setSelectedItems([]);\n    return false;\n  });\n\n  const startIndex = (currentPage - 1) * selectedPageSize;\n  const endIndex = currentPage * selectedPageSize;\n\n  return !isLoaded ? (\n    <div className=\"loading\" />\n  ) : (\n    <>\n      <div className=\"disable-text-selection\">\n        <ListPageHeading\n          heading=\"menu.data-list\"\n          displayMode={displayMode}\n          changeDisplayMode={setDisplayMode}\n          handleChangeSelectAll={handleChangeSelectAll}\n          changeOrderBy={(column) => {\n            setSelectedOrderOption(\n              orderOptions.find((x) => x.column === column)\n            );\n          }}\n          changePageSize={setSelectedPageSize}\n          selectedPageSize={selectedPageSize}\n          totalItemCount={totalItemCount}\n          selectedOrderOption={selectedOrderOption}\n          match={match}\n          startIndex={startIndex}\n          endIndex={endIndex}\n          selectedItemsLength={selectedItems ? selectedItems.length : 0}\n          itemsLength={items ? items.length : 0}\n          onSearchKey={(e) => {\n            if (e.key === 'Enter') {\n              setSearch(e.target.value.toLowerCase());\n            }\n          }}\n          orderOptions={orderOptions}\n          pageSizes={pageSizes}\n          toggleModal={() => setModalOpen(!modalOpen)}\n        />\n        <AddNewModal\n          modalOpen={modalOpen}\n          toggleModal={() => setModalOpen(!modalOpen)}\n          categories={categories}\n        />\n        <ListPageListing\n          items={items}\n          displayMode={displayMode}\n          selectedItems={selectedItems}\n          onCheckItem={onCheckItem}\n          currentPage={currentPage}\n          totalPage={totalPage}\n          onContextMenuClick={onContextMenuClick}\n          onContextMenu={onContextMenu}\n          onChangePage={setCurrentPage}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default DataListPages;\n","import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","import React from 'react';\nimport { Nav, NavItem, NavLink } from 'reactstrap';\nimport { Colxx } from '../../components/common/CustomBootstrap';\n\nconst Pagination = ({\n  totalPage = 0,\n  currentPage = 1,\n  numberLimit = 5,\n  lastIsActive = true,\n  firstIsActive = true,\n  onChangePage,\n}) => {\n  let startPoint = 1;\n  let endPoint = numberLimit;\n\n  if (numberLimit > totalPage) {\n    startPoint = 1;\n    endPoint = totalPage;\n  } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\n    startPoint = 1;\n    endPoint = numberLimit;\n  } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\n    startPoint = currentPage - parseInt(numberLimit / 2, 10);\n    endPoint = currentPage + parseInt(numberLimit / 2, 10);\n  } else {\n    startPoint = totalPage - (numberLimit - 1);\n    endPoint = totalPage;\n  }\n  startPoint = startPoint === 0 ? 1 : startPoint;\n  const points = [];\n  for (let i = startPoint; i <= endPoint; i += 1) {\n    points.push(i);\n  }\n\n  const firstPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const lastPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  const prevPageButtonClassName = currentPage <= 1 ? 'disabled' : '';\n  const nextPageButtonClassName = currentPage >= totalPage ? 'disabled' : '';\n  return totalPage > 1 ? (\n    <Colxx xxs=\"12\" className=\"mt-3 mb-3\">\n      <Nav className=\"pagination justify-content-center\">\n        {firstIsActive && (\n          <NavItem className={`page-item ${firstPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link first c-pointer\"\n              onClick={() => onChangePage(1)}\n            >\n              <i className=\"simple-icon-control-start\" />\n            </NavLink>\n          </NavItem>\n        )}\n\n        <NavItem className={`page-item ${prevPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link prev c-pointer\"\n            onClick={() => onChangePage(currentPage - 1)}\n          >\n            <i className=\"simple-icon-arrow-left\" />\n          </NavLink>\n        </NavItem>\n        {points.map((i) => {\n          return (\n            <NavItem\n              key={i}\n              className={`page-item ${currentPage === i && 'active'}`}\n            >\n              <NavLink\n                className=\"page-link c-pointer\"\n                onClick={() => onChangePage(i)}\n              >\n                {i}\n              </NavLink>\n            </NavItem>\n          );\n        })}\n        <NavItem className={`page-item ${nextPageButtonClassName}`}>\n          <NavLink\n            className=\"page-link next c-pointer\"\n            onClick={() => onChangePage(currentPage + 1)}\n          >\n            <i className=\"simple-icon-arrow-right\" />\n          </NavLink>\n        </NavItem>\n        {lastIsActive && (\n          <NavItem className={`page-item ${lastPageButtonClassName}`}>\n            <NavLink\n              className=\"page-link last c-pointer\"\n              onClick={() => onChangePage(totalPage)}\n            >\n              <i className=\"simple-icon-control-end\" />\n            </NavLink>\n          </NavItem>\n        )}\n      </Nav>\n    </Colxx>\n  ) : (\n    <Colxx xxs=\"12\" className=\"mt-2\" />\n  );\n};\n\nexport default Pagination;\n"],"sourceRoot":""}