(this["webpackJsonpklw-bank"]=this["webpackJsonpklw-bank"]||[]).push([[317],{1737:function(e,t,r){"use strict";r.r(t),r.d(t,"default",(function(){return J}));var o=r(4),n=r(12),a=r(1),i=r(89),l=r(88),s=r(90),c=r(91),u=r(94),y=r(187),p=r(129),b=(r(177),r(281)),d=r(110),v=r(128),f=r(97),j=(r(96),r(98),r(93),r(136)),O=r(95),h=r(130),m=r(132),S=r(259),g=r(330),k=r(311),w=r(326),C=r(425),x=r(302),G=r(244),P=r(404),_=r(346),R=r(562),F=r(394),E=r(444),M=["atom","xml"],L={base:P.a,key:"type",typeMap:{"simple-line":_.a},errorContext:"symbol"},T={base:P.a,key:"type",typeMap:{"picture-marker":R.a,"simple-marker":F.a},errorContext:"symbol"},A={base:P.a,key:"type",typeMap:{"simple-fill":E.a},errorContext:"symbol"},D=function(e){Object(s.a)(r,e);var t=Object(c.a)(r);function r(){var e;Object(i.a)(this,r);for(var o=arguments.length,n=new Array(o),a=0;a<o;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).description=null,e.fullExtent=null,e.legendEnabled=!0,e.lineSymbol=null,e.pointSymbol=null,e.polygonSymbol=null,e.operationalLayerType="GeoRSS",e.url=null,e.type="geo-rss",e}return Object(l.a)(r,[{key:"normalizeCtorArgs",value:function(e,t){return"string"==typeof e?Object(a.a)({url:e},t):e}},{key:"readFeatureCollections",value:function(e,t){return t.featureCollection.layers.forEach((function(e){var t,r=e.layerDefinition.drawingInfo.renderer.symbol;r&&"esriSFS"===r.type&&(null===(t=r.outline)||void 0===t?void 0:t.style.includes("esriSFS"))&&(r.outline.style="esriSLSSolid")})),t.featureCollection.layers}},{key:"hasPoints",get:function(){return this._hasGeometry("esriGeometryPoint")}},{key:"hasPolylines",get:function(){return this._hasGeometry("esriGeometryPolyline")}},{key:"hasPolygons",get:function(){return this._hasGeometry("esriGeometryPolygon")}},{key:"title",get:function(){var e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?Object(v.n)(this.url,M)||"GeoRSS":e||""},set:function(e){this._set("title",e)}},{key:"load",value:function(e){var t=this,r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(d.m).then((function(){return t._fetchService(r)})).then((function(e){t.read(e,{origin:"service"})}))),Promise.resolve(this)}},{key:"hasDataChanged",value:function(){var e=Object(n.a)(Object(o.a)().mark((function e(){var t;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._fetchService();case 2:return t=e.sent,e.abrupt("return",(this.read(t,{origin:"service",ignoreDefaults:!0}),!0));case 4:case"end":return e.stop()}}),e,this)})));return function(){return e.apply(this,arguments)}}()},{key:"_fetchService",value:function(){var e=Object(n.a)(Object(o.a)().mark((function e(t){var r,n,a,i;return Object(o.a)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n=this.spatialReference,e.next=3,Object(p.default)(y.a.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:Object(m.m)(n)?void 0:null!==(r=n.wkid)&&void 0!==r?r:JSON.stringify(n)},signal:t});case 3:return a=e.sent,i=a.data,e.abrupt("return",i);case 6:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}()},{key:"_hasGeometry",value:function(e){var t,r;return null!==(t=null===(r=this.featureCollections)||void 0===r?void 0:r.some((function(t){var r,o;return(null===(r=t.featureSet)||void 0===r?void 0:r.geometryType)===e&&(null===(o=t.featureSet.features)||void 0===o?void 0:o.length)>0})))&&void 0!==t&&t}}]),r}(Object(g.a)(Object(C.a)(Object(k.a)(Object(w.a)(Object(x.a)(Object(b.a)(S.a)))))));Object(u.a)([Object(f.b)()],D.prototype,"description",void 0),Object(u.a)([Object(f.b)()],D.prototype,"featureCollections",void 0),Object(u.a)([Object(j.a)("service","featureCollections",["featureCollection.layers"])],D.prototype,"readFeatureCollections",null),Object(u.a)([Object(f.b)({type:h.a,json:{name:"lookAtExtent"}})],D.prototype,"fullExtent",void 0),Object(u.a)([Object(f.b)(G.c)],D.prototype,"id",void 0),Object(u.a)([Object(f.b)(G.e)],D.prototype,"legendEnabled",void 0),Object(u.a)([Object(f.b)({types:L,json:{write:!0}})],D.prototype,"lineSymbol",void 0),Object(u.a)([Object(f.b)({type:["show","hide"]})],D.prototype,"listMode",void 0),Object(u.a)([Object(f.b)({types:T,json:{write:!0}})],D.prototype,"pointSymbol",void 0),Object(u.a)([Object(f.b)({types:A,json:{write:!0}})],D.prototype,"polygonSymbol",void 0),Object(u.a)([Object(f.b)({type:["GeoRSS"]})],D.prototype,"operationalLayerType",void 0),Object(u.a)([Object(f.b)(G.o)],D.prototype,"url",void 0),Object(u.a)([Object(f.b)({json:{origins:{service:{read:{source:"name",reader:function(e){return e||void 0}}}}}})],D.prototype,"title",null),Object(u.a)([Object(f.b)({readOnly:!0,json:{read:!1},value:"geo-rss"})],D.prototype,"type",void 0);var J=D=Object(u.a)([Object(O.a)("esri.layers.GeoRSSLayer")],D)}}]);
//# sourceMappingURL=317.01657b09.chunk.js.map